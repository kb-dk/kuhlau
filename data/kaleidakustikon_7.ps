%!PS-Adobe-1.0
%%Creator: Mup (Version 6.1)
%%Title: music:  from kaleidakustikon_7.mup
%%CreationDate: Tue Jul 30 16:36:26 2013
%%Pages: (atend)
%%DocumentFonts: (atend)
%%BoundingBox: 0 0 595 842
%%DocumentMedia: Default 595 842 0 () ()
%%Orientation: Landscape
%%EndComments
% Mup prolog Copyright (c) 1995, 1996, 1997, 1998, 1999, 2000, 2003, 2004,
% 2008, 2009, 2012 by Arkkra Enterprises
% All rights reserved

% Mup PostScript Prolog 6.1 for use with Mup 6.1

% lwid is used as the width of a standard (thin) line in the music
% character definitions.
/lwid 70 def
/halflwid lwid 2 div def

% Define the following for use in do_upshortnote, do_dnshortnote, and
% do_shortrest; it has to be done outside of the music font definition.
/utildict 10 dict def
utildict begin
	/setnumflags	{	/numflags	exch def } def
	/sethooksm1	{	/hooksm1	exch def } def
	/setoffsets	{	/offsets	exch def } def
	/setx		{	/x		exch def } def
	/sety		{	/y		exch def } def
end

% Define a music character font.  Each music character is defined as if it
% were a normal ASCII character in a strange font where "A" looks like a
% treble clef, "B" looks like a bass clef, etc.

/mfont0 100 dict def
mfont0 begin
	/FontType 3 def
	/FontMatrix [ .001 0 0 0.001 0 0 ] def
	/FontBBox [ -2000 -4030 2000 4030 ] def
	/FontName (Mfont0) def

	% set up Encoding vector with standard names
	/Encoding 256 array def
	StandardEncoding Encoding copy
	pop

	% the following definitions are used for quarter rests
	/topx -170 def /topy 950 def
	/cor1x 250 def /cor1y 450 def
	/cor2x -300 def /cor2y 200 def
	/cor3x 250 def /cor3y -400 def

	% the following definitions are used for double sharps
	/limit 300 halflwid add def
	/off 70 def
	/inbendsmall limit 200 sub def
	/inbendbig limit 20 sub def
	/outbendsmall 100 def
	/outbendbig outbendsmall off add def

	%%%%% define routines that will be used by multiple characters %%%%%
	/do_1n {
		gsave
		newpath -10 rotate 1.6 1 scale
		0 0 325 0 360 arc		%outer ellipse
		1 1.6 div 1 scale 10 rotate	%back to original
		35 rotate 0.85 1.1 scale
		0 0 275 0 360 arc		%inner ellipse
		eofill
		grestore
	} def
	/do_upflag {
		-315 0 moveto
		-300 100 -100 480 0 600 curveto
		300 960 350 1500 200 1700 curveto
		130 1700 lineto
		350 1200 50 650 -315 600 curveto
		fill
	} def
	/do_flat {
		-250 -400 moveto	%outer edge of loop
		500 0 350 650 -250 160 curveto
		-250 160 lwid sub lineto %inner edge of loop
		100 400 300 0 -250 -400 lwid add curveto
		fill

		lwid setlinewidth	%stem
		-250 1100 moveto -250 -400 lineto stroke
	} def
	/do_diamond {
		newpath
		420 0 moveto 0 300 lineto -420 0 lineto
		0 -300 lineto closepath
		259 -29 moveto -41 185 lineto -259 29 lineto
		41 -185 lineto closepath
		eofill
	} def
	/do_2n {
		gsave
		newpath 25 rotate 1.4 1 scale
		0 0 315 0 360 arc		%outer ellipse
		1 1.4 div 1 scale		%back to original
		1.3 0.5 scale
		0 0 310 0 360 arc		%inner ellipse
		eofill
		grestore
	} def
	/do_4n {
		gsave
		newpath 25 rotate 1.35 1 scale
		0 0 310 0 360 arc fill
		grestore
	} def
	/do_com {
		newpath
		330 250 150 0 360 arc fill	%knob at upper right
		465 300 moveto			%outer boundary
		410 500 200 635 0 635 curveto
		-750 635 -750 -635 0 -635 curveto
		350 -635 480 -300 500 -100 curveto
		430 -100 lineto			%inner boundary
		380 -300 250 -565 0 -565 curveto
		-450 -565 -450 565 0 565 curveto
		200 565 370 350 395 300 curveto
		fill
	} def
	/do_ferm {
		0 0 800 lwid sub 0 180 arc	%inner arc
		-800 0 lineto
		0 270 lwid sub 800 180 0 arcn	%outer arc
		800 0 lineto fill
		0 120 120 0 360 arc fill	%the dot
	} def
	/do_mor {
		gsave
		0.7 1 scale	%scrunch the following horizontally
		45 rotate	%to pretend all lines horz or vertical
		0 1 1 {
			pop	%we don't need the loop variable
			%one half of the mordent
			0 40 moveto 350 40 lineto 350 -460 lineto
			750 -460 lineto 750 -540 lineto
			150 -540 lineto 150 -40 lineto
			0 -40 lineto fill
			180 rotate	%to do the other half
		} for
		grestore
	} def
	/do_turn {
		gsave
		0 1 1 {
			pop	%we don't need the loop variable
			0 -100 moveto	%outer boundary
			200 -400 625 -400 625 0 curveto
			625 200 500 325 300 325 curveto
			300 185 lineto	%inner boundary
			450 255 555 150 555 0 curveto
			555 -350 250 -250 0 100 curveto
			fill
			300 255 70 0 360 arc fill %knob on end
			180 rotate	%to do the other half
		} for
		grestore
	} def

	/do_upshortnote {
		utildict begin
		setnumflags		%set numflags from the stack
		gsave
		-330 0 translate	%half a flag width
		do_4n			%do a quarter note head
		lwid setlinewidth
		370 0 moveto
		370 2100 numflags 2 sub flagsep mul add lineto stroke
		670 2100 numflags 2 sub flagsep mul add translate
		1 -1 scale		%reflect across X axis
		0 1 numflags 1 sub {
			do_upflag	%do an upflag
			pop		%we don't need the loop variable
			0 flagsep translate
		} for
		grestore
		end
	} def

	/do_dnshortnote {
		utildict begin
		setnumflags		%set numflags from the stack
		do_4n			%do a quarter note head
		lwid setlinewidth
		-370 0 moveto
		-370 -2100 numflags 2 sub flagsep mul sub lineto stroke
		gsave
		-70 -2100 numflags 2 sub flagsep mul sub translate
		0 1 numflags 1 sub {
			do_upflag	%do an upflag
			pop		%we don't need the loop variable
			0 flagsep translate
		} for
		grestore
		end
	} def

	/do_shortrest {
		utildict begin
		sety setx setoffsets sethooksm1	%set variable from the stack
		gsave
		-105.8 offsets mul -600 offsets mul translate
		0 1 hooksm1 {		%loop once per hook
			newpath
			1 setlinewidth
			gsave
			1 1.2 scale
			-150 300 1.2 div 140 0 360 arc fill 	%the dot
			grestore
			lwid setlinewidth
			-50 700 550 255 315 arc		%rest of the hook
			hooksm1 lt { stroke 105.8 600 translate } if
		} for
		x y lineto stroke
		grestore
		end
	} def


	% subsidiary dictionary of character definitions
	/CharStrings 128 dict def
	CharStrings begin

		/.notdef {} def

		% Here are the definitions of the characters.  A stepsize here
		% is 300 units (assuming the character is drawn at its default
		% size).

		% gclef
		/A {
			newpath
			%start with inner curl, inside boundary
			-50 -300 moveto
			-450 600 700 700 750 0 curveto
			750 -800 -700 -800 -700 200 curveto
			-700 900 500 1400 520 2250 curveto
			520 2900 300 3000 200 3000 curveto
			100 3000 -400 2500 -200 1800 curveto
			350 -600 lineto
			720 -1600 0 -1650 -400 -1400 curveto

			%go back to start, drawing the other boundary
			-400 -1480 lineto
			0 -1700 800 -1700 430 -600 curveto
			-120 1800 lineto
			-300 2400 200 2800 250 2800 curveto
			400 2800 430 2700 430 2450 curveto
			430 1800 -900 1200 -900 300 curveto
			-750 -900 800 -900 850 0 curveto
			900 1100 -750 900 -120 -300 curveto fill

			%circle at the bottom
			-300 -1250 250 0 360 arc fill
		} def

		% fclef
		/B {
			newpath
			%start with outside boundary, at bottom
			-1000 -1700 moveto
			100 -1100 500 -600 450 0 curveto
			450 850 -1100 850 -950 0 curveto

			%go back to start, drawing the other boundary
			-880 0 lineto
			-920 400 -600 560 -300 560 curveto
			0 560 150 400 150 0 curveto
			150 -400 100 -900 -1000 -1620 curveto fill

			%circle at the left
			newpath
			-700 0 250 0 360 arc fill

			%do the two dots after the main curve
			700 -300 100 0 360 arc fill
			700 300 100 0 360 arc fill
		} def

		% cclef
		/C {
			gsave
			%do upper curved part, then scale to do mirror image
			0 1 1 {
				pop	%we don't need the loop variable
				%outer boundary of curve
				-170 0 moveto 100 300 lineto
				400 -200 750 300 750 650 curveto
				750 1100 450 1235 250 1235 curveto
				0 1235 -143 1100 -143 950 curveto

				%inner boundary of curve
				0 950 lineto
				0 1100 30 1165 250 1165 curveto
				300 1165 450 1100 450 650 curveto
				450 400 400 -100 100 400 curveto
				-270 0 lineto fill
				%stroke
				%-270 0 moveto 100 400 lineto
				%400 -100 450 400 450 650 curveto
				%450 1100 300 1165 250 1165 curveto
				%30 1165 0 1100 0 950 curveto
				%stroke

				%elliptical ball at end of curve
				gsave
				1.3 1 scale
				10 950 120 0 360 arc fill
				grestore
				1 -1 scale	%reflect across X axis
			} for
			grestore

			% two vertical lines on the left
			300 setlinewidth -600 -1200 halflwid sub moveto
			-600 1200 halflwid add lineto stroke
			lwid setlinewidth -300 -1200 halflwid sub moveto
			-300 1200 halflwid add lineto stroke
		} def

		% dblwhole
		/D {
			do_1n		%do a whole note
			lwid setlinewidth
			-490 -600 moveto -490 600 lineto stroke
			490 -600 moveto 490 600 lineto stroke
		} def

		% 1n
		/E {
			do_1n		%do a whole note
		} def

		% 2n
		/F {
			do_2n		%do a half note
		} def

		% 4n
		/G {
			do_4n		%do a quarter note head
		} def

		% upflag
		/H {
			do_upflag		%do an upflag
		} def

		% dnflag
		/I {
			gsave
			1 -1 scale	%reflect across X axis
			do_upflag		%do an upflag
			grestore
		} def

		% dwhrest
		/J {
			300 setlinewidth
			0 0 moveto 0 600 lineto stroke
		} def

		% 1rest
		/K {
			lwid setlinewidth
			-750 600 moveto 750 600 lineto stroke
			300 setlinewidth
			-400 450 moveto 400 450 lineto stroke
		} def

		% 2rest
		/L {
			lwid setlinewidth
			-750 0 moveto 750 0 lineto stroke
			300 setlinewidth
			-400 150 moveto 400 150 lineto stroke
		} def

		% 4rest
		/M {
			newpath
			cor3x cor3y halflwid add moveto
			%-400 -200 -450 -650 50 -950 lwid add curveto
			-450 -50 -450 -650 50 -950 lwid add curveto
			-150 -650 -100 -250 cor3x cor3y halflwid sub curveto
			fill

			cor1x cor1y moveto cor1x 200 sub cor1y 200 add lineto
			cor2x cor2y lineto cor2x 200 add cor2y 200 sub lineto
			fill

			lwid setlinewidth
			topx topy moveto cor1x cor1y lineto stroke
			cor2x cor2y moveto cor3x cor3y lineto stroke
		} def

		% 8rest
		/N {
			0 0 0 -600 do_shortrest
		} def

		% 16rest
		/O {
			1 1 100 -1200 do_shortrest
		} def

		% 32rest
		/P {
			2 1 0 -1800 do_shortrest
		} def

		% 64rest
		/Q {
			3 2 -80 -2100 do_shortrest
		} def

		% 128rest
		/R {
			4 2 -150 -2700 do_shortrest
		} def

		% 256rest
		/S {
			5 3 -280 -3300 do_shortrest
		} def

		% dot
		/T {
			newpath
			0 0 120 0 360 arc fill
		} def

		% nat
		/U {
			% fill crossbars so that we can do parallelograms
			-235 -470 moveto -235 -270 lineto
			235 -130 lineto 235 -330 lineto fill
			-235 130 moveto -235 330 lineto
			235 470 lineto 235 270 lineto fill

			% vertical strokes
			lwid setlinewidth
			-200 -380 moveto -200 850 lineto stroke
			200 -850 moveto 200 380 lineto stroke
		} def

		% sharp
		/V {
			% fill crossbars so that we can do parallelograms
			-325 -480 moveto -325 -280 lineto
			325 -120 lineto 325 -320 lineto fill
			-325 120 moveto -325 320 lineto
			325 480 lineto 325 280 lineto fill

			% vertical strokes
			lwid setlinewidth
			-150 -930 moveto -150 880 lineto stroke
			150 -880 moveto 150 930 lineto stroke
		} def

		% flat
		/W {
			do_flat		%do a flat
		} def

		% dblsharp
		/X {
			gsave
			0 1 3 {		%loop once for each of 4 sticks
				pop	%we don't need the loop variable
				0 off neg moveto
				outbendbig outbendsmall lineto
				inbendbig inbendsmall lineto
				limit limit lineto
				inbendsmall inbendbig lineto
				outbendsmall outbendbig lineto
				off neg 0 lineto
				fill
				-90 rotate
			} for
			grestore
		} def

		% dblflat
		/Y {
			-290 580 290 {	%loop once for each flat

				gsave
				1 setlinewidth
				0 translate	%translate left/right (loop var)
				do_flat		%do a flat
				grestore

			} for
		} def

		% xnote
		/Z {
			gsave
			1.15 1 scale 120 setlinewidth 1 setlinecap	%round
			-300 -300 moveto 300 300 lineto stroke
			-300 300 moveto 300 -300 lineto stroke
			grestore
		} def

		% dwhdiamond
		/a {
			do_diamond	%do a diamond
			lwid setlinewidth
			-420 -600 moveto -420 600 lineto stroke
			420 -600 moveto 420 600 lineto stroke
		} def

		% diamond
		/b {
			do_diamond	%do a diamond
		} def

		% filldiamond
		/c {
			420 0 moveto 0 300 lineto
			-420 0 lineto 0 -300 lineto fill
		} def

		% up2n
		/d {
			lwid setlinewidth
			380 0 moveto 380 2100 lineto stroke
			do_2n		%do a half note
		} def

		% dn2n
		/e {
			lwid setlinewidth
			-380 0 moveto -380 -2100 lineto stroke
			do_2n		%do a half note
		} def

		% up4n
		/f {
			do_4n		%do a quarter note head
			lwid setlinewidth
			370 0 moveto 370 2100 lineto stroke
		} def

		% dn4n
		/g {
			do_4n		%do a quarter note head
			lwid setlinewidth
			-370 0 moveto -370 -2100 lineto stroke
		} def

		% up8n
		/h {
			gsave
			-330 0 translate	% half a flag width
			do_4n		%do a quarter note head
			lwid setlinewidth
			370 0 moveto 370 2100 lineto stroke
			670 2100 translate
			1 -1 scale	%reflect across X axis
			do_upflag		%do an upflag
			grestore
		} def

		% dn8n
		/i {
			do_4n		%do a quarter note head
			lwid setlinewidth
			-370 0 moveto -370 -2100 lineto stroke
			gsave
			-70 -2100 translate
			do_upflag		%do an upflag
			grestore
		} def

		% up16n
		/j {
			2 do_upshortnote
		} def

		% dn16n
		/k {
			2 do_dnshortnote
		} def

		% up32n
		/l {
			3 do_upshortnote
		} def

		% dn32n
		/m {
			3 do_dnshortnote
		} def

		% up64n
		/n {
			4 do_upshortnote
		} def

		% dn64n
		/o {
			4 do_dnshortnote
		} def

		% up128n
		/p {
			5 do_upshortnote
		} def

		% dn128n
		/q {
			5 do_dnshortnote
		} def

		% up256n
		/r {
			6 do_upshortnote
		} def

		% dn256n
		/s {
			6 do_dnshortnote
		} def

		% com
		/t {
			do_com		%do a common time symbol
		} def

		% cut
		/u {
			do_com		%do a common time symbol
			lwid setlinewidth
			0 -900 moveto 0 900 lineto stroke
		} def

		% begped
		/v {
			lwid setlinewidth
			-200 600 moveto -200 0 lineto 200 0 lineto stroke
		} def

		% pedal
		/w {
			lwid setlinewidth
			-500 0 moveto -450 0 lineto 0 600 lineto
			450 0 lineto 500 0 lineto stroke
		} def

		% endped
		/x {
			lwid setlinewidth
			200 600 moveto 200 0 lineto -200 0 lineto stroke
		} def

		% dnbow
		/y {
			lwid setlinewidth
			-350 0 moveto -350 900 lineto stroke
			350 0 moveto 350 900 lineto stroke
			200 setlinewidth
			-350 800 moveto 350 800 lineto stroke
		} def

		% upbow
		/z {
			lwid setlinewidth
			-300 900 moveto 0 0 lineto 300 900 lineto stroke
		} def

		% wedge
		/one {
			0 0 moveto -150 500 lineto 150 500 lineto fill
		} def

		% uwedge
		/two {
			-150 0 moveto 150 0 lineto 0 500 lineto fill
		} def

		% ferm
		/three {
			newpath
			do_ferm		%do a right side up fermata
		} def

		% uferm
		/four {
			newpath
			gsave
			0 270 lwid sub 800 add translate %baseline at bottom
			180 rotate			%upside down
			do_ferm		%do a right side up fermata
			grestore
		} def

		% sign
		/five {
			gsave
			%do upper left curved part, upper right dot;
			%then rotate 180 to do other half
			0 1 1 {
				pop	%we don't need the loop variable
				0 100 moveto		%inner boundary
				-1000 300 -400 750 -200 700 curveto
				-200 800 lineto		%outer boundary
				-550 900 -1100 100 0 -100 curveto
				fill
				%dot at end of curve
				-200 700 100 0 360 arc fill
				%dot in upper right quadrant
				500 200 70 0 360 arc fill
				180 rotate
			} for
			grestore

			%slash through middle
			lwid setlinewidth
			-400 -800 moveto 400 800 lineto stroke
		} def

		% coda
		/six {
			newpath
			gsave
			0.6 1 scale
			0 0 550 0 360 arc	%outside boundary
			1 0.6 div 1 scale	%back to original
			0.9 1 scale
			0 0 650 0 360 arc	%inside boundary
			eofill
			grestore
			lwid setlinewidth
			0 -850 moveto 0 850 lineto stroke
			-800 0 moveto 800 0 lineto stroke
		} def

		% mor
		/seven {
			do_mor		%do a mordent
		} def

		% invmor
		/eight {
			do_mor		%do a mordent
			lwid setlinewidth
			0 -450 moveto 0 450 lineto stroke
		} def

		% turn
		/nine {
			do_turn		%do a turn
		} def

		% invturn
		/zero {
			gsave
			1 -1 scale	%reflect across X axis
			do_turn		%do a turn
			grestore
		} def

		% acc_gt
		/numbersign {
			lwid setlinewidth
			-500 300 moveto 500 0 lineto -500 -300 lineto stroke
		} def

		% acc_hat
		/dollar {
			newpath
			-365 0 moveto 0 860 lineto 365 0 lineto
			150 0 lineto -75 530 lineto -300 0 lineto fill
		} def

		% acc_uhat
		/quotedbl {
			newpath
			365 860 moveto 0 0 lineto -365 860 lineto
			-150 860 lineto 75 330 lineto 300 860 lineto fill
		} def

		% tr
		/asterisk {
			%vertical bar of t
			-350 1000 moveto -550 200 lineto
			-612.5 -50 -212.5 -50 -160 200 curveto
			-230 200 lineto
			-300 50 -420 50 -400 200 curveto
			-200 1000 lineto fill

			%crossbar of t and vertical bar of r
			-700 600 moveto -160 600 lineto
			20 600 30 520 60 440 curveto
			-50 0 lineto 70 0 lineto 180 440 lineto
			190 480 100 670 -150 670 curveto
			-690 670 lineto fill

			%horizontal curve of r
			100 480 moveto
			300 630 450 700 650 550 curveto
			560 480 lineto
			450 630 300 560 100 390 curveto
			fill

			%knob at end of r
			600 460 100 0 360 arc fill
		} def

		% leg
		/comma {
			100 setlinewidth
			-400 0 moveto 400 0 lineto stroke
		} def

		% rr
		/hyphen {
			100 setlinewidth
			-400 0 moveto 0 1000 lineto stroke
			0 0 moveto 400 1000 lineto stroke
		} def

		% measrpt
		/period {
			newpath -450 400 150 0 360 arc fill
			newpath 450 -400 150 0 360 arc fill
			200 setlinewidth
			-550 -600 moveto 550 600 lineto stroke
		} def

		% copyright
		/slash {
			lwid setlinewidth
			newpath 0 400 400 0 360 arc stroke
			newpath 0 400 200 45 315 arc stroke
		} def

		% dim
		/quoteleft {
			50 setlinewidth
			newpath 0 640 220 0 360 arc stroke
		} def

		% halfdim
		/quoteright {
			50 setlinewidth
			newpath 0 640 220 0 360 arc stroke
			newpath -340 300 moveto 340 980 lineto stroke
		} def

		% triangle
		/asciicircum {
			50 setlinewidth
			newpath -340 -10 moveto 0 710 lineto
			340 -10 lineto closepath stroke
		} def

		% qwhrest
		/ampersand {
			300 setlinewidth
			0 -600 moveto 0 600 lineto stroke
		} def

		% ll1rest
		/exclam {
			310 setlinewidth
			-400 455 moveto 400 450 lineto stroke
		} def

		% ll2rest
		/at {
			310 setlinewidth
			-400 145 moveto 400 150 lineto stroke
		} def
	end

	/BuildChar {

		exch begin
		Encoding exch get

		dup
		Mcbbox0 exch get
		aload pop setcachedevice

		CharStrings exch get
		exec
		end
	} def
end


% Define another music character font, since there are too many to fit in one
% font.  It works the same way as the first one.

/mfont1 100 dict def
mfont1 begin
	/FontType 3 def
	/FontMatrix [ .001 0 0 0.001 0 0 ] def
	/FontBBox [ -2000 -4030 2000 4030 ] def
	/FontName (Mfont1) def

	% set up Encoding vector with standard names
	/Encoding 256 array def
	StandardEncoding Encoding copy
	pop

	%%%%% define routines that will be used by multiple characters %%%%%

	/do_dwh_bars {
		% the two bars surrounding a double whole note
		lwid setlinewidth
		-420 -600 moveto -420 600 lineto stroke
		420 -600 moveto 420 600 lineto stroke
	} def
	/do_righttriangle {
		newpath
		420 270 moveto -420 270 lineto 350 -300 lineto 420 -300 lineto
		350 150 moveto -140 150 lineto 350 -213 lineto
		eofill
	} def
	/do_fillrighttriangle {
		newpath
		420 270 moveto -420 270 lineto 350 -300 lineto 420 -300 lineto
		fill
	} def
	/do_rectangle {
		newpath
		420 270 moveto -420 270 lineto -420 -270 lineto 420 -270 lineto
		350 150 moveto -350 150 lineto -350 -150 lineto 350 -150 lineto
		eofill
	} def
	/do_isostriangle {
		newpath
		0 300 moveto -420 -270 lineto 420 -270 lineto
		0 182 moveto -245 -150 lineto 245 -150 lineto
		eofill
	} def
	/do_piewedge {
		newpath
		0 -300 moveto 0 -244 514 35 145 arc
		0 -209 moveto 0 -244 394 43 137 arc
		eofill
	} def
	/do_semicircle {
		newpath
		gsave
		1 1.357 scale 420 199 moveto 0 199 420 180 360 arc
		1 1.09 scale 350 111 moveto 0 199 350 194.1 345.9 arc
		eofill
		grestore
	} def
	/do_slashhead {
		newpath
		lwid setlinewidth
		-620 -530 moveto -480 -670 lineto 620 530 lineto 480 670 lineto
		closepath stroke
	} def

	% subsidiary dictionary of character definitions
	/CharStrings 128 dict def
	CharStrings begin

		/.notdef {} def

		% Here are the definitions of the characters.  A stepsize here
		% is 300 units (assuming the character is drawn at its default
		% size).

		% dwhrighttriangle
		/A {
			do_righttriangle
			do_dwh_bars
		} def

		% righttriangle
		/B {
			do_righttriangle
		} def

		% fillrighttriangle
		/C {
			newpath
			420 270 moveto -420 270 lineto 350 -300 lineto
			420 -300 lineto
			fill
		} def

		% udwhrighttriangle
		/D {
			gsave
			180 rotate
			do_righttriangle
			do_dwh_bars
			grestore
		} def

		% urighttriangle
		/E {
			gsave
			180 rotate
			do_righttriangle
			grestore
		} def

		% ufillrighttriangle
		/F {
			gsave
			180 rotate
			do_fillrighttriangle
			grestore
		} def

		% dwhrectangle
		/G {
			do_rectangle
			do_dwh_bars
		} def

		% rectangle
		/H {
			do_rectangle
		} def

		% fillrectangle
		/I {
			newpath
			420 270 moveto -420 270 lineto -420 -270 lineto
			420 -270 lineto
			fill
		} def

		% dwhisostriangle
		/J {
			do_isostriangle
			do_dwh_bars
		} def

		% isostriangle
		/K {
			do_isostriangle
		} def

		% fillisostriangle
		/L {
			newpath
			0 300 moveto -420 -270 lineto 420 -270 lineto
			fill
		} def

		% dwhpiewedge
		/M {
			do_piewedge
			do_dwh_bars
		} def

		% piewedge
		/N {
			do_piewedge
		} def

		% fillpiewedge
		/O {
			newpath
			0 -300 moveto 0 -244 514 35 145 arc
			fill
		} def

		% dwhsemicircle
		/P {
			do_semicircle
			do_dwh_bars
		} def

		% semicircle
		/Q {
			do_semicircle
		} def

		% fillsemicircle
		/R {
			newpath
			gsave
			1 570 420 div scale
			420 199 moveto 0 199 420 180 360 arc
			fill
			grestore
		} def

		% dwhslashhead
		/S {
			do_slashhead
			lwid setlinewidth
			-650 -600 moveto -650 600 lineto stroke
			650 -600 moveto 650 600 lineto stroke
		} def

		% slashhead
		/T {
			do_slashhead
		} def

		% fillslashhead
		/U {
			newpath
			200 setlinewidth
			-550 -600 moveto 550 600 lineto stroke
		} def

		% blankhead
		/V {
			%print nothing
		} def
	end

	/BuildChar {

		exch begin
		Encoding exch get

		dup
		Mcbbox1 exch get
		aload pop setcachedevice

		CharStrings exch get
		exec
		end
	} def
end


% General routines for printing any music character, invoked by each music
% character's specific routine below.  The scaling factor (default 1) needs
% to be multiplied by 10 to get the actual size.  These routines restore the
% preexisting current font when they are done.

/printmchar0 {
	gsave
	/musicchar exch def
	/Mfont0 findfont exch 10 mul scalefont setfont moveto 
	musicchar show
	grestore
} def
/printmchar1 {
	gsave
	/musicchar exch def
	/Mfont1 findfont exch 10 mul scalefont setfont moveto 
	musicchar show
	grestore
} def

% Define each music character name to be a routine that prints the character.
% Each character is to be invoked as in this example:
%	100 200 1 gclef		% at (100, 200), scale to default size & print

/gclef			{ (A) printmchar0 } def
/fclef			{ (B) printmchar0 } def
/cclef			{ (C) printmchar0 } def
/dblwhole		{ (D) printmchar0 } def
/1n			{ (E) printmchar0 } def
/2n			{ (F) printmchar0 } def
/4n			{ (G) printmchar0 } def
/upflag			{ (H) printmchar0 } def
/dnflag			{ (I) printmchar0 } def
/dwhrest		{ (J) printmchar0 } def
/1rest			{ (K) printmchar0 } def
/2rest			{ (L) printmchar0 } def
/4rest			{ (M) printmchar0 } def
/8rest			{ (N) printmchar0 } def
/16rest			{ (O) printmchar0 } def
/32rest			{ (P) printmchar0 } def
/64rest			{ (Q) printmchar0 } def
/128rest		{ (R) printmchar0 } def
/256rest		{ (S) printmchar0 } def
/dot			{ (T) printmchar0 } def
/nat			{ (U) printmchar0 } def
/sharp			{ (V) printmchar0 } def
/flat			{ (W) printmchar0 } def
/dblsharp		{ (X) printmchar0 } def
/dblflat		{ (Y) printmchar0 } def
/xnote			{ (Z) printmchar0 } def
/dwhdiamond		{ (a) printmchar0 } def
/diamond		{ (b) printmchar0 } def
/filldiamond		{ (c) printmchar0 } def
/up2n			{ (d) printmchar0 } def
/dn2n			{ (e) printmchar0 } def
/up4n			{ (f) printmchar0 } def
/dn4n			{ (g) printmchar0 } def
/up8n			{ (h) printmchar0 } def
/dn8n			{ (i) printmchar0 } def
/up16n			{ (j) printmchar0 } def
/dn16n			{ (k) printmchar0 } def
/up32n			{ (l) printmchar0 } def
/dn32n			{ (m) printmchar0 } def
/up64n			{ (n) printmchar0 } def
/dn64n			{ (o) printmchar0 } def
/up128n			{ (p) printmchar0 } def
/dn128n			{ (q) printmchar0 } def
/up256n			{ (r) printmchar0 } def
/dn256n			{ (s) printmchar0 } def
/com			{ (t) printmchar0 } def
/cut			{ (u) printmchar0 } def
/begped			{ (v) printmchar0 } def
/pedal			{ (w) printmchar0 } def
/endped			{ (x) printmchar0 } def
/dnbow			{ (y) printmchar0 } def
/upbow			{ (z) printmchar0 } def
/wedge			{ (1) printmchar0 } def
/uwedge			{ (2) printmchar0 } def
/ferm			{ (3) printmchar0 } def
/uferm			{ (4) printmchar0 } def
/sign			{ (5) printmchar0 } def
/coda			{ (6) printmchar0 } def
/mor			{ (7) printmchar0 } def
/invmor			{ (8) printmchar0 } def
/turn			{ (9) printmchar0 } def
/invturn		{ (0) printmchar0 } def
/acc_gt			{ (#) printmchar0 } def
/acc_hat		{ ($) printmchar0 } def
/acc_uhat		{ (") printmchar0 } def
/tr			{ (*) printmchar0 } def
/leg			{ (,) printmchar0 } def
/rr			{ (-) printmchar0 } def
/measrpt		{ (.) printmchar0 } def
/copyright		{ (/) printmchar0 } def
/dim			{ (`) printmchar0 } def
/halfdim		{ (') printmchar0 } def
/triangle		{ (^) printmchar0 } def
/qwhrest		{ (&) printmchar0 } def
/ll1rest		{ (!) printmchar0 } def
/ll2rest		{ (@) printmchar0 } def
/dwhrighttriangle	{ (A) printmchar1 } def
/righttriangle		{ (B) printmchar1 } def
/fillrighttriangle	{ (C) printmchar1 } def
/udwhrighttriangle	{ (D) printmchar1 } def
/urighttriangle		{ (E) printmchar1 } def
/ufillrighttriangle	{ (F) printmchar1 } def
/dwhrectangle		{ (G) printmchar1 } def
/rectangle		{ (H) printmchar1 } def
/fillrectangle		{ (I) printmchar1 } def
/dwhisostriangle	{ (J) printmchar1 } def
/isostriangle		{ (K) printmchar1 } def
/fillisostriangle	{ (L) printmchar1 } def
/dwhpiewedge		{ (M) printmchar1 } def
/piewedge		{ (N) printmchar1 } def
/fillpiewedge		{ (O) printmchar1 } def
/dwhsemicircle		{ (P) printmchar1 } def
/semicircle		{ (Q) printmchar1 } def
/fillsemicircle		{ (R) printmchar1 } def
/dwhslashhead		{ (S) printmchar1 } def
/slashhead		{ (T) printmchar1 } def
/fillslashhead		{ (U) printmchar1 } def
/blankhead		{ (V) printmchar1 } def


% Define routines for Mup output other than music characters.

/stepsize 3 def	   % define a step size as 3 points (at default magnification)

% x1 y1 x2 lines dist staffscale staff
%		draw a staff starting at x1, y1 and extending to x2 with "lines"
%		lines, 2*dist*stepsize apart, scaled by staffscale
/staff {
	/staffscale exch def
	/dist exch def
	/lines exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	0.7 staffscale mul setlinewidth
	1 lines sub  2  lines 1 sub {	% loop from bottom line to top line
		dup stepsize mul staffscale mul dist mul y1 add x1 exch moveto
		stepsize mul staffscale mul dist mul y1 add x2 exch lineto stroke
	} for
} def

% x y1 y2 bracket	draw a bracket; y1 is the top
/bracket {
	/y2 exch def
	/y1 exch def
	/x exch def
	gsave
	3 setlinewidth
	x 2 sub y1 1 add moveto
	x 2 sub y2 1 sub lineto
	stroke
	x 2 sub y1 1 add moveto
	x 1 sub y1 1 add   x 3 add y1 1 add   x 5 add y1 6 add   curveto
	x 6 add y1 5 add lineto
	x 5 add y1 2 add   x 1 add y1 2 sub   x 2 sub y1 2 sub   curveto
	fill
	x 2 sub y2 1 sub moveto
	x 1 sub y2 1 sub   x 3 add y2 1 sub   x 5 add y2 6 sub   curveto
	x 6 add y2 5 sub lineto
	x 5 add y2 2 sub   x 1 add y2 2 add   x 2 sub y2 2 add   curveto
	fill
	grestore
} def

% x y1 y2 right repeatbracket	draw a bracket for a repeat; y1 is the top,
%				right==1 means facing to the right
/repeatbracket {
	/right exch def
	/y2 exch def
	/y1 exch def
	/x exch def
	gsave
	right 0 eq {
		x y1 y2 add 2 div translate
		180 rotate
		0 x sub 0 y1 y2 add 2 div sub translate
	} if
	x 4.5 sub y1 1 add moveto
	x 0 sub y1 1 add   x 2 add y1 1 add   x 6 add y1 5 add   curveto
	x 6 add y1 4 add lineto
	x 6 add y1 2 add   x 1 add y1 2 sub   x 4.5 sub y1 1.5 sub   curveto
	fill
	x 4.5 sub y2 1 sub moveto
	x 0 sub y2 1 sub   x 2 add y2 1 sub   x 6 add y2 5 sub   curveto
	x 6 add y2 4 sub lineto
	x 6 add y2 2 sub   x 1 add y2 2 add   x 4.5 sub y2 1.5 add   curveto
	fill
	grestore
} def

% x y1 y2 brace		draw a brace; y1 is the top
/brace {
	/y2 exch def
	/y1 exch def
	/x exch def
	gsave
	x 6 sub y1 y2 add 2 div translate
	/topy y1 y2 sub 2 div 1 sub def
	0.667 1 scale
	0 1 1 {
		pop
		%0 topy moveto 0 0 lineto stroke
		0 0 moveto
		16 topy 0.2 mul   -11 topy 0.6 mul   8 topy   curveto
		8.7 topy lineto
		-7 topy 0.7 mul   20 topy 0.3 mul   1 0   curveto
		fill
		1 -1 scale	% flip to do bottom half
	} for
	grestore
} def

% endx endy wavy staffscale	draw a wavy line from current point to here,
%				scaled by staffscale
/wavy {
	/staffscale exch def
	/endy exch def		% define the end point of the line
	/endx exch def
	currentpoint		% line starts at current point
	/begy exch def		% define the beginning point of the line
	/begx exch def
	gsave
	/dx endx begx sub def	% find delta x and delta y
	/dy endy begy sub def
	/r dx dx mul dy dy mul add sqrt def	% hypotenuse
	/theta dy dx atan def			% angle with positive x axis
	begx begy translate	% change axes so that we can draw the line
	theta rotate		%   from (0, 0) to (r, 0)
	staffscale staffscale scale	% scale everything by staffscale
	/scaledr r staffscale div def	% but scale r in reverse to keep length

	% Each outer loop draws one cycle of the squiggle.  It continues until
	% we are at or beyond the desired end point.
	0 0 moveto
	0 6 scaledr {
		gsave
		% first loop draws left half of squiggle; second draws right
		0 1 1 {
			0.0 0.4 moveto
			2.0 1.9 3.4 2.3 3.9 0.0 curveto
			2.1 0.0 lineto
			1.9 0.8 1.4 0.7 0.0 -0.4 curveto
			fill
			pop 180 rotate -6 0 translate
		} for
		grestore

		pop 6 0 translate	% shift axes right one squiggle
	} for

	grestore
} def

% x y space frets fretno numvert curvel curver [ f1 f2 f3 ... ] grid
%				print a guitar grid diagram
/grid {
	/grid_positions exch def % 0="o", -1="x", -2=nothing, positive=dot
	/curver exch def	% right string for curve, 0 if none
	/curvel exch def	% left string for curve, 0 if none
	/numvert exch def	% vertical position to print fretno, 0 if none
	/fretno exch def	% fret no. to print at right, 0 if none
	/frets exch def		% number of fret lines
	/space exch def		% points between two neighboring lines
	/y exch def		% y coord of top fret line
	/x exch def		% x coord of left strings

	gsave
	/strings grid_positions length def	% number of strings
	/lmarky 0.4 space mul y add def		% lowest Y of a "o" or "x"
	space 10 div setlinewidth
	2 setlinecap

	% draw the lines of the grid
	0  1  strings 1 sub {	% loop from left string to right string
		dup space mul x add y moveto
		space mul x add frets 1 sub space mul y exch sub lineto stroke
	} for
	0  -1  1 frets sub {	% loop from top fret (nut) to bottom fret
		dup space mul y add x exch moveto
		space mul y add strings 1 sub space mul x add exch lineto stroke
	} for

	% draw the curved line if there is one
	curvel 0 gt {
		% within strings curvel to curver, find smallest positive fret
		/minfret 1000 def
		curvel 1 curver {
			/strno exch def
			/grid_p grid_positions strno 1 sub get def
			grid_p 0 gt grid_p minfret lt and {
				/minfret grid_p def
			} if
		} for

		% if curve goes above top fret, other marks must be higher
		minfret 1 eq {
			/hmarky 1.2 space mul y add def
		} {
			/hmarky lmarky def
		} ifelse

		/strdiff curver curvel sub def
		space 8 div setlinewidth

		% set endpoint coords of curve; higher if curve is short
		/curvex1 curvel 1 sub space mul x add def
		/curvex2 curver 1 sub space mul x add def
		/curvey 1 minfret sub space mul y add def
		strdiff 3 lt {
			/curvey 0.2 strdiff div space mul curvey add def
		} if

		% move to left end, set other points, draw curve
		curvex1 curvey moveto

		curvex1 curvex2 curvex1 sub 3 div add
		curvey space 0.4 strdiff sqrt mul mul add

		curvex2 curvex2 curvex1 sub 3 div sub
		curvey space 0.4 strdiff sqrt mul mul add

		curvex2 curvey curveto stroke
	} if

	space 10 div setlinewidth

	% draw dots and x and o marks
	0  1  strings 1 sub {	% loop from left string to right string
		/strno exch def	% first string is 0
		/grid_p grid_positions strno get def
		/strx strno space mul x add def

		% set Y of mark higher if curved line covers this string
		strno 1 add curvel ge  strno 1 add curver le  and {
			/marky hmarky def
		} {
			/marky lmarky def
		} ifelse

		grid_p -1 eq {		% draw an X above the string
			/xhwid space 3 div def
			strx xhwid sub marky xhwid sub moveto
			strx xhwid add marky xhwid add lineto stroke
			strx xhwid sub marky xhwid add moveto
			strx xhwid add marky xhwid sub lineto stroke
		} if
		grid_p 0 eq {		% draw a circle above the string
			strx marky space 0.3 mul 0 360 arc stroke
		} if
		grid_p 1 ge {		% draw a dot by the proper fret
			strx y grid_p space mul sub space 3 div add
			space 3 div 0 360 arc fill
		} if
	} for

	% print "X fr" if requested
	fretno 0 gt {
		/Palatino-Roman findfont space 1.9 mul scalefont setfont
		x strings 0.5 sub space mul add
		y space numvert 0.3 add mul sub moveto
		fretno 2 string cvs show ( fr) show
	} if
	grestore
} def

% x1 y1 x2 y2 whitebox		draw a white rectangle with opposite
%				corners of (x1,y1) and (x2,y2)
/whitebox {
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	1.0 setgray
	newpath
	x1 y1 moveto
	x1 y2 lineto
	x2 y2 lineto
	x2 y1 lineto
	closepath
	fill
	stroke
	0.0 setgray
} def


/LineNum 0 def
/InputFile (unknown) def

% n linenum
/linenum {
	/LineNum exch def
} def

% (inputfilename) inputfile
/inputfile {
	/InputFile exch def
} def

% find size of Encoding and make a dictionary
% that size for bounding box information
mfont0 begin
/dictsize Encoding length def
mfont0 /Mcbbox0 dictsize dict put

% temporarily redefine printmchar0 to get code
5 dict begin
/printmchar0 { {} forall } def

Mcbbox0 Encoding gclef get [ 1790.0 0 -915.0 -1605.0 865.0 3015.0 ] put
Mcbbox0 Encoding fclef get [ 1840.0 0 -1015.0 -1705.0 815.0 655.0 ] put
Mcbbox0 Encoding cclef get [ 1540.0 0 -765.0 -1245.0 765.0 1255.0 ] put
Mcbbox0 Encoding dblwhole get [ 1090.0 0 -535.0 -605.0 545.0 615.0 ] put
Mcbbox0 Encoding 1n get [ 1080.0 0 -535.0 -335.0 535.0 345.0 ] put
Mcbbox0 Encoding 2n get [ 880.0 0 -435.0 -345.0 435.0 355.0 ] put
Mcbbox0 Encoding 4n get [ 840.0 0 -415.0 -335.0 415.0 345.0 ] put
Mcbbox0 Encoding upflag get [ 640.0 0 -335.0 -5.0 295.0 1715.0 ] put
Mcbbox0 Encoding dnflag get [ 640.0 0 -335.0 -1705.0 295.0 15.0 ] put
Mcbbox0 Encoding qwhrest get [ 340.0 0 -165.0 -605.0 165.0 615.0 ] put
Mcbbox0 Encoding dwhrest get [ 340.0 0 -165.0 -5.0 165.0 615.0 ] put
Mcbbox0 Encoding 1rest get [ 1540.0 0 -765.0 -15.0 765.0 645.0 ] put
Mcbbox0 Encoding 2rest get [ 1540.0 0 -765.0 -45.0 765.0 315.0 ] put
Mcbbox0 Encoding 4rest get [ 650.0 0 -345.0 -885.0 295.0 995.0 ] put
Mcbbox0 Encoding 8rest get [ 750.0 0 -305.0 -625.0 435.0 485.0 ] put
Mcbbox0 Encoding 16rest get [ 830.0 0 -415.0 -1215.0 405.0 485.0 ] put
Mcbbox0 Encoding 32rest get [ 940.0 0 -415.0 -1215.0 515.0 1085.0 ] put
Mcbbox0 Encoding 64rest get [ 1040.0 0 -515.0 -1515.0 515.0 1085.0 ] put
Mcbbox0 Encoding 128rest get [ 1140.0 0 -515.0 -1515.0 615.0 1685.0 ] put
Mcbbox0 Encoding 256rest get [ 1250.0 0 -625.0 -2115.0 615.0 1685.0 ] put
Mcbbox0 Encoding ll1rest get [ 840.0 0 -415.0 -15.0 415.0 625.0 ] put
Mcbbox0 Encoding ll2rest get [ 840.0 0 -415.0 -15.0 415.0 325.0 ] put
Mcbbox0 Encoding dot get [ 280.0 0 -135.0 -125.0 135.0 135.0 ] put
Mcbbox0 Encoding nat get [ 520.0 0 -255.0 -855.0 255.0 865.0 ] put
Mcbbox0 Encoding sharp get [ 700.0 0 -345.0 -935.0 345.0 945.0 ] put
Mcbbox0 Encoding flat get [ 580.0 0 -295.0 -405.0 275.0 1115.0 ] put
Mcbbox0 Encoding dblsharp get [ 720.0 0 -355.0 -345.0 355.0 355.0 ] put
Mcbbox0 Encoding dblflat get [ 1160.0 0 -585.0 -405.0 565.0 1115.0 ] put
Mcbbox0 Encoding xnote get [ 880.0 0 -435.0 -365.0 435.0 375.0 ] put
Mcbbox0 Encoding dwhdiamond get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox0 Encoding diamond get [ 880.0 0 -435.0 -305.0 435.0 315.0 ] put
Mcbbox0 Encoding filldiamond get [ 880.0 0 -435.0 -305.0 435.0 315.0 ] put
Mcbbox0 Encoding up2n get [ 880.0 0 -435.0 -345.0 435.0 2115.0 ] put
Mcbbox0 Encoding dn2n get [ 880.0 0 -435.0 -2105.0 435.0 355.0 ] put
Mcbbox0 Encoding up4n get [ 850.0 0 -415.0 -335.0 425.0 2115.0 ] put
Mcbbox0 Encoding dn4n get [ 840.0 0 -415.0 -2105.0 415.0 345.0 ] put
Mcbbox0 Encoding com get [ 1110.0 0 -585.0 -645.0 515.0 655.0 ] put
Mcbbox0 Encoding cut get [ 1110.0 0 -585.0 -905.0 515.0 915.0 ] put
Mcbbox0 Encoding begped get [ 470.0 0 -245.0 -45.0 215.0 615.0 ] put
Mcbbox0 Encoding pedal get [ 1040.0 0 -515.0 -45.0 515.0 675.0 ] put
Mcbbox0 Encoding endped get [ 480.0 0 -215.0 -45.0 255.0 615.0 ] put
Mcbbox0 Encoding dnbow get [ 810.0 0 -395.0 -5.0 405.0 915.0 ] put
Mcbbox0 Encoding upbow get [ 720.0 0 -355.0 -115.0 355.0 925.0 ] put
Mcbbox0 Encoding wedge get [ 340.0 0 -165.0 -5.0 165.0 515.0 ] put
Mcbbox0 Encoding uwedge get [ 340.0 0 -165.0 -5.0 165.0 515.0 ] put
Mcbbox0 Encoding ferm get [ 1640.0 0 -815.0 -5.0 815.0 1015.0 ] put
Mcbbox0 Encoding uferm get [ 1640.0 0 -815.0 -5.0 815.0 1015.0 ] put
Mcbbox0 Encoding sign get [ 1340.0 0 -665.0 -825.0 665.0 835.0 ] put
Mcbbox0 Encoding coda get [ 1640.0 0 -815.0 -855.0 815.0 865.0 ] put
Mcbbox0 Encoding mor get [ 1320.0 0 -655.0 -285.0 655.0 295.0 ] put
Mcbbox0 Encoding invmor get [ 1320.0 0 -655.0 -455.0 655.0 465.0 ] put
Mcbbox0 Encoding turn get [ 1300.0 0 -645.0 -335.0 645.0 345.0 ] put
Mcbbox0 Encoding invturn get [ 1300.0 0 -645.0 -335.0 645.0 345.0 ] put
Mcbbox0 Encoding acc_gt get [ 1170.0 0 -525.0 -345.0 635.0 355.0 ] put
Mcbbox0 Encoding acc_hat get [ 780.0 0 -385.0 -5.0 385.0 875.0 ] put
Mcbbox0 Encoding acc_uhat get [ 780.0 0 -385.0 -5.0 385.0 875.0 ] put
Mcbbox0 Encoding tr get [ 1440.0 0 -715.0 -5.0 715.0 1015.0 ] put
Mcbbox0 Encoding leg get [ 840.0 0 -415.0 -55.0 415.0 65.0 ] put
Mcbbox0 Encoding rr get [ 940.0 0 -465.0 -25.0 465.0 1035.0 ] put
Mcbbox0 Encoding dim get [ 540.0 0 -265.0 -15.0 265.0 905.0 ] put
Mcbbox0 Encoding halfdim get [ 760.0 0 -375.0 -15.0 375.0 1015.0 ] put
Mcbbox0 Encoding triangle get [ 800.0 0 -395.0 -45.0 395.0 785.0 ] put
Mcbbox0 Encoding measrpt get [ 1300.0 0 -645.0 -675.0 645.0 685.0 ] put
Mcbbox0 Encoding copyright get [ 920.0 0 -455.0 -45.0 455.0 855.0 ] put
Mcbbox0 Encoding up8n get [ 1390.0 0 -745.0 -335.0 635.0 2115.0 ] put
Mcbbox0 Encoding dn8n get [ 840.0 0 -415.0 -2105.0 415.0 345.0 ] put
Mcbbox0 Encoding up16n get [ 1390.0 0 -745.0 -335.0 635.0 2115.0 ] put
Mcbbox0 Encoding dn16n get [ 840.0 0 -415.0 -2105.0 415.0 345.0 ] put
Mcbbox0 Encoding up32n get [ 1390.0 0 -745.0 -335.0 635.0 2595.0 ] put
Mcbbox0 Encoding dn32n get [ 840.0 0 -415.0 -2585.0 415.0 345.0 ] put
Mcbbox0 Encoding up64n get [ 1390.0 0 -745.0 -335.0 635.0 3075.0 ] put
Mcbbox0 Encoding dn64n get [ 840.0 0 -415.0 -3065.0 415.0 345.0 ] put
Mcbbox0 Encoding up128n get [ 1390.0 0 -745.0 -335.0 635.0 3555.0 ] put
Mcbbox0 Encoding dn128n get [ 840.0 0 -415.0 -3545.0 415.0 345.0 ] put
Mcbbox0 Encoding up256n get [ 1390.0 0 -745.0 -335.0 635.0 3975.0 ] put
Mcbbox0 Encoding dn256n get [ 840.0 0 -415.0 -3965.0 415.0 345.0 ] put

end
end

/Mfont0 mfont0 definefont


% find size of Encoding and make a dictionary
% that size for bounding box information
mfont1 begin
/dictsize Encoding length def
mfont1 /Mcbbox1 dictsize dict put

% temporarily redefine printmchar1 to get code
5 dict begin
/printmchar1 { {} forall } def

Mcbbox1 Encoding dwhrighttriangle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding righttriangle get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding fillrighttriangle get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding udwhrighttriangle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding urighttriangle get [ 880.0 0 -435.0 -275.0 435.0 315.0 ] put
Mcbbox1 Encoding ufillrighttriangle get [ 880.0 0 -435.0 -275.0 435.0 315.0 ] put
Mcbbox1 Encoding dwhrectangle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding rectangle get [ 880.0 0 -435.0 -275.0 435.0 285.0 ] put
Mcbbox1 Encoding fillrectangle get [ 880.0 0 -435.0 -275.0 435.0 285.0 ] put
Mcbbox1 Encoding dwhisostriangle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding isostriangle get [ 880.0 0 -435.0 -275.0 435.0 315.0 ] put
Mcbbox1 Encoding fillisostriangle get [ 880.0 0 -435.0 -275.0 435.0 315.0 ] put
Mcbbox1 Encoding dwhpiewedge get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding piewedge get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding fillpiewedge get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding dwhsemicircle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding semicircle get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding fillsemicircle get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding dwhslashhead get [ 1410.0 0 -695.0 -725.0 705.0 735.0 ] put
Mcbbox1 Encoding slashhead get [ 1380.0 0 -685.0 -725.0 685.0 735.0 ] put
Mcbbox1 Encoding fillslashhead get [ 1300.0 0 -645.0 -675.0 645.0 685.0 ] put
Mcbbox1 Encoding blankhead get [ 880.0 0 -435.0 -275.0 435.0 285.0 ] put

end
end

/Mfont1 mfont1 definefont

/flagsep 1.60 300 mul def	 % 1.60 stepsizes
%%BeginFeature: *PageSize Default
<< /PageSize [ 595 842 ] >> setpagedevice
%%EndFeature
%%EndProlog
%%Page: 1 1
save
% set up landscape mode
594 0 translate
90 rotate
0.750000 0.750000 scale
%  S_SSV
(kaleidakustikon_7.mup) inputfile
8 linenum
%  S_SSV
10 linenum
%  S_SSV
18 linenum
%  S_SSV
21 linenum
%  S_SSV
24 linenum
%  S_FEED
30 linenum
88.79 683.56 1074.24 5 1.000000 1.000000 staff
88.79 621.56 1074.24 5 1.000000 1.000000 staff
87.79 695.56 609.56 brace
0.70 setlinewidth
88.79 695.56 moveto
88.79 609.56 lineto stroke
%  S_CLEFSIG
30 linenum
100.58 677.56 1.000000 gclef
100.83 627.56 1.000000 fclef
116.62 683.56 1.000000 flat
116.62 615.56 1.000000 flat
/NewCenturySchlbk-Bold findfont
16 scalefont
setfont
122.36 683.56 moveto
(3) show
/NewCenturySchlbk-Bold findfont
16 scalefont
setfont
122.36 671.64 moveto
(4) show
/NewCenturySchlbk-Bold findfont
16 scalefont
setfont
122.36 621.56 moveto
(3) show
/NewCenturySchlbk-Bold findfont
16 scalefont
setfont
122.36 609.64 moveto
(4) show
%  S_CHHEAD
30 linenum
%  S_STAFF
% staff 1
save
146.71 680.56 1.000000 4n
150.39 681.31 moveto
150.39 701.00 lineto stroke
164.22 683.56 1.000000 4n
167.90 684.31 moveto
167.90 703.09 lineto stroke
newpath
150.04 702.50 moveto
168.25 704.59 lineto
168.25 701.59 lineto
150.04 699.50 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
146.71 621.56 1.000000 4rest
restore
%  S_BAR
32 linenum
0.70 setlinewidth
182.44 695.56 moveto
182.44 671.56 lineto stroke
182.44 633.56 moveto
182.44 609.56 lineto stroke
%  S_CHHEAD
35 linenum
%  S_STAFF
% staff 1
save
192.08 686.56 1.000000 4n
188.39 685.81 moveto
188.39 669.25 lineto stroke
208.74 689.56 1.000000 4n
205.06 688.81 moveto
205.06 670.99 lineto stroke
225.41 692.56 1.000000 4n
221.72 691.81 moveto
221.72 672.74 lineto stroke
242.07 695.56 1.000000 4n
238.39 694.81 moveto
238.39 674.48 lineto stroke
257.64 698.56 1.000000 4n
253.96 697.81 moveto
253.96 676.11 lineto stroke
278.28 698.56 1.000000 4n
268.93 698.56 1.000000 sharp
274.60 697.81 moveto
274.60 678.27 lineto stroke
newpath
188.04 670.75 moveto
274.95 679.77 lineto
274.95 676.77 lineto
188.04 667.75 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
192.08 606.56 1.000000 4n
0.70 setlinewidth
195.76 607.31 moveto
195.76 627.56 lineto stroke
225.41 639.56 1.000000 4n
219.17 639.56 moveto
231.64 639.56 lineto stroke
225.41 633.56 1.000000 4n
225.41 627.56 1.000000 4n
221.72 638.81 moveto
221.72 606.56 lineto stroke
257.64 639.56 1.000000 4n
251.41 639.56 moveto
263.87 639.56 lineto stroke
257.64 633.56 1.000000 4n
257.64 627.56 1.000000 4n
253.96 638.81 moveto
253.96 606.56 lineto stroke
restore
%  S_BAR
37 linenum
0.70 setlinewidth
296.51 695.56 moveto
296.51 671.56 lineto stroke
296.51 633.56 moveto
296.51 609.56 lineto stroke
%  S_CHHEAD
41 linenum
%  S_STAFF
% staff 1
save
306.14 701.56 1.000000 4n
299.91 701.56 moveto
312.37 701.56 lineto stroke
302.46 700.81 moveto
302.46 669.68 lineto stroke
322.81 695.56 1.000000 4n
319.12 694.81 moveto
319.12 669.68 lineto stroke
339.47 686.56 1.000000 4n
335.79 685.81 moveto
335.79 669.68 lineto stroke
356.14 707.56 1.000000 4n
349.90 707.56 moveto
362.37 707.56 lineto stroke
349.90 701.56 moveto
362.37 701.56 lineto stroke
352.45 706.81 moveto
352.45 669.68 lineto stroke
372.80 701.56 1.000000 4n
366.57 701.56 moveto
379.03 701.56 lineto stroke
369.12 700.81 moveto
369.12 669.68 lineto stroke
390.31 695.56 1.000000 4n
386.62 694.81 moveto
386.62 669.68 lineto stroke
newpath
302.11 671.18 moveto
386.97 671.18 lineto
386.97 668.18 lineto
302.11 668.18 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
306.14 606.56 1.000000 4n
0.70 setlinewidth
309.82 607.31 moveto
309.82 627.56 lineto stroke
339.47 639.56 1.000000 4n
333.24 639.56 moveto
345.70 639.56 lineto stroke
339.47 633.56 1.000000 4n
339.47 627.56 1.000000 4n
335.79 638.81 moveto
335.79 606.56 lineto stroke
372.80 639.56 1.000000 4n
366.57 639.56 moveto
379.03 639.56 lineto stroke
372.80 633.56 1.000000 4n
372.80 627.56 1.000000 4n
369.12 638.81 moveto
369.12 606.56 lineto stroke
restore
%  S_BAR
43 linenum
0.70 setlinewidth
408.53 695.56 moveto
408.53 671.56 lineto stroke
408.53 633.56 moveto
408.53 609.56 lineto stroke
%  S_CHHEAD
47 linenum
%  S_STAFF
% staff 1
save
426.81 689.56 1.000000 4n
417.45 689.56 1.000000 sharp
423.12 688.81 moveto
423.12 672.75 lineto stroke
443.47 692.56 1.000000 4n
439.79 691.81 moveto
439.79 674.05 lineto stroke
459.04 698.56 1.000000 4n
455.36 697.81 moveto
455.36 675.27 lineto stroke
478.84 695.56 1.000000 4n
469.49 695.56 1.000000 sharp
475.16 694.81 moveto
475.16 676.82 lineto stroke
495.51 701.56 1.000000 4n
489.28 701.56 moveto
501.74 701.56 lineto stroke
491.83 700.81 moveto
491.83 678.12 lineto stroke
513.01 698.56 1.000000 4n
509.33 697.81 moveto
509.33 679.49 lineto stroke
newpath
422.77 674.25 moveto
509.68 680.99 lineto
509.68 677.99 lineto
422.77 671.25 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
426.81 618.56 1.000000 4n
0.70 setlinewidth
430.49 619.31 moveto
430.49 639.56 lineto stroke
459.04 639.56 1.000000 4n
452.81 639.56 moveto
465.27 639.56 lineto stroke
451.67 636.56 1.000000 4n
459.04 630.56 1.000000 4n
455.36 638.81 moveto
455.36 609.56 lineto stroke
495.51 639.56 1.000000 4n
489.28 639.56 moveto
501.74 639.56 lineto stroke
488.14 636.56 1.000000 4n
495.51 630.56 1.000000 4n
491.83 638.81 moveto
491.83 609.56 lineto stroke
restore
%  S_BAR
49 linenum
0.70 setlinewidth
531.24 695.56 moveto
531.24 671.56 lineto stroke
531.24 633.56 moveto
531.24 609.56 lineto stroke
%  S_CHHEAD
53 linenum
%  S_STAFF
% staff 1
save
540.87 683.56 1.000000 4n
544.55 684.31 moveto
544.55 704.56 lineto stroke
574.20 683.56 1.000000 4n
583.47 686.56 1.000000 dot
574.20 677.56 1.000000 4n
583.47 680.56 1.000000 dot
574.20 665.56 1.000000 4n
583.47 668.56 1.000000 dot
567.97 665.56 moveto
580.43 665.56 lineto stroke
577.88 666.31 moveto
577.88 704.56 lineto stroke
624.20 683.56 1.000000 4n
627.88 684.31 moveto
627.88 704.56 lineto stroke
630.90 704.56 1.000000 dnflag
restore
%  S_STAFF
% staff 2
save
540.87 597.56 1.000000 4n
0.70 setlinewidth
534.64 597.56 moveto
547.10 597.56 lineto stroke
534.64 603.56 moveto
547.10 603.56 lineto stroke
544.55 598.31 moveto
544.55 628.18 lineto stroke
557.54 603.56 1.000000 4n
551.30 603.56 moveto
563.77 603.56 lineto stroke
561.22 604.31 moveto
561.22 631.61 lineto stroke
574.20 609.56 1.000000 4n
577.88 610.31 moveto
577.88 635.04 lineto stroke
590.87 618.56 1.000000 4n
594.55 619.31 moveto
594.55 638.46 lineto stroke
607.53 624.56 1.000000 4n
611.22 625.31 moveto
611.22 641.89 lineto stroke
624.20 618.56 1.000000 4n
627.88 619.31 moveto
627.88 645.32 lineto stroke
newpath
544.20 629.68 moveto
628.23 646.82 lineto
628.23 643.82 lineto
544.20 626.68 lineto
closepath
fill
restore
%  S_BAR
55 linenum
0.70 setlinewidth
643.26 695.56 moveto
643.26 671.56 lineto stroke
643.26 633.56 moveto
643.26 609.56 lineto stroke
%  S_CHHEAD
59 linenum
%  S_STAFF
% staff 1
save
652.90 680.56 1.000000 4n
656.58 681.31 moveto
656.58 712.06 lineto stroke
669.56 692.56 1.000000 4n
673.24 693.31 moveto
673.24 712.06 lineto stroke
686.23 695.56 1.000000 4n
689.91 696.31 moveto
689.91 712.06 lineto stroke
702.89 686.56 1.000000 4n
706.58 687.31 moveto
706.58 712.06 lineto stroke
719.56 683.56 1.000000 4n
723.24 684.31 moveto
723.24 712.06 lineto stroke
737.06 680.56 1.000000 4n
740.75 681.31 moveto
740.75 712.06 lineto stroke
newpath
656.23 713.56 moveto
741.10 713.56 lineto
741.10 710.56 lineto
656.23 710.56 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
652.90 606.56 1.000000 4n
0.70 setlinewidth
656.58 607.31 moveto
656.58 627.56 lineto stroke
686.23 639.56 1.000000 4n
680.00 639.56 moveto
692.46 639.56 lineto stroke
686.23 627.56 1.000000 4n
682.55 638.81 moveto
682.55 606.56 lineto stroke
719.56 639.56 1.000000 4n
713.33 639.56 moveto
725.79 639.56 lineto stroke
719.56 627.56 1.000000 4n
715.88 638.81 moveto
715.88 606.56 lineto stroke
restore
%  S_BAR
61 linenum
0.70 setlinewidth
755.29 695.56 moveto
755.29 671.56 lineto stroke
755.29 633.56 moveto
755.29 609.56 lineto stroke
%  S_CHHEAD
65 linenum
%  S_STAFF
% staff 1
save
773.56 686.56 1.000000 4n
764.21 686.56 1.000000 sharp
769.88 685.81 moveto
769.88 666.05 lineto stroke
790.23 689.56 1.000000 4n
786.55 688.81 moveto
786.55 665.11 lineto stroke
805.79 680.56 1.000000 4n
802.11 679.81 moveto
802.11 664.23 lineto stroke
823.80 686.56 1.000000 4n
815.35 686.56 1.000000 nat
820.12 685.81 moveto
820.12 663.22 lineto stroke
840.46 683.56 1.000000 4n
836.78 682.81 moveto
836.78 662.28 lineto stroke
857.97 677.56 1.000000 4n
854.29 676.81 moveto
854.29 661.29 lineto stroke
newpath
769.53 667.55 moveto
854.64 662.79 lineto
854.64 659.79 lineto
769.53 664.55 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
773.56 615.56 1.000000 4n
0.70 setlinewidth
777.24 616.31 moveto
777.24 636.56 lineto stroke
805.79 642.56 1.000000 4n
799.56 639.56 moveto
812.03 639.56 lineto stroke
805.79 636.56 1.000000 4n
802.11 641.81 moveto
802.11 615.56 lineto stroke
840.46 642.56 1.000000 4n
834.23 639.56 moveto
846.70 639.56 lineto stroke
840.46 636.56 1.000000 4n
836.78 641.81 moveto
836.78 615.56 lineto stroke
restore
%  S_BAR
67 linenum
0.70 setlinewidth
876.19 695.56 moveto
876.19 671.56 lineto stroke
876.19 633.56 moveto
876.19 609.56 lineto stroke
%  S_CHHEAD
71 linenum
%  S_STAFF
% staff 1
save
886.04 671.56 1.000000 4n
889.72 672.31 moveto
889.72 702.02 lineto stroke
901.61 686.56 1.000000 4n
905.29 687.31 moveto
905.29 703.43 lineto stroke
919.61 683.56 1.000000 4n
911.16 683.56 1.000000 nat
923.29 684.31 moveto
923.29 705.06 lineto stroke
936.28 686.56 1.000000 4n
939.96 687.31 moveto
939.96 706.57 lineto stroke
952.94 689.56 1.000000 4n
956.63 690.31 moveto
956.63 708.08 lineto stroke
970.45 686.56 1.000000 4n
974.13 687.31 moveto
974.13 709.67 lineto stroke
newpath
889.37 703.52 moveto
974.48 711.17 lineto
974.48 708.17 lineto
889.37 700.52 lineto
closepath
fill
919.61 671.56 1.000000 4n
915.93 670.81 moveto
915.93 654.56 lineto stroke
952.94 671.56 1.000000 4n
949.26 670.81 moveto
949.26 654.56 lineto stroke
restore
%  S_STAFF
% staff 2
save
919.61 636.56 1.000000 4n
919.61 630.56 1.000000 4n
0.70 setlinewidth
923.29 631.31 moveto
923.29 652.56 lineto stroke
952.94 636.56 1.000000 4n
952.94 630.56 1.000000 4n
956.63 631.31 moveto
956.63 652.56 lineto stroke
886.04 618.56 1.000000 2n
895.52 618.56 1.000000 dot
882.14 617.81 moveto
882.14 598.56 lineto stroke
restore
%  S_BAR
75 linenum
0.70 setlinewidth
988.67 695.56 moveto
988.67 671.56 lineto stroke
988.67 633.56 moveto
988.67 609.56 lineto stroke
%  S_CHHEAD
78 linenum
%  S_STAFF
% staff 1
save
1000.37 674.56 1.000000 4n
1004.05 675.31 moveto
1004.05 695.56 lineto stroke
1030.22 683.56 1.000000 4rest
restore
%  S_STAFF
% staff 2
save
1000.37 633.56 1.000000 4n
1000.37 627.56 1.000000 4n
0.70 setlinewidth
996.68 632.81 moveto
996.68 606.56 lineto stroke
1030.22 606.56 1.000000 4n
1033.90 607.31 moveto
1033.90 627.56 lineto stroke
restore
%  S_BAR
80 linenum
1064.74 686.56 1.000000 dot
1064.74 680.56 1.000000 dot
1068.74 695.56 moveto
1068.74 671.56 lineto stroke
3.00 setlinewidth
1072.74 695.56 moveto
1072.74 671.56 lineto stroke
0.70 setlinewidth
1064.74 624.56 1.000000 dot
1064.74 618.56 1.000000 dot
1068.74 633.56 moveto
1068.74 609.56 lineto stroke
3.00 setlinewidth
1072.74 633.56 moveto
1072.74 609.56 lineto stroke
0.70 setlinewidth
%  S_FEED
82 linenum
50.50 537.56 1074.24 5 1.000000 1.000000 staff
/Times-Roman findfont
11 scalefont
setfont
55.00 564.62 moveto
(10) show
50.50 483.56 1074.24 5 1.000000 1.000000 staff
49.50 549.56 471.56 brace
50.50 549.56 moveto
50.50 471.56 lineto stroke
%  S_CLEFSIG
86 linenum
62.29 531.56 1.000000 gclef
62.54 489.56 1.000000 fclef
78.33 537.56 1.000000 flat
78.33 477.56 1.000000 flat
96.08 540.56 1.000000 dot
96.08 534.56 1.000000 dot
93.08 549.56 moveto
93.08 525.56 lineto stroke
3.00 setlinewidth
89.08 549.56 moveto
89.08 525.56 lineto stroke
0.70 setlinewidth
96.08 486.56 1.000000 dot
96.08 480.56 1.000000 dot
93.08 495.56 moveto
93.08 471.56 lineto stroke
3.00 setlinewidth
89.08 495.56 moveto
89.08 471.56 lineto stroke
0.70 setlinewidth
%  S_CHHEAD
86 linenum
%  S_STAFF
% staff 1
save
123.61 540.56 1.000000 2n
133.09 540.56 1.000000 dot
119.71 539.81 moveto
119.71 519.56 lineto stroke
restore
%  S_STAFF
% staff 2
save
123.61 480.56 1.000000 2n
133.09 480.56 1.000000 dot
0.70 setlinewidth
127.51 481.31 moveto
127.51 501.56 lineto stroke
restore
%  S_BAR
88 linenum
0.70 setlinewidth
197.02 549.56 moveto
197.02 525.56 lineto stroke
197.02 495.56 moveto
197.02 471.56 lineto stroke
%  S_CHHEAD
92 linenum
%  S_STAFF
% staff 1
save
207.10 558.56 1.000000 4n
216.36 558.56 1.000000 dot
200.87 555.56 moveto
213.33 555.56 lineto stroke
203.42 557.81 moveto
203.42 537.56 lineto stroke
265.19 552.56 1.000000 4n
261.51 551.81 moveto
261.51 534.80 lineto stroke
284.55 561.56 1.000000 4n
278.32 561.56 moveto
290.78 561.56 lineto stroke
278.32 555.56 moveto
290.78 555.56 lineto stroke
280.87 560.81 moveto
280.87 532.70 lineto stroke
304.76 546.56 1.000000 4n
301.07 545.81 moveto
301.07 530.50 lineto stroke
newpath
261.16 536.30 moveto
301.42 532.00 lineto
301.42 529.00 lineto
261.16 533.30 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
207.10 480.56 1.000000 4n
0.70 setlinewidth
203.42 479.81 moveto
203.42 462.60 lineto stroke
226.46 501.56 1.000000 4n
220.23 501.56 moveto
232.69 501.56 lineto stroke
222.78 500.81 moveto
222.78 469.64 lineto stroke
245.83 498.56 1.000000 4n
245.83 492.56 1.000000 4n
242.14 497.81 moveto
242.14 473.25 lineto stroke
265.19 501.56 1.000000 4n
258.96 501.56 moveto
271.42 501.56 lineto stroke
261.51 500.81 moveto
261.51 479.34 lineto stroke
284.55 498.56 1.000000 4n
284.55 492.56 1.000000 4n
280.87 497.81 moveto
280.87 473.29 lineto stroke
304.76 501.56 1.000000 4n
298.52 501.56 moveto
310.99 501.56 lineto stroke
301.07 500.81 moveto
301.07 479.40 lineto stroke
newpath
203.07 464.10 moveto
223.13 471.14 lineto
223.13 468.14 lineto
203.07 461.10 lineto
closepath
fill
newpath
241.79 474.75 moveto
261.86 480.84 lineto
261.86 477.84 lineto
241.79 471.75 lineto
closepath
fill
newpath
280.52 474.79 moveto
301.42 480.90 lineto
301.42 477.90 lineto
280.52 471.79 lineto
closepath
fill
restore
%  S_BAR
94 linenum
0.70 setlinewidth
325.23 549.56 moveto
325.23 525.56 lineto stroke
325.23 495.56 moveto
325.23 471.56 lineto stroke
%  S_CHHEAD
98 linenum
%  S_STAFF
% staff 1
save
335.31 549.56 1.000000 4n
331.63 548.81 moveto
331.63 528.56 lineto stroke
358.95 552.56 0.583333 4n
360.95 553.05 moveto
360.95 562.11 lineto stroke
365.66 549.56 0.583333 4n
367.66 550.05 moveto
367.66 560.54 lineto stroke
374.04 546.56 1.000000 4n
370.36 545.81 moveto
370.36 529.06 lineto stroke
393.40 549.56 1.000000 4n
389.72 548.81 moveto
389.72 530.08 lineto stroke
412.77 555.56 1.000000 4n
406.54 555.56 moveto
419.00 555.56 lineto stroke
409.09 554.81 moveto
409.09 531.10 lineto stroke
432.97 549.56 1.000000 4n
429.29 548.81 moveto
429.29 532.16 lineto stroke
newpath
370.01 530.56 moveto
429.64 533.66 lineto
429.64 530.66 lineto
370.01 527.56 lineto
closepath
fill
newpath
360.73 563.08 moveto
367.89 561.51 lineto
367.89 559.56 lineto
360.73 561.13 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
335.31 480.56 1.000000 4n
0.70 setlinewidth
331.63 479.81 moveto
331.63 462.60 lineto stroke
354.12 501.56 1.000000 4n
347.89 501.56 moveto
360.35 501.56 lineto stroke
350.44 500.81 moveto
350.44 469.44 lineto stroke
374.04 495.56 1.000000 4n
374.04 489.56 1.000000 4n
370.36 494.81 moveto
370.36 473.06 lineto stroke
393.40 501.56 1.000000 4n
387.17 501.56 moveto
399.64 501.56 lineto stroke
389.72 500.81 moveto
389.72 473.06 lineto stroke
412.77 495.56 1.000000 4n
412.77 489.56 1.000000 4n
409.09 494.81 moveto
409.09 473.06 lineto stroke
432.97 501.56 1.000000 4n
426.74 501.56 moveto
439.20 501.56 lineto stroke
429.29 500.81 moveto
429.29 473.06 lineto stroke
newpath
331.28 464.10 moveto
350.79 470.94 lineto
350.79 467.94 lineto
331.28 461.10 lineto
closepath
fill
newpath
370.01 474.56 moveto
429.64 474.56 lineto
429.64 471.56 lineto
370.01 471.56 lineto
closepath
fill
restore
%  S_BAR
100 linenum
0.70 setlinewidth
453.44 549.56 moveto
453.44 525.56 lineto stroke
453.44 495.56 moveto
453.44 471.56 lineto stroke
%  S_CHHEAD
104 linenum
%  S_STAFF
% staff 1
save
463.53 540.56 1.000000 4n
467.21 541.31 moveto
467.21 560.56 lineto stroke
502.25 537.56 1.000000 4n
493.80 537.56 1.000000 nat
505.94 538.31 moveto
505.94 558.81 lineto stroke
521.62 540.56 1.000000 4n
525.30 541.31 moveto
525.30 556.60 lineto stroke
540.98 534.56 1.000000 4n
544.66 535.31 moveto
544.66 554.39 lineto stroke
561.18 528.56 1.000000 4n
564.87 529.31 moveto
564.87 552.09 lineto stroke
newpath
505.59 560.31 moveto
565.22 553.59 lineto
565.22 550.59 lineto
505.59 557.31 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
463.53 480.56 1.000000 4n
0.70 setlinewidth
459.84 479.81 moveto
459.84 462.60 lineto stroke
482.89 501.56 1.000000 4n
476.66 501.56 moveto
489.12 501.56 lineto stroke
479.21 500.81 moveto
479.21 469.64 lineto stroke
502.25 495.56 1.000000 4n
502.25 489.56 1.000000 4n
498.57 494.81 moveto
498.57 473.06 lineto stroke
521.62 501.56 1.000000 4n
515.39 501.56 moveto
527.85 501.56 lineto stroke
517.94 500.81 moveto
517.94 473.06 lineto stroke
540.98 495.56 1.000000 4n
540.98 489.56 1.000000 4n
537.30 494.81 moveto
537.30 473.06 lineto stroke
561.18 501.56 1.000000 4n
554.95 501.56 moveto
567.42 501.56 lineto stroke
557.50 500.81 moveto
557.50 473.06 lineto stroke
newpath
459.49 464.10 moveto
479.56 471.14 lineto
479.56 468.14 lineto
459.49 461.10 lineto
closepath
fill
newpath
498.22 474.56 moveto
557.85 474.56 lineto
557.85 471.56 lineto
498.22 471.56 lineto
closepath
fill
restore
%  S_BAR
106 linenum
0.70 setlinewidth
581.66 549.56 moveto
581.66 525.56 lineto stroke
581.66 495.56 moveto
581.66 471.56 lineto stroke
%  S_CHHEAD
110 linenum
%  S_STAFF
% staff 1
save
591.74 525.56 1.000000 4n
595.42 526.31 moveto
595.42 551.48 lineto stroke
611.11 540.56 1.000000 4n
614.79 541.31 moveto
614.79 558.53 lineto stroke
630.47 540.56 1.000000 4n
634.15 541.31 moveto
634.15 555.60 lineto stroke
649.83 525.56 1.000000 4n
653.51 526.31 moveto
653.51 548.55 lineto stroke
669.20 540.56 1.000000 4n
672.88 541.31 moveto
672.88 555.60 lineto stroke
689.40 525.56 1.000000 4n
693.08 526.31 moveto
693.08 548.24 lineto stroke
newpath
595.07 552.98 moveto
615.14 560.03 lineto
615.14 557.03 lineto
595.07 549.98 lineto
closepath
fill
newpath
633.80 557.10 moveto
653.86 550.05 lineto
653.86 547.05 lineto
633.80 554.10 lineto
closepath
fill
newpath
672.53 557.10 moveto
693.43 549.74 lineto
693.43 546.74 lineto
672.53 554.10 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
591.74 480.56 1.000000 4n
0.70 setlinewidth
588.06 479.81 moveto
588.06 462.60 lineto stroke
611.11 501.56 1.000000 4n
604.87 501.56 moveto
617.34 501.56 lineto stroke
607.42 500.81 moveto
607.42 469.64 lineto stroke
630.47 495.56 1.000000 4n
630.47 489.56 1.000000 4n
626.79 494.81 moveto
626.79 473.06 lineto stroke
649.83 501.56 1.000000 4n
643.60 501.56 moveto
656.06 501.56 lineto stroke
646.15 500.81 moveto
646.15 473.06 lineto stroke
669.20 495.56 1.000000 4n
669.20 489.56 1.000000 4n
665.51 494.81 moveto
665.51 473.06 lineto stroke
689.40 501.56 1.000000 4n
683.17 501.56 moveto
695.63 501.56 lineto stroke
685.72 500.81 moveto
685.72 473.06 lineto stroke
newpath
587.71 464.10 moveto
607.77 471.14 lineto
607.77 468.14 lineto
587.71 461.10 lineto
closepath
fill
newpath
626.44 474.56 moveto
686.07 474.56 lineto
686.07 471.56 lineto
626.44 471.56 lineto
closepath
fill
restore
%  S_BAR
112 linenum
0.70 setlinewidth
709.87 549.56 moveto
709.87 525.56 lineto stroke
709.87 495.56 moveto
709.87 471.56 lineto stroke
%  S_CHHEAD
116 linenum
%  S_STAFF
% staff 1
save
719.96 528.56 1.000000 4n
716.27 527.81 moveto
716.27 511.55 lineto stroke
739.32 549.56 1.000000 4n
735.64 548.81 moveto
735.64 514.03 lineto stroke
758.68 546.56 1.000000 4n
755.00 545.81 moveto
755.00 516.51 lineto stroke
778.05 549.56 1.000000 4n
774.37 548.81 moveto
774.37 519.00 lineto stroke
797.41 555.56 1.000000 4n
791.18 555.56 moveto
803.64 555.56 lineto stroke
793.73 554.81 moveto
793.73 521.48 lineto stroke
817.61 552.56 1.000000 4n
813.93 551.81 moveto
813.93 524.07 lineto stroke
newpath
715.92 513.05 moveto
814.28 525.57 lineto
814.28 522.57 lineto
715.92 510.05 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
719.96 480.56 1.000000 4n
0.70 setlinewidth
716.27 479.81 moveto
716.27 462.60 lineto stroke
739.32 501.56 1.000000 4n
733.09 501.56 moveto
745.55 501.56 lineto stroke
735.64 500.81 moveto
735.64 469.64 lineto stroke
758.68 495.56 1.000000 4n
758.68 489.56 1.000000 4n
755.00 494.81 moveto
755.00 473.06 lineto stroke
778.05 501.56 1.000000 4n
771.82 501.56 moveto
784.28 501.56 lineto stroke
774.37 500.81 moveto
774.37 473.06 lineto stroke
797.41 495.56 1.000000 4n
797.41 489.56 1.000000 4n
793.73 494.81 moveto
793.73 473.06 lineto stroke
817.61 501.56 1.000000 4n
811.38 501.56 moveto
823.85 501.56 lineto stroke
813.93 500.81 moveto
813.93 473.06 lineto stroke
newpath
715.92 464.10 moveto
735.99 471.14 lineto
735.99 468.14 lineto
715.92 461.10 lineto
closepath
fill
newpath
754.65 474.56 moveto
814.28 474.56 lineto
814.28 471.56 lineto
754.65 471.56 lineto
closepath
fill
restore
%  S_BAR
118 linenum
0.70 setlinewidth
838.09 549.56 moveto
838.09 525.56 lineto stroke
838.09 495.56 moveto
838.09 471.56 lineto stroke
%  S_CHHEAD
122 linenum
%  S_STAFF
% staff 1
save
848.17 549.56 1.000000 4n
844.49 548.81 moveto
844.49 528.56 lineto stroke
886.90 552.56 1.000000 4n
886.90 540.56 1.000000 4n
879.53 537.56 1.000000 4n
883.22 551.81 moveto
883.22 516.56 lineto stroke
925.63 552.56 1.000000 4n
925.63 540.56 1.000000 4n
925.63 534.56 1.000000 4n
921.94 551.81 moveto
921.94 514.56 lineto stroke
restore
%  S_STAFF
% staff 2
save
848.17 480.56 1.000000 4n
0.70 setlinewidth
844.49 479.81 moveto
844.49 463.76 lineto stroke
867.53 501.56 1.000000 4n
861.30 501.56 moveto
873.77 501.56 lineto stroke
863.85 500.81 moveto
863.85 465.21 lineto stroke
886.90 498.56 1.000000 4n
886.90 492.56 1.000000 4n
883.22 497.81 moveto
883.22 466.66 lineto stroke
906.26 501.56 1.000000 4n
900.03 501.56 moveto
912.49 501.56 lineto stroke
902.58 500.81 moveto
902.58 468.11 lineto stroke
925.63 495.56 1.000000 4n
925.63 489.56 1.000000 4n
921.94 494.81 moveto
921.94 469.57 lineto stroke
945.83 501.56 1.000000 4n
939.60 501.56 moveto
952.06 501.56 lineto stroke
942.15 500.81 moveto
942.15 471.08 lineto stroke
newpath
844.14 465.26 moveto
942.50 472.58 lineto
942.50 469.58 lineto
844.14 462.26 lineto
closepath
fill
restore
%  S_BAR
124 linenum
0.70 setlinewidth
966.30 549.56 moveto
966.30 525.56 lineto stroke
966.30 495.56 moveto
966.30 471.56 lineto stroke
%  S_CHHEAD
127 linenum
%  S_STAFF
% staff 1
save
978.78 546.56 1.000000 4n
978.78 540.56 1.000000 4n
978.78 531.56 1.000000 4n
975.09 545.81 moveto
975.09 512.56 lineto stroke
1013.33 561.56 1.000000 4n
1007.10 561.56 moveto
1019.56 561.56 lineto stroke
1007.10 555.56 moveto
1019.56 555.56 lineto stroke
1013.33 546.56 1.000000 4n
1013.33 540.56 1.000000 4n
1013.33 531.56 1.000000 4n
1009.65 560.81 moveto
1009.65 512.56 lineto stroke
restore
%  S_STAFF
% staff 2
save
978.78 480.56 1.000000 4n
0.70 setlinewidth
982.46 481.31 moveto
982.46 501.56 lineto stroke
1013.33 501.56 1.000000 4n
1007.10 501.56 moveto
1019.56 501.56 lineto stroke
1009.65 500.81 moveto
1009.65 480.56 lineto stroke
restore
%  S_BAR
129 linenum
1049.26 540.56 1.000000 dot
1049.26 534.56 1.000000 dot
1053.26 549.56 moveto
1053.26 525.56 lineto stroke
3.00 setlinewidth
1057.26 549.56 moveto
1057.26 525.56 lineto stroke
0.70 setlinewidth
1049.26 486.56 1.000000 dot
1049.26 480.56 1.000000 dot
1053.26 495.56 moveto
1053.26 471.56 lineto stroke
3.00 setlinewidth
1057.26 495.56 moveto
1057.26 471.56 lineto stroke
0.70 setlinewidth
%  S_SSV
133 linenum
%  S_CLEFSIG
131 linenum
1065.01 537.56 1.000000 flat
1070.50 546.56 1.000000 flat
1065.01 477.56 1.000000 flat
1070.50 486.56 1.000000 flat
%  S_FEED
131 linenum
50.50 399.56 1074.24 5 1.000000 1.000000 staff
/Times-Roman findfont
11 scalefont
setfont
55.00 426.69 moveto
(19) show
50.50 335.27 1074.24 5 1.000000 1.000000 staff
49.50 411.56 323.27 brace
50.50 411.56 moveto
50.50 323.27 lineto stroke
%  S_CLEFSIG
139 linenum
62.29 393.56 1.000000 gclef
62.54 341.27 1.000000 fclef
78.33 399.56 1.000000 flat
83.82 408.56 1.000000 flat
78.33 329.27 1.000000 flat
83.82 338.27 1.000000 flat
101.56 402.56 1.000000 dot
101.56 396.56 1.000000 dot
98.56 411.56 moveto
98.56 387.56 lineto stroke
3.00 setlinewidth
94.56 411.56 moveto
94.56 387.56 lineto stroke
0.70 setlinewidth
101.56 338.27 1.000000 dot
101.56 332.27 1.000000 dot
98.56 347.27 moveto
98.56 323.27 lineto stroke
3.00 setlinewidth
94.56 347.27 moveto
94.56 323.27 lineto stroke
0.70 setlinewidth
%  S_CHHEAD
139 linenum
%  S_STAFF
% staff 1
save
117.80 432.56 1.000000 4n
111.57 429.56 moveto
124.03 429.56 lineto stroke
111.57 423.56 moveto
124.03 423.56 lineto stroke
111.57 417.56 moveto
124.03 417.56 lineto stroke
114.12 431.81 moveto
114.12 401.06 lineto stroke
137.89 429.56 1.000000 4n
129.44 429.56 1.000000 nat
131.66 429.56 moveto
144.12 429.56 lineto stroke
131.66 423.56 moveto
144.12 423.56 lineto stroke
131.66 417.56 moveto
144.12 417.56 lineto stroke
134.21 428.81 moveto
134.21 398.06 lineto stroke
newpath
113.77 402.56 moveto
134.56 399.56 lineto
134.56 396.56 lineto
113.77 399.56 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
117.80 335.27 1.000000 4rest
restore
%  S_BAR
141 linenum
0.70 setlinewidth
157.33 411.56 moveto
157.33 387.56 lineto stroke
157.33 347.27 moveto
157.33 323.27 lineto stroke
%  S_CHHEAD
144 linenum
%  S_STAFF
% staff 1
save
167.20 435.56 1.000000 4n
160.97 435.56 moveto
173.43 435.56 lineto stroke
160.97 429.56 moveto
173.43 429.56 lineto stroke
160.97 423.56 moveto
173.43 423.56 lineto stroke
160.97 417.56 moveto
173.43 417.56 lineto stroke
163.52 434.81 moveto
163.52 399.18 lineto stroke
183.97 432.56 1.000000 4n
177.74 429.56 moveto
190.21 429.56 lineto stroke
177.74 423.56 moveto
190.21 423.56 lineto stroke
177.74 417.56 moveto
190.21 417.56 lineto stroke
180.29 431.81 moveto
180.29 399.18 lineto stroke
204.02 423.56 1.000000 4n
194.67 423.56 1.000000 sharp
197.79 423.56 moveto
210.25 423.56 lineto stroke
197.79 417.56 moveto
210.25 417.56 lineto stroke
200.34 422.81 moveto
200.34 399.18 lineto stroke
222.13 426.56 1.000000 4n
215.90 423.56 moveto
228.37 423.56 lineto stroke
215.90 417.56 moveto
228.37 417.56 lineto stroke
218.45 425.81 moveto
218.45 399.18 lineto stroke
240.25 417.56 1.000000 4n
234.02 417.56 moveto
246.48 417.56 lineto stroke
236.57 416.81 moveto
236.57 399.18 lineto stroke
259.20 420.56 1.000000 4n
252.97 417.56 moveto
265.44 417.56 lineto stroke
255.52 419.81 moveto
255.52 399.18 lineto stroke
newpath
163.17 400.68 moveto
255.87 400.68 lineto
255.87 397.68 lineto
163.17 397.68 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
167.20 329.27 1.000000 4n
0.70 setlinewidth
170.88 330.02 moveto
170.88 350.27 lineto stroke
204.02 356.27 1.000000 4n
197.79 353.27 moveto
210.25 353.27 lineto stroke
204.02 350.27 1.000000 4n
204.02 341.27 1.000000 4n
200.34 355.52 moveto
200.34 320.27 lineto stroke
240.25 356.27 1.000000 4n
234.02 353.27 moveto
246.48 353.27 lineto stroke
240.25 350.27 1.000000 4n
240.25 341.27 1.000000 4n
236.57 355.52 moveto
236.57 320.27 lineto stroke
restore
%  S_BAR
146 linenum
0.70 setlinewidth
278.64 411.56 moveto
278.64 387.56 lineto stroke
278.64 347.27 moveto
278.64 323.27 lineto stroke
%  S_CHHEAD
150 linenum
%  S_STAFF
% staff 1
save
288.59 411.56 1.000000 4n
284.91 410.81 moveto
284.91 390.56 lineto stroke
287.93 390.56 1.000000 upflag
306.70 399.56 1.000000 8rest
326.98 411.56 1.000000 4n
336.24 414.56 1.000000 dot
323.30 410.81 moveto
323.30 390.56 lineto stroke
375.24 411.56 1.000000 4n
371.56 410.81 moveto
371.56 390.56 lineto stroke
374.58 390.56 1.000000 upflag
restore
%  S_STAFF
% staff 2
save
288.59 329.27 1.000000 4n
0.70 setlinewidth
292.27 330.02 moveto
292.27 350.27 lineto stroke
326.98 356.27 1.000000 4n
320.75 353.27 moveto
333.21 353.27 lineto stroke
326.98 350.27 1.000000 4n
326.98 341.27 1.000000 4n
323.30 355.52 moveto
323.30 320.27 lineto stroke
356.46 356.27 1.000000 4n
350.23 353.27 moveto
362.69 353.27 lineto stroke
356.46 350.27 1.000000 4n
356.46 341.27 1.000000 4n
352.78 355.52 moveto
352.78 320.27 lineto stroke
restore
%  S_BAR
152 linenum
0.70 setlinewidth
394.67 411.56 moveto
394.67 387.56 lineto stroke
394.67 347.27 moveto
394.67 323.27 lineto stroke
%  S_CHHEAD
156 linenum
%  S_STAFF
% staff 1
save
404.55 414.56 1.000000 4n
400.86 413.81 moveto
400.86 390.29 lineto stroke
422.66 411.56 1.000000 4n
418.98 410.81 moveto
418.98 387.87 lineto stroke
440.78 405.56 1.000000 4n
437.10 404.81 moveto
437.10 385.45 lineto stroke
458.89 399.56 1.000000 4n
455.21 398.81 moveto
455.21 383.03 lineto stroke
477.01 396.56 1.000000 4n
473.33 395.81 moveto
473.33 380.60 lineto stroke
495.96 399.56 1.000000 4n
492.28 398.81 moveto
492.28 378.07 lineto stroke
newpath
400.51 391.79 moveto
492.63 379.57 lineto
492.63 376.57 lineto
400.51 388.79 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
404.55 329.27 1.000000 4n
0.70 setlinewidth
408.23 330.02 moveto
408.23 350.27 lineto stroke
440.78 356.27 1.000000 4n
434.55 353.27 moveto
447.01 353.27 lineto stroke
440.78 350.27 1.000000 4n
440.78 341.27 1.000000 4n
437.10 355.52 moveto
437.10 320.27 lineto stroke
477.01 356.27 1.000000 4n
470.78 353.27 moveto
483.24 353.27 lineto stroke
477.01 350.27 1.000000 4n
477.01 341.27 1.000000 4n
473.33 355.52 moveto
473.33 320.27 lineto stroke
restore
%  S_BAR
158 linenum
0.70 setlinewidth
515.40 411.56 moveto
515.40 387.56 lineto stroke
515.40 347.27 moveto
515.40 323.27 lineto stroke
%  S_CHHEAD
162 linenum
%  S_STAFF
% staff 1
save
525.49 411.56 1.000000 4n
521.80 410.81 moveto
521.80 390.77 lineto stroke
543.60 408.56 1.000000 4n
539.92 407.81 moveto
539.92 387.45 lineto stroke
561.72 402.56 1.000000 4n
558.03 401.81 moveto
558.03 384.12 lineto stroke
579.83 396.56 1.000000 4n
576.15 395.81 moveto
576.15 380.80 lineto stroke
601.02 390.56 1.000000 4n
604.71 391.31 moveto
604.71 411.56 lineto stroke
newpath
521.45 392.27 moveto
576.50 382.30 lineto
576.50 379.30 lineto
521.45 389.27 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
525.49 359.27 1.000000 2n
534.97 362.27 1.000000 dot
0.70 setlinewidth
519.04 359.27 moveto
531.93 359.27 lineto stroke
519.04 353.27 moveto
531.93 353.27 lineto stroke
525.49 347.27 1.000000 2n
534.97 350.27 1.000000 dot
525.49 341.27 1.000000 2n
534.97 344.27 1.000000 dot
521.59 358.52 moveto
521.59 320.27 lineto stroke
restore
%  S_BAR
164 linenum
0.70 setlinewidth
631.65 411.56 moveto
631.65 387.56 lineto stroke
631.65 347.27 moveto
631.65 323.27 lineto stroke
%  S_CHHEAD
168 linenum
%  S_STAFF
% staff 1
save
641.52 390.56 1.000000 4n
645.20 391.31 moveto
645.20 411.56 lineto stroke
677.75 390.56 1.000000 4n
681.43 391.31 moveto
681.43 411.56 lineto stroke
713.98 390.56 1.000000 4n
717.66 391.31 moveto
717.66 411.56 lineto stroke
restore
%  S_STAFF
% staff 2
save
641.52 320.27 1.000000 4n
0.70 setlinewidth
645.20 321.02 moveto
645.20 370.07 lineto stroke
659.64 353.27 1.000000 4n
653.40 353.27 moveto
665.87 353.27 lineto stroke
663.32 354.02 moveto
663.32 370.07 lineto stroke
677.75 347.27 1.000000 4n
681.43 348.02 moveto
681.43 370.07 lineto stroke
695.87 341.27 1.000000 4n
699.55 342.02 moveto
699.55 370.07 lineto stroke
713.98 332.27 1.000000 4n
717.66 333.02 moveto
717.66 370.07 lineto stroke
732.94 326.27 1.000000 4n
736.62 327.02 moveto
736.62 370.07 lineto stroke
newpath
644.85 371.57 moveto
736.97 371.57 lineto
736.97 368.57 lineto
644.85 368.57 lineto
closepath
fill
restore
%  S_BAR
170 linenum
0.70 setlinewidth
752.37 411.56 moveto
752.37 387.56 lineto stroke
752.37 347.27 moveto
752.37 323.27 lineto stroke
%  S_CHHEAD
174 linenum
%  S_STAFF
% staff 1
save
764.48 408.56 1.000000 4n
773.75 408.56 1.000000 dot
760.80 407.81 moveto
760.80 387.56 lineto stroke
811.90 402.56 1.000000 4n
808.22 401.81 moveto
808.22 385.57 lineto stroke
830.01 411.56 1.000000 4n
826.33 410.81 moveto
826.33 387.59 lineto stroke
848.97 408.56 1.000000 4n
845.29 407.81 moveto
845.29 389.69 lineto stroke
newpath
807.87 387.07 moveto
845.64 391.19 lineto
845.64 388.19 lineto
807.87 384.07 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
764.48 320.27 1.000000 4n
0.70 setlinewidth
768.16 321.02 moveto
768.16 341.27 lineto stroke
793.96 353.27 1.000000 4n
787.73 353.27 moveto
800.19 353.27 lineto stroke
793.96 347.27 1.000000 4n
793.96 341.27 1.000000 4n
790.28 352.52 moveto
790.28 320.27 lineto stroke
830.01 353.27 1.000000 4n
823.78 353.27 moveto
836.25 353.27 lineto stroke
830.01 347.27 1.000000 4n
830.01 341.27 1.000000 4n
826.33 352.52 moveto
826.33 320.27 lineto stroke
restore
%  S_BAR
176 linenum
0.70 setlinewidth
868.40 411.56 moveto
868.40 387.56 lineto stroke
868.40 347.27 moveto
868.40 323.27 lineto stroke
%  S_CHHEAD
180 linenum
%  S_STAFF
% staff 1
save
878.28 405.56 1.000000 4n
874.60 404.81 moveto
874.60 389.51 lineto stroke
896.39 420.56 1.000000 4n
890.16 417.56 moveto
902.62 417.56 lineto stroke
892.71 419.81 moveto
892.71 387.52 lineto stroke
914.51 414.56 1.000000 4n
910.83 413.81 moveto
910.83 385.54 lineto stroke
932.62 408.56 1.000000 4n
928.94 407.81 moveto
928.94 383.55 lineto stroke
950.74 402.56 1.000000 4n
947.06 401.81 moveto
947.06 381.57 lineto stroke
969.69 396.56 1.000000 4n
966.01 395.81 moveto
966.01 379.49 lineto stroke
newpath
874.25 391.01 moveto
966.36 380.99 lineto
966.36 377.99 lineto
874.25 388.01 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
878.28 350.27 1.000000 4n
878.28 344.27 1.000000 4n
0.70 setlinewidth
874.60 349.52 moveto
874.60 323.27 lineto stroke
914.51 353.27 1.000000 4n
908.28 353.27 moveto
920.74 353.27 lineto stroke
914.51 338.27 1.000000 4n
910.83 352.52 moveto
910.83 317.27 lineto stroke
950.74 359.27 1.000000 4n
944.51 359.27 moveto
956.97 359.27 lineto stroke
944.51 353.27 moveto
956.97 353.27 lineto stroke
950.74 341.27 1.000000 4n
947.06 358.52 moveto
947.06 320.27 lineto stroke
restore
%  S_BAR
182 linenum
0.70 setlinewidth
989.13 411.56 moveto
989.13 387.56 lineto stroke
989.13 347.27 moveto
989.13 323.27 lineto stroke
%  S_CHHEAD
185 linenum
%  S_STAFF
% staff 1
save
1001.24 399.56 1.000000 4n
997.56 398.81 moveto
997.56 378.56 lineto stroke
1033.62 399.56 1.000000 4rest
/Times-Roman findfont
12 scalefont
setfont
992.20 413.57 moveto
1001.24 413.57 1.000000 ferm
1010.27 413.57 moveto
restore
%  S_STAFF
% staff 2
save
1001.24 350.27 1.000000 4n
1001.24 335.27 1.000000 4n
0.70 setlinewidth
997.56 349.52 moveto
997.56 314.27 lineto stroke
1033.62 320.27 1.000000 4n
1037.30 321.02 moveto
1037.30 341.27 lineto stroke
restore
%  S_BAR
188 linenum
1064.74 402.56 1.000000 dot
1064.74 396.56 1.000000 dot
1068.74 411.56 moveto
1068.74 387.56 lineto stroke
3.00 setlinewidth
1072.74 411.56 moveto
1072.74 387.56 lineto stroke
0.70 setlinewidth
1064.74 338.27 1.000000 dot
1064.74 332.27 1.000000 dot
1068.74 347.27 moveto
1068.74 323.27 lineto stroke
3.00 setlinewidth
1072.74 347.27 moveto
1072.74 323.27 lineto stroke
0.70 setlinewidth
%  Printing header/footer
/Times-Roman findfont
12 scalefont
setfont
501.94 735.31 moveto
(Kaleidakustikon Layer 7) show
/Times-Roman findfont
12 scalefont
setfont
561.12 722.57 moveto
showpage
restore
%%Trailer
%%DocumentFonts: /Times-Roman /NewCenturySchlbk-Bold /Mfont0 
%%Pages: 1

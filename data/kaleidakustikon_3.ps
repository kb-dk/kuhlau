%!PS-Adobe-1.0
%%Creator: Mup (Version 6.1)
%%Title: music:  from kaleidakustikon_3.mup
%%CreationDate: Wed Jun 12 14:17:25 2013
%%Pages: (atend)
%%DocumentFonts: (atend)
%%BoundingBox: 0 0 612 792
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
% Mup prolog Copyright (c) 1995, 1996, 1997, 1998, 1999, 2000, 2003, 2004,
% 2008, 2009, 2012 by Arkkra Enterprises
% All rights reserved

% Mup PostScript Prolog 6.1 for use with Mup 6.1

% lwid is used as the width of a standard (thin) line in the music
% character definitions.
/lwid 70 def
/halflwid lwid 2 div def

% Define the following for use in do_upshortnote, do_dnshortnote, and
% do_shortrest; it has to be done outside of the music font definition.
/utildict 10 dict def
utildict begin
	/setnumflags	{	/numflags	exch def } def
	/sethooksm1	{	/hooksm1	exch def } def
	/setoffsets	{	/offsets	exch def } def
	/setx		{	/x		exch def } def
	/sety		{	/y		exch def } def
end

% Define a music character font.  Each music character is defined as if it
% were a normal ASCII character in a strange font where "A" looks like a
% treble clef, "B" looks like a bass clef, etc.

/mfont0 100 dict def
mfont0 begin
	/FontType 3 def
	/FontMatrix [ .001 0 0 0.001 0 0 ] def
	/FontBBox [ -2000 -4030 2000 4030 ] def
	/FontName (Mfont0) def

	% set up Encoding vector with standard names
	/Encoding 256 array def
	StandardEncoding Encoding copy
	pop

	% the following definitions are used for quarter rests
	/topx -170 def /topy 950 def
	/cor1x 250 def /cor1y 450 def
	/cor2x -300 def /cor2y 200 def
	/cor3x 250 def /cor3y -400 def

	% the following definitions are used for double sharps
	/limit 300 halflwid add def
	/off 70 def
	/inbendsmall limit 200 sub def
	/inbendbig limit 20 sub def
	/outbendsmall 100 def
	/outbendbig outbendsmall off add def

	%%%%% define routines that will be used by multiple characters %%%%%
	/do_1n {
		gsave
		newpath -10 rotate 1.6 1 scale
		0 0 325 0 360 arc		%outer ellipse
		1 1.6 div 1 scale 10 rotate	%back to original
		35 rotate 0.85 1.1 scale
		0 0 275 0 360 arc		%inner ellipse
		eofill
		grestore
	} def
	/do_upflag {
		-315 0 moveto
		-300 100 -100 480 0 600 curveto
		300 960 350 1500 200 1700 curveto
		130 1700 lineto
		350 1200 50 650 -315 600 curveto
		fill
	} def
	/do_flat {
		-250 -400 moveto	%outer edge of loop
		500 0 350 650 -250 160 curveto
		-250 160 lwid sub lineto %inner edge of loop
		100 400 300 0 -250 -400 lwid add curveto
		fill

		lwid setlinewidth	%stem
		-250 1100 moveto -250 -400 lineto stroke
	} def
	/do_diamond {
		newpath
		420 0 moveto 0 300 lineto -420 0 lineto
		0 -300 lineto closepath
		259 -29 moveto -41 185 lineto -259 29 lineto
		41 -185 lineto closepath
		eofill
	} def
	/do_2n {
		gsave
		newpath 25 rotate 1.4 1 scale
		0 0 315 0 360 arc		%outer ellipse
		1 1.4 div 1 scale		%back to original
		1.3 0.5 scale
		0 0 310 0 360 arc		%inner ellipse
		eofill
		grestore
	} def
	/do_4n {
		gsave
		newpath 25 rotate 1.35 1 scale
		0 0 310 0 360 arc fill
		grestore
	} def
	/do_com {
		newpath
		330 250 150 0 360 arc fill	%knob at upper right
		465 300 moveto			%outer boundary
		410 500 200 635 0 635 curveto
		-750 635 -750 -635 0 -635 curveto
		350 -635 480 -300 500 -100 curveto
		430 -100 lineto			%inner boundary
		380 -300 250 -565 0 -565 curveto
		-450 -565 -450 565 0 565 curveto
		200 565 370 350 395 300 curveto
		fill
	} def
	/do_ferm {
		0 0 800 lwid sub 0 180 arc	%inner arc
		-800 0 lineto
		0 270 lwid sub 800 180 0 arcn	%outer arc
		800 0 lineto fill
		0 120 120 0 360 arc fill	%the dot
	} def
	/do_mor {
		gsave
		0.7 1 scale	%scrunch the following horizontally
		45 rotate	%to pretend all lines horz or vertical
		0 1 1 {
			pop	%we don't need the loop variable
			%one half of the mordent
			0 40 moveto 350 40 lineto 350 -460 lineto
			750 -460 lineto 750 -540 lineto
			150 -540 lineto 150 -40 lineto
			0 -40 lineto fill
			180 rotate	%to do the other half
		} for
		grestore
	} def
	/do_turn {
		gsave
		0 1 1 {
			pop	%we don't need the loop variable
			0 -100 moveto	%outer boundary
			200 -400 625 -400 625 0 curveto
			625 200 500 325 300 325 curveto
			300 185 lineto	%inner boundary
			450 255 555 150 555 0 curveto
			555 -350 250 -250 0 100 curveto
			fill
			300 255 70 0 360 arc fill %knob on end
			180 rotate	%to do the other half
		} for
		grestore
	} def

	/do_upshortnote {
		utildict begin
		setnumflags		%set numflags from the stack
		gsave
		-330 0 translate	%half a flag width
		do_4n			%do a quarter note head
		lwid setlinewidth
		370 0 moveto
		370 2100 numflags 2 sub flagsep mul add lineto stroke
		670 2100 numflags 2 sub flagsep mul add translate
		1 -1 scale		%reflect across X axis
		0 1 numflags 1 sub {
			do_upflag	%do an upflag
			pop		%we don't need the loop variable
			0 flagsep translate
		} for
		grestore
		end
	} def

	/do_dnshortnote {
		utildict begin
		setnumflags		%set numflags from the stack
		do_4n			%do a quarter note head
		lwid setlinewidth
		-370 0 moveto
		-370 -2100 numflags 2 sub flagsep mul sub lineto stroke
		gsave
		-70 -2100 numflags 2 sub flagsep mul sub translate
		0 1 numflags 1 sub {
			do_upflag	%do an upflag
			pop		%we don't need the loop variable
			0 flagsep translate
		} for
		grestore
		end
	} def

	/do_shortrest {
		utildict begin
		sety setx setoffsets sethooksm1	%set variable from the stack
		gsave
		-105.8 offsets mul -600 offsets mul translate
		0 1 hooksm1 {		%loop once per hook
			newpath
			1 setlinewidth
			gsave
			1 1.2 scale
			-150 300 1.2 div 140 0 360 arc fill 	%the dot
			grestore
			lwid setlinewidth
			-50 700 550 255 315 arc		%rest of the hook
			hooksm1 lt { stroke 105.8 600 translate } if
		} for
		x y lineto stroke
		grestore
		end
	} def


	% subsidiary dictionary of character definitions
	/CharStrings 128 dict def
	CharStrings begin

		/.notdef {} def

		% Here are the definitions of the characters.  A stepsize here
		% is 300 units (assuming the character is drawn at its default
		% size).

		% gclef
		/A {
			newpath
			%start with inner curl, inside boundary
			-50 -300 moveto
			-450 600 700 700 750 0 curveto
			750 -800 -700 -800 -700 200 curveto
			-700 900 500 1400 520 2250 curveto
			520 2900 300 3000 200 3000 curveto
			100 3000 -400 2500 -200 1800 curveto
			350 -600 lineto
			720 -1600 0 -1650 -400 -1400 curveto

			%go back to start, drawing the other boundary
			-400 -1480 lineto
			0 -1700 800 -1700 430 -600 curveto
			-120 1800 lineto
			-300 2400 200 2800 250 2800 curveto
			400 2800 430 2700 430 2450 curveto
			430 1800 -900 1200 -900 300 curveto
			-750 -900 800 -900 850 0 curveto
			900 1100 -750 900 -120 -300 curveto fill

			%circle at the bottom
			-300 -1250 250 0 360 arc fill
		} def

		% fclef
		/B {
			newpath
			%start with outside boundary, at bottom
			-1000 -1700 moveto
			100 -1100 500 -600 450 0 curveto
			450 850 -1100 850 -950 0 curveto

			%go back to start, drawing the other boundary
			-880 0 lineto
			-920 400 -600 560 -300 560 curveto
			0 560 150 400 150 0 curveto
			150 -400 100 -900 -1000 -1620 curveto fill

			%circle at the left
			newpath
			-700 0 250 0 360 arc fill

			%do the two dots after the main curve
			700 -300 100 0 360 arc fill
			700 300 100 0 360 arc fill
		} def

		% cclef
		/C {
			gsave
			%do upper curved part, then scale to do mirror image
			0 1 1 {
				pop	%we don't need the loop variable
				%outer boundary of curve
				-170 0 moveto 100 300 lineto
				400 -200 750 300 750 650 curveto
				750 1100 450 1235 250 1235 curveto
				0 1235 -143 1100 -143 950 curveto

				%inner boundary of curve
				0 950 lineto
				0 1100 30 1165 250 1165 curveto
				300 1165 450 1100 450 650 curveto
				450 400 400 -100 100 400 curveto
				-270 0 lineto fill
				%stroke
				%-270 0 moveto 100 400 lineto
				%400 -100 450 400 450 650 curveto
				%450 1100 300 1165 250 1165 curveto
				%30 1165 0 1100 0 950 curveto
				%stroke

				%elliptical ball at end of curve
				gsave
				1.3 1 scale
				10 950 120 0 360 arc fill
				grestore
				1 -1 scale	%reflect across X axis
			} for
			grestore

			% two vertical lines on the left
			300 setlinewidth -600 -1200 halflwid sub moveto
			-600 1200 halflwid add lineto stroke
			lwid setlinewidth -300 -1200 halflwid sub moveto
			-300 1200 halflwid add lineto stroke
		} def

		% dblwhole
		/D {
			do_1n		%do a whole note
			lwid setlinewidth
			-490 -600 moveto -490 600 lineto stroke
			490 -600 moveto 490 600 lineto stroke
		} def

		% 1n
		/E {
			do_1n		%do a whole note
		} def

		% 2n
		/F {
			do_2n		%do a half note
		} def

		% 4n
		/G {
			do_4n		%do a quarter note head
		} def

		% upflag
		/H {
			do_upflag		%do an upflag
		} def

		% dnflag
		/I {
			gsave
			1 -1 scale	%reflect across X axis
			do_upflag		%do an upflag
			grestore
		} def

		% dwhrest
		/J {
			300 setlinewidth
			0 0 moveto 0 600 lineto stroke
		} def

		% 1rest
		/K {
			lwid setlinewidth
			-750 600 moveto 750 600 lineto stroke
			300 setlinewidth
			-400 450 moveto 400 450 lineto stroke
		} def

		% 2rest
		/L {
			lwid setlinewidth
			-750 0 moveto 750 0 lineto stroke
			300 setlinewidth
			-400 150 moveto 400 150 lineto stroke
		} def

		% 4rest
		/M {
			newpath
			cor3x cor3y halflwid add moveto
			%-400 -200 -450 -650 50 -950 lwid add curveto
			-450 -50 -450 -650 50 -950 lwid add curveto
			-150 -650 -100 -250 cor3x cor3y halflwid sub curveto
			fill

			cor1x cor1y moveto cor1x 200 sub cor1y 200 add lineto
			cor2x cor2y lineto cor2x 200 add cor2y 200 sub lineto
			fill

			lwid setlinewidth
			topx topy moveto cor1x cor1y lineto stroke
			cor2x cor2y moveto cor3x cor3y lineto stroke
		} def

		% 8rest
		/N {
			0 0 0 -600 do_shortrest
		} def

		% 16rest
		/O {
			1 1 100 -1200 do_shortrest
		} def

		% 32rest
		/P {
			2 1 0 -1800 do_shortrest
		} def

		% 64rest
		/Q {
			3 2 -80 -2100 do_shortrest
		} def

		% 128rest
		/R {
			4 2 -150 -2700 do_shortrest
		} def

		% 256rest
		/S {
			5 3 -280 -3300 do_shortrest
		} def

		% dot
		/T {
			newpath
			0 0 120 0 360 arc fill
		} def

		% nat
		/U {
			% fill crossbars so that we can do parallelograms
			-235 -470 moveto -235 -270 lineto
			235 -130 lineto 235 -330 lineto fill
			-235 130 moveto -235 330 lineto
			235 470 lineto 235 270 lineto fill

			% vertical strokes
			lwid setlinewidth
			-200 -380 moveto -200 850 lineto stroke
			200 -850 moveto 200 380 lineto stroke
		} def

		% sharp
		/V {
			% fill crossbars so that we can do parallelograms
			-325 -480 moveto -325 -280 lineto
			325 -120 lineto 325 -320 lineto fill
			-325 120 moveto -325 320 lineto
			325 480 lineto 325 280 lineto fill

			% vertical strokes
			lwid setlinewidth
			-150 -930 moveto -150 880 lineto stroke
			150 -880 moveto 150 930 lineto stroke
		} def

		% flat
		/W {
			do_flat		%do a flat
		} def

		% dblsharp
		/X {
			gsave
			0 1 3 {		%loop once for each of 4 sticks
				pop	%we don't need the loop variable
				0 off neg moveto
				outbendbig outbendsmall lineto
				inbendbig inbendsmall lineto
				limit limit lineto
				inbendsmall inbendbig lineto
				outbendsmall outbendbig lineto
				off neg 0 lineto
				fill
				-90 rotate
			} for
			grestore
		} def

		% dblflat
		/Y {
			-290 580 290 {	%loop once for each flat

				gsave
				1 setlinewidth
				0 translate	%translate left/right (loop var)
				do_flat		%do a flat
				grestore

			} for
		} def

		% xnote
		/Z {
			gsave
			1.15 1 scale 120 setlinewidth 1 setlinecap	%round
			-300 -300 moveto 300 300 lineto stroke
			-300 300 moveto 300 -300 lineto stroke
			grestore
		} def

		% dwhdiamond
		/a {
			do_diamond	%do a diamond
			lwid setlinewidth
			-420 -600 moveto -420 600 lineto stroke
			420 -600 moveto 420 600 lineto stroke
		} def

		% diamond
		/b {
			do_diamond	%do a diamond
		} def

		% filldiamond
		/c {
			420 0 moveto 0 300 lineto
			-420 0 lineto 0 -300 lineto fill
		} def

		% up2n
		/d {
			lwid setlinewidth
			380 0 moveto 380 2100 lineto stroke
			do_2n		%do a half note
		} def

		% dn2n
		/e {
			lwid setlinewidth
			-380 0 moveto -380 -2100 lineto stroke
			do_2n		%do a half note
		} def

		% up4n
		/f {
			do_4n		%do a quarter note head
			lwid setlinewidth
			370 0 moveto 370 2100 lineto stroke
		} def

		% dn4n
		/g {
			do_4n		%do a quarter note head
			lwid setlinewidth
			-370 0 moveto -370 -2100 lineto stroke
		} def

		% up8n
		/h {
			gsave
			-330 0 translate	% half a flag width
			do_4n		%do a quarter note head
			lwid setlinewidth
			370 0 moveto 370 2100 lineto stroke
			670 2100 translate
			1 -1 scale	%reflect across X axis
			do_upflag		%do an upflag
			grestore
		} def

		% dn8n
		/i {
			do_4n		%do a quarter note head
			lwid setlinewidth
			-370 0 moveto -370 -2100 lineto stroke
			gsave
			-70 -2100 translate
			do_upflag		%do an upflag
			grestore
		} def

		% up16n
		/j {
			2 do_upshortnote
		} def

		% dn16n
		/k {
			2 do_dnshortnote
		} def

		% up32n
		/l {
			3 do_upshortnote
		} def

		% dn32n
		/m {
			3 do_dnshortnote
		} def

		% up64n
		/n {
			4 do_upshortnote
		} def

		% dn64n
		/o {
			4 do_dnshortnote
		} def

		% up128n
		/p {
			5 do_upshortnote
		} def

		% dn128n
		/q {
			5 do_dnshortnote
		} def

		% up256n
		/r {
			6 do_upshortnote
		} def

		% dn256n
		/s {
			6 do_dnshortnote
		} def

		% com
		/t {
			do_com		%do a common time symbol
		} def

		% cut
		/u {
			do_com		%do a common time symbol
			lwid setlinewidth
			0 -900 moveto 0 900 lineto stroke
		} def

		% begped
		/v {
			lwid setlinewidth
			-200 600 moveto -200 0 lineto 200 0 lineto stroke
		} def

		% pedal
		/w {
			lwid setlinewidth
			-500 0 moveto -450 0 lineto 0 600 lineto
			450 0 lineto 500 0 lineto stroke
		} def

		% endped
		/x {
			lwid setlinewidth
			200 600 moveto 200 0 lineto -200 0 lineto stroke
		} def

		% dnbow
		/y {
			lwid setlinewidth
			-350 0 moveto -350 900 lineto stroke
			350 0 moveto 350 900 lineto stroke
			200 setlinewidth
			-350 800 moveto 350 800 lineto stroke
		} def

		% upbow
		/z {
			lwid setlinewidth
			-300 900 moveto 0 0 lineto 300 900 lineto stroke
		} def

		% wedge
		/one {
			0 0 moveto -150 500 lineto 150 500 lineto fill
		} def

		% uwedge
		/two {
			-150 0 moveto 150 0 lineto 0 500 lineto fill
		} def

		% ferm
		/three {
			newpath
			do_ferm		%do a right side up fermata
		} def

		% uferm
		/four {
			newpath
			gsave
			0 270 lwid sub 800 add translate %baseline at bottom
			180 rotate			%upside down
			do_ferm		%do a right side up fermata
			grestore
		} def

		% sign
		/five {
			gsave
			%do upper left curved part, upper right dot;
			%then rotate 180 to do other half
			0 1 1 {
				pop	%we don't need the loop variable
				0 100 moveto		%inner boundary
				-1000 300 -400 750 -200 700 curveto
				-200 800 lineto		%outer boundary
				-550 900 -1100 100 0 -100 curveto
				fill
				%dot at end of curve
				-200 700 100 0 360 arc fill
				%dot in upper right quadrant
				500 200 70 0 360 arc fill
				180 rotate
			} for
			grestore

			%slash through middle
			lwid setlinewidth
			-400 -800 moveto 400 800 lineto stroke
		} def

		% coda
		/six {
			newpath
			gsave
			0.6 1 scale
			0 0 550 0 360 arc	%outside boundary
			1 0.6 div 1 scale	%back to original
			0.9 1 scale
			0 0 650 0 360 arc	%inside boundary
			eofill
			grestore
			lwid setlinewidth
			0 -850 moveto 0 850 lineto stroke
			-800 0 moveto 800 0 lineto stroke
		} def

		% mor
		/seven {
			do_mor		%do a mordent
		} def

		% invmor
		/eight {
			do_mor		%do a mordent
			lwid setlinewidth
			0 -450 moveto 0 450 lineto stroke
		} def

		% turn
		/nine {
			do_turn		%do a turn
		} def

		% invturn
		/zero {
			gsave
			1 -1 scale	%reflect across X axis
			do_turn		%do a turn
			grestore
		} def

		% acc_gt
		/numbersign {
			lwid setlinewidth
			-500 300 moveto 500 0 lineto -500 -300 lineto stroke
		} def

		% acc_hat
		/dollar {
			newpath
			-365 0 moveto 0 860 lineto 365 0 lineto
			150 0 lineto -75 530 lineto -300 0 lineto fill
		} def

		% acc_uhat
		/quotedbl {
			newpath
			365 860 moveto 0 0 lineto -365 860 lineto
			-150 860 lineto 75 330 lineto 300 860 lineto fill
		} def

		% tr
		/asterisk {
			%vertical bar of t
			-350 1000 moveto -550 200 lineto
			-612.5 -50 -212.5 -50 -160 200 curveto
			-230 200 lineto
			-300 50 -420 50 -400 200 curveto
			-200 1000 lineto fill

			%crossbar of t and vertical bar of r
			-700 600 moveto -160 600 lineto
			20 600 30 520 60 440 curveto
			-50 0 lineto 70 0 lineto 180 440 lineto
			190 480 100 670 -150 670 curveto
			-690 670 lineto fill

			%horizontal curve of r
			100 480 moveto
			300 630 450 700 650 550 curveto
			560 480 lineto
			450 630 300 560 100 390 curveto
			fill

			%knob at end of r
			600 460 100 0 360 arc fill
		} def

		% leg
		/comma {
			100 setlinewidth
			-400 0 moveto 400 0 lineto stroke
		} def

		% rr
		/hyphen {
			100 setlinewidth
			-400 0 moveto 0 1000 lineto stroke
			0 0 moveto 400 1000 lineto stroke
		} def

		% measrpt
		/period {
			newpath -450 400 150 0 360 arc fill
			newpath 450 -400 150 0 360 arc fill
			200 setlinewidth
			-550 -600 moveto 550 600 lineto stroke
		} def

		% copyright
		/slash {
			lwid setlinewidth
			newpath 0 400 400 0 360 arc stroke
			newpath 0 400 200 45 315 arc stroke
		} def

		% dim
		/quoteleft {
			50 setlinewidth
			newpath 0 640 220 0 360 arc stroke
		} def

		% halfdim
		/quoteright {
			50 setlinewidth
			newpath 0 640 220 0 360 arc stroke
			newpath -340 300 moveto 340 980 lineto stroke
		} def

		% triangle
		/asciicircum {
			50 setlinewidth
			newpath -340 -10 moveto 0 710 lineto
			340 -10 lineto closepath stroke
		} def

		% qwhrest
		/ampersand {
			300 setlinewidth
			0 -600 moveto 0 600 lineto stroke
		} def

		% ll1rest
		/exclam {
			310 setlinewidth
			-400 455 moveto 400 450 lineto stroke
		} def

		% ll2rest
		/at {
			310 setlinewidth
			-400 145 moveto 400 150 lineto stroke
		} def
	end

	/BuildChar {

		exch begin
		Encoding exch get

		dup
		Mcbbox0 exch get
		aload pop setcachedevice

		CharStrings exch get
		exec
		end
	} def
end


% Define another music character font, since there are too many to fit in one
% font.  It works the same way as the first one.

/mfont1 100 dict def
mfont1 begin
	/FontType 3 def
	/FontMatrix [ .001 0 0 0.001 0 0 ] def
	/FontBBox [ -2000 -4030 2000 4030 ] def
	/FontName (Mfont1) def

	% set up Encoding vector with standard names
	/Encoding 256 array def
	StandardEncoding Encoding copy
	pop

	%%%%% define routines that will be used by multiple characters %%%%%

	/do_dwh_bars {
		% the two bars surrounding a double whole note
		lwid setlinewidth
		-420 -600 moveto -420 600 lineto stroke
		420 -600 moveto 420 600 lineto stroke
	} def
	/do_righttriangle {
		newpath
		420 270 moveto -420 270 lineto 350 -300 lineto 420 -300 lineto
		350 150 moveto -140 150 lineto 350 -213 lineto
		eofill
	} def
	/do_fillrighttriangle {
		newpath
		420 270 moveto -420 270 lineto 350 -300 lineto 420 -300 lineto
		fill
	} def
	/do_rectangle {
		newpath
		420 270 moveto -420 270 lineto -420 -270 lineto 420 -270 lineto
		350 150 moveto -350 150 lineto -350 -150 lineto 350 -150 lineto
		eofill
	} def
	/do_isostriangle {
		newpath
		0 300 moveto -420 -270 lineto 420 -270 lineto
		0 182 moveto -245 -150 lineto 245 -150 lineto
		eofill
	} def
	/do_piewedge {
		newpath
		0 -300 moveto 0 -244 514 35 145 arc
		0 -209 moveto 0 -244 394 43 137 arc
		eofill
	} def
	/do_semicircle {
		newpath
		gsave
		1 1.357 scale 420 199 moveto 0 199 420 180 360 arc
		1 1.09 scale 350 111 moveto 0 199 350 194.1 345.9 arc
		eofill
		grestore
	} def
	/do_slashhead {
		newpath
		lwid setlinewidth
		-620 -530 moveto -480 -670 lineto 620 530 lineto 480 670 lineto
		closepath stroke
	} def

	% subsidiary dictionary of character definitions
	/CharStrings 128 dict def
	CharStrings begin

		/.notdef {} def

		% Here are the definitions of the characters.  A stepsize here
		% is 300 units (assuming the character is drawn at its default
		% size).

		% dwhrighttriangle
		/A {
			do_righttriangle
			do_dwh_bars
		} def

		% righttriangle
		/B {
			do_righttriangle
		} def

		% fillrighttriangle
		/C {
			newpath
			420 270 moveto -420 270 lineto 350 -300 lineto
			420 -300 lineto
			fill
		} def

		% udwhrighttriangle
		/D {
			gsave
			180 rotate
			do_righttriangle
			do_dwh_bars
			grestore
		} def

		% urighttriangle
		/E {
			gsave
			180 rotate
			do_righttriangle
			grestore
		} def

		% ufillrighttriangle
		/F {
			gsave
			180 rotate
			do_fillrighttriangle
			grestore
		} def

		% dwhrectangle
		/G {
			do_rectangle
			do_dwh_bars
		} def

		% rectangle
		/H {
			do_rectangle
		} def

		% fillrectangle
		/I {
			newpath
			420 270 moveto -420 270 lineto -420 -270 lineto
			420 -270 lineto
			fill
		} def

		% dwhisostriangle
		/J {
			do_isostriangle
			do_dwh_bars
		} def

		% isostriangle
		/K {
			do_isostriangle
		} def

		% fillisostriangle
		/L {
			newpath
			0 300 moveto -420 -270 lineto 420 -270 lineto
			fill
		} def

		% dwhpiewedge
		/M {
			do_piewedge
			do_dwh_bars
		} def

		% piewedge
		/N {
			do_piewedge
		} def

		% fillpiewedge
		/O {
			newpath
			0 -300 moveto 0 -244 514 35 145 arc
			fill
		} def

		% dwhsemicircle
		/P {
			do_semicircle
			do_dwh_bars
		} def

		% semicircle
		/Q {
			do_semicircle
		} def

		% fillsemicircle
		/R {
			newpath
			gsave
			1 570 420 div scale
			420 199 moveto 0 199 420 180 360 arc
			fill
			grestore
		} def

		% dwhslashhead
		/S {
			do_slashhead
			lwid setlinewidth
			-650 -600 moveto -650 600 lineto stroke
			650 -600 moveto 650 600 lineto stroke
		} def

		% slashhead
		/T {
			do_slashhead
		} def

		% fillslashhead
		/U {
			newpath
			200 setlinewidth
			-550 -600 moveto 550 600 lineto stroke
		} def

		% blankhead
		/V {
			%print nothing
		} def
	end

	/BuildChar {

		exch begin
		Encoding exch get

		dup
		Mcbbox1 exch get
		aload pop setcachedevice

		CharStrings exch get
		exec
		end
	} def
end


% General routines for printing any music character, invoked by each music
% character's specific routine below.  The scaling factor (default 1) needs
% to be multiplied by 10 to get the actual size.  These routines restore the
% preexisting current font when they are done.

/printmchar0 {
	gsave
	/musicchar exch def
	/Mfont0 findfont exch 10 mul scalefont setfont moveto 
	musicchar show
	grestore
} def
/printmchar1 {
	gsave
	/musicchar exch def
	/Mfont1 findfont exch 10 mul scalefont setfont moveto 
	musicchar show
	grestore
} def

% Define each music character name to be a routine that prints the character.
% Each character is to be invoked as in this example:
%	100 200 1 gclef		% at (100, 200), scale to default size & print

/gclef			{ (A) printmchar0 } def
/fclef			{ (B) printmchar0 } def
/cclef			{ (C) printmchar0 } def
/dblwhole		{ (D) printmchar0 } def
/1n			{ (E) printmchar0 } def
/2n			{ (F) printmchar0 } def
/4n			{ (G) printmchar0 } def
/upflag			{ (H) printmchar0 } def
/dnflag			{ (I) printmchar0 } def
/dwhrest		{ (J) printmchar0 } def
/1rest			{ (K) printmchar0 } def
/2rest			{ (L) printmchar0 } def
/4rest			{ (M) printmchar0 } def
/8rest			{ (N) printmchar0 } def
/16rest			{ (O) printmchar0 } def
/32rest			{ (P) printmchar0 } def
/64rest			{ (Q) printmchar0 } def
/128rest		{ (R) printmchar0 } def
/256rest		{ (S) printmchar0 } def
/dot			{ (T) printmchar0 } def
/nat			{ (U) printmchar0 } def
/sharp			{ (V) printmchar0 } def
/flat			{ (W) printmchar0 } def
/dblsharp		{ (X) printmchar0 } def
/dblflat		{ (Y) printmchar0 } def
/xnote			{ (Z) printmchar0 } def
/dwhdiamond		{ (a) printmchar0 } def
/diamond		{ (b) printmchar0 } def
/filldiamond		{ (c) printmchar0 } def
/up2n			{ (d) printmchar0 } def
/dn2n			{ (e) printmchar0 } def
/up4n			{ (f) printmchar0 } def
/dn4n			{ (g) printmchar0 } def
/up8n			{ (h) printmchar0 } def
/dn8n			{ (i) printmchar0 } def
/up16n			{ (j) printmchar0 } def
/dn16n			{ (k) printmchar0 } def
/up32n			{ (l) printmchar0 } def
/dn32n			{ (m) printmchar0 } def
/up64n			{ (n) printmchar0 } def
/dn64n			{ (o) printmchar0 } def
/up128n			{ (p) printmchar0 } def
/dn128n			{ (q) printmchar0 } def
/up256n			{ (r) printmchar0 } def
/dn256n			{ (s) printmchar0 } def
/com			{ (t) printmchar0 } def
/cut			{ (u) printmchar0 } def
/begped			{ (v) printmchar0 } def
/pedal			{ (w) printmchar0 } def
/endped			{ (x) printmchar0 } def
/dnbow			{ (y) printmchar0 } def
/upbow			{ (z) printmchar0 } def
/wedge			{ (1) printmchar0 } def
/uwedge			{ (2) printmchar0 } def
/ferm			{ (3) printmchar0 } def
/uferm			{ (4) printmchar0 } def
/sign			{ (5) printmchar0 } def
/coda			{ (6) printmchar0 } def
/mor			{ (7) printmchar0 } def
/invmor			{ (8) printmchar0 } def
/turn			{ (9) printmchar0 } def
/invturn		{ (0) printmchar0 } def
/acc_gt			{ (#) printmchar0 } def
/acc_hat		{ ($) printmchar0 } def
/acc_uhat		{ (") printmchar0 } def
/tr			{ (*) printmchar0 } def
/leg			{ (,) printmchar0 } def
/rr			{ (-) printmchar0 } def
/measrpt		{ (.) printmchar0 } def
/copyright		{ (/) printmchar0 } def
/dim			{ (`) printmchar0 } def
/halfdim		{ (') printmchar0 } def
/triangle		{ (^) printmchar0 } def
/qwhrest		{ (&) printmchar0 } def
/ll1rest		{ (!) printmchar0 } def
/ll2rest		{ (@) printmchar0 } def
/dwhrighttriangle	{ (A) printmchar1 } def
/righttriangle		{ (B) printmchar1 } def
/fillrighttriangle	{ (C) printmchar1 } def
/udwhrighttriangle	{ (D) printmchar1 } def
/urighttriangle		{ (E) printmchar1 } def
/ufillrighttriangle	{ (F) printmchar1 } def
/dwhrectangle		{ (G) printmchar1 } def
/rectangle		{ (H) printmchar1 } def
/fillrectangle		{ (I) printmchar1 } def
/dwhisostriangle	{ (J) printmchar1 } def
/isostriangle		{ (K) printmchar1 } def
/fillisostriangle	{ (L) printmchar1 } def
/dwhpiewedge		{ (M) printmchar1 } def
/piewedge		{ (N) printmchar1 } def
/fillpiewedge		{ (O) printmchar1 } def
/dwhsemicircle		{ (P) printmchar1 } def
/semicircle		{ (Q) printmchar1 } def
/fillsemicircle		{ (R) printmchar1 } def
/dwhslashhead		{ (S) printmchar1 } def
/slashhead		{ (T) printmchar1 } def
/fillslashhead		{ (U) printmchar1 } def
/blankhead		{ (V) printmchar1 } def


% Define routines for Mup output other than music characters.

/stepsize 3 def	   % define a step size as 3 points (at default magnification)

% x1 y1 x2 lines dist staffscale staff
%		draw a staff starting at x1, y1 and extending to x2 with "lines"
%		lines, 2*dist*stepsize apart, scaled by staffscale
/staff {
	/staffscale exch def
	/dist exch def
	/lines exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	0.7 staffscale mul setlinewidth
	1 lines sub  2  lines 1 sub {	% loop from bottom line to top line
		dup stepsize mul staffscale mul dist mul y1 add x1 exch moveto
		stepsize mul staffscale mul dist mul y1 add x2 exch lineto stroke
	} for
} def

% x y1 y2 bracket	draw a bracket; y1 is the top
/bracket {
	/y2 exch def
	/y1 exch def
	/x exch def
	gsave
	3 setlinewidth
	x 2 sub y1 1 add moveto
	x 2 sub y2 1 sub lineto
	stroke
	x 2 sub y1 1 add moveto
	x 1 sub y1 1 add   x 3 add y1 1 add   x 5 add y1 6 add   curveto
	x 6 add y1 5 add lineto
	x 5 add y1 2 add   x 1 add y1 2 sub   x 2 sub y1 2 sub   curveto
	fill
	x 2 sub y2 1 sub moveto
	x 1 sub y2 1 sub   x 3 add y2 1 sub   x 5 add y2 6 sub   curveto
	x 6 add y2 5 sub lineto
	x 5 add y2 2 sub   x 1 add y2 2 add   x 2 sub y2 2 add   curveto
	fill
	grestore
} def

% x y1 y2 right repeatbracket	draw a bracket for a repeat; y1 is the top,
%				right==1 means facing to the right
/repeatbracket {
	/right exch def
	/y2 exch def
	/y1 exch def
	/x exch def
	gsave
	right 0 eq {
		x y1 y2 add 2 div translate
		180 rotate
		0 x sub 0 y1 y2 add 2 div sub translate
	} if
	x 4.5 sub y1 1 add moveto
	x 0 sub y1 1 add   x 2 add y1 1 add   x 6 add y1 5 add   curveto
	x 6 add y1 4 add lineto
	x 6 add y1 2 add   x 1 add y1 2 sub   x 4.5 sub y1 1.5 sub   curveto
	fill
	x 4.5 sub y2 1 sub moveto
	x 0 sub y2 1 sub   x 2 add y2 1 sub   x 6 add y2 5 sub   curveto
	x 6 add y2 4 sub lineto
	x 6 add y2 2 sub   x 1 add y2 2 add   x 4.5 sub y2 1.5 add   curveto
	fill
	grestore
} def

% x y1 y2 brace		draw a brace; y1 is the top
/brace {
	/y2 exch def
	/y1 exch def
	/x exch def
	gsave
	x 6 sub y1 y2 add 2 div translate
	/topy y1 y2 sub 2 div 1 sub def
	0.667 1 scale
	0 1 1 {
		pop
		%0 topy moveto 0 0 lineto stroke
		0 0 moveto
		16 topy 0.2 mul   -11 topy 0.6 mul   8 topy   curveto
		8.7 topy lineto
		-7 topy 0.7 mul   20 topy 0.3 mul   1 0   curveto
		fill
		1 -1 scale	% flip to do bottom half
	} for
	grestore
} def

% endx endy wavy staffscale	draw a wavy line from current point to here,
%				scaled by staffscale
/wavy {
	/staffscale exch def
	/endy exch def		% define the end point of the line
	/endx exch def
	currentpoint		% line starts at current point
	/begy exch def		% define the beginning point of the line
	/begx exch def
	gsave
	/dx endx begx sub def	% find delta x and delta y
	/dy endy begy sub def
	/r dx dx mul dy dy mul add sqrt def	% hypotenuse
	/theta dy dx atan def			% angle with positive x axis
	begx begy translate	% change axes so that we can draw the line
	theta rotate		%   from (0, 0) to (r, 0)
	staffscale staffscale scale	% scale everything by staffscale
	/scaledr r staffscale div def	% but scale r in reverse to keep length

	% Each outer loop draws one cycle of the squiggle.  It continues until
	% we are at or beyond the desired end point.
	0 0 moveto
	0 6 scaledr {
		gsave
		% first loop draws left half of squiggle; second draws right
		0 1 1 {
			0.0 0.4 moveto
			2.0 1.9 3.4 2.3 3.9 0.0 curveto
			2.1 0.0 lineto
			1.9 0.8 1.4 0.7 0.0 -0.4 curveto
			fill
			pop 180 rotate -6 0 translate
		} for
		grestore

		pop 6 0 translate	% shift axes right one squiggle
	} for

	grestore
} def

% x y space frets fretno numvert curvel curver [ f1 f2 f3 ... ] grid
%				print a guitar grid diagram
/grid {
	/grid_positions exch def % 0="o", -1="x", -2=nothing, positive=dot
	/curver exch def	% right string for curve, 0 if none
	/curvel exch def	% left string for curve, 0 if none
	/numvert exch def	% vertical position to print fretno, 0 if none
	/fretno exch def	% fret no. to print at right, 0 if none
	/frets exch def		% number of fret lines
	/space exch def		% points between two neighboring lines
	/y exch def		% y coord of top fret line
	/x exch def		% x coord of left strings

	gsave
	/strings grid_positions length def	% number of strings
	/lmarky 0.4 space mul y add def		% lowest Y of a "o" or "x"
	space 10 div setlinewidth
	2 setlinecap

	% draw the lines of the grid
	0  1  strings 1 sub {	% loop from left string to right string
		dup space mul x add y moveto
		space mul x add frets 1 sub space mul y exch sub lineto stroke
	} for
	0  -1  1 frets sub {	% loop from top fret (nut) to bottom fret
		dup space mul y add x exch moveto
		space mul y add strings 1 sub space mul x add exch lineto stroke
	} for

	% draw the curved line if there is one
	curvel 0 gt {
		% within strings curvel to curver, find smallest positive fret
		/minfret 1000 def
		curvel 1 curver {
			/strno exch def
			/grid_p grid_positions strno 1 sub get def
			grid_p 0 gt grid_p minfret lt and {
				/minfret grid_p def
			} if
		} for

		% if curve goes above top fret, other marks must be higher
		minfret 1 eq {
			/hmarky 1.2 space mul y add def
		} {
			/hmarky lmarky def
		} ifelse

		/strdiff curver curvel sub def
		space 8 div setlinewidth

		% set endpoint coords of curve; higher if curve is short
		/curvex1 curvel 1 sub space mul x add def
		/curvex2 curver 1 sub space mul x add def
		/curvey 1 minfret sub space mul y add def
		strdiff 3 lt {
			/curvey 0.2 strdiff div space mul curvey add def
		} if

		% move to left end, set other points, draw curve
		curvex1 curvey moveto

		curvex1 curvex2 curvex1 sub 3 div add
		curvey space 0.4 strdiff sqrt mul mul add

		curvex2 curvex2 curvex1 sub 3 div sub
		curvey space 0.4 strdiff sqrt mul mul add

		curvex2 curvey curveto stroke
	} if

	space 10 div setlinewidth

	% draw dots and x and o marks
	0  1  strings 1 sub {	% loop from left string to right string
		/strno exch def	% first string is 0
		/grid_p grid_positions strno get def
		/strx strno space mul x add def

		% set Y of mark higher if curved line covers this string
		strno 1 add curvel ge  strno 1 add curver le  and {
			/marky hmarky def
		} {
			/marky lmarky def
		} ifelse

		grid_p -1 eq {		% draw an X above the string
			/xhwid space 3 div def
			strx xhwid sub marky xhwid sub moveto
			strx xhwid add marky xhwid add lineto stroke
			strx xhwid sub marky xhwid add moveto
			strx xhwid add marky xhwid sub lineto stroke
		} if
		grid_p 0 eq {		% draw a circle above the string
			strx marky space 0.3 mul 0 360 arc stroke
		} if
		grid_p 1 ge {		% draw a dot by the proper fret
			strx y grid_p space mul sub space 3 div add
			space 3 div 0 360 arc fill
		} if
	} for

	% print "X fr" if requested
	fretno 0 gt {
		/Palatino-Roman findfont space 1.9 mul scalefont setfont
		x strings 0.5 sub space mul add
		y space numvert 0.3 add mul sub moveto
		fretno 2 string cvs show ( fr) show
	} if
	grestore
} def

% x1 y1 x2 y2 whitebox		draw a white rectangle with opposite
%				corners of (x1,y1) and (x2,y2)
/whitebox {
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	1.0 setgray
	newpath
	x1 y1 moveto
	x1 y2 lineto
	x2 y2 lineto
	x2 y1 lineto
	closepath
	fill
	stroke
	0.0 setgray
} def


/LineNum 0 def
/InputFile (unknown) def

% n linenum
/linenum {
	/LineNum exch def
} def

% (inputfilename) inputfile
/inputfile {
	/InputFile exch def
} def

% find size of Encoding and make a dictionary
% that size for bounding box information
mfont0 begin
/dictsize Encoding length def
mfont0 /Mcbbox0 dictsize dict put

% temporarily redefine printmchar0 to get code
5 dict begin
/printmchar0 { {} forall } def

Mcbbox0 Encoding gclef get [ 1790.0 0 -915.0 -1605.0 865.0 3015.0 ] put
Mcbbox0 Encoding fclef get [ 1840.0 0 -1015.0 -1705.0 815.0 655.0 ] put
Mcbbox0 Encoding cclef get [ 1540.0 0 -765.0 -1245.0 765.0 1255.0 ] put
Mcbbox0 Encoding dblwhole get [ 1090.0 0 -535.0 -605.0 545.0 615.0 ] put
Mcbbox0 Encoding 1n get [ 1080.0 0 -535.0 -335.0 535.0 345.0 ] put
Mcbbox0 Encoding 2n get [ 880.0 0 -435.0 -345.0 435.0 355.0 ] put
Mcbbox0 Encoding 4n get [ 840.0 0 -415.0 -335.0 415.0 345.0 ] put
Mcbbox0 Encoding upflag get [ 640.0 0 -335.0 -5.0 295.0 1715.0 ] put
Mcbbox0 Encoding dnflag get [ 640.0 0 -335.0 -1705.0 295.0 15.0 ] put
Mcbbox0 Encoding qwhrest get [ 340.0 0 -165.0 -605.0 165.0 615.0 ] put
Mcbbox0 Encoding dwhrest get [ 340.0 0 -165.0 -5.0 165.0 615.0 ] put
Mcbbox0 Encoding 1rest get [ 1540.0 0 -765.0 -15.0 765.0 645.0 ] put
Mcbbox0 Encoding 2rest get [ 1540.0 0 -765.0 -45.0 765.0 315.0 ] put
Mcbbox0 Encoding 4rest get [ 650.0 0 -345.0 -885.0 295.0 995.0 ] put
Mcbbox0 Encoding 8rest get [ 750.0 0 -305.0 -625.0 435.0 485.0 ] put
Mcbbox0 Encoding 16rest get [ 830.0 0 -415.0 -1215.0 405.0 485.0 ] put
Mcbbox0 Encoding 32rest get [ 940.0 0 -415.0 -1215.0 515.0 1085.0 ] put
Mcbbox0 Encoding 64rest get [ 1040.0 0 -515.0 -1515.0 515.0 1085.0 ] put
Mcbbox0 Encoding 128rest get [ 1140.0 0 -515.0 -1515.0 615.0 1685.0 ] put
Mcbbox0 Encoding 256rest get [ 1250.0 0 -625.0 -2115.0 615.0 1685.0 ] put
Mcbbox0 Encoding ll1rest get [ 840.0 0 -415.0 -15.0 415.0 625.0 ] put
Mcbbox0 Encoding ll2rest get [ 840.0 0 -415.0 -15.0 415.0 325.0 ] put
Mcbbox0 Encoding dot get [ 280.0 0 -135.0 -125.0 135.0 135.0 ] put
Mcbbox0 Encoding nat get [ 520.0 0 -255.0 -855.0 255.0 865.0 ] put
Mcbbox0 Encoding sharp get [ 700.0 0 -345.0 -935.0 345.0 945.0 ] put
Mcbbox0 Encoding flat get [ 580.0 0 -295.0 -405.0 275.0 1115.0 ] put
Mcbbox0 Encoding dblsharp get [ 720.0 0 -355.0 -345.0 355.0 355.0 ] put
Mcbbox0 Encoding dblflat get [ 1160.0 0 -585.0 -405.0 565.0 1115.0 ] put
Mcbbox0 Encoding xnote get [ 880.0 0 -435.0 -365.0 435.0 375.0 ] put
Mcbbox0 Encoding dwhdiamond get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox0 Encoding diamond get [ 880.0 0 -435.0 -305.0 435.0 315.0 ] put
Mcbbox0 Encoding filldiamond get [ 880.0 0 -435.0 -305.0 435.0 315.0 ] put
Mcbbox0 Encoding up2n get [ 880.0 0 -435.0 -345.0 435.0 2115.0 ] put
Mcbbox0 Encoding dn2n get [ 880.0 0 -435.0 -2105.0 435.0 355.0 ] put
Mcbbox0 Encoding up4n get [ 850.0 0 -415.0 -335.0 425.0 2115.0 ] put
Mcbbox0 Encoding dn4n get [ 840.0 0 -415.0 -2105.0 415.0 345.0 ] put
Mcbbox0 Encoding com get [ 1110.0 0 -585.0 -645.0 515.0 655.0 ] put
Mcbbox0 Encoding cut get [ 1110.0 0 -585.0 -905.0 515.0 915.0 ] put
Mcbbox0 Encoding begped get [ 470.0 0 -245.0 -45.0 215.0 615.0 ] put
Mcbbox0 Encoding pedal get [ 1040.0 0 -515.0 -45.0 515.0 675.0 ] put
Mcbbox0 Encoding endped get [ 480.0 0 -215.0 -45.0 255.0 615.0 ] put
Mcbbox0 Encoding dnbow get [ 810.0 0 -395.0 -5.0 405.0 915.0 ] put
Mcbbox0 Encoding upbow get [ 720.0 0 -355.0 -115.0 355.0 925.0 ] put
Mcbbox0 Encoding wedge get [ 340.0 0 -165.0 -5.0 165.0 515.0 ] put
Mcbbox0 Encoding uwedge get [ 340.0 0 -165.0 -5.0 165.0 515.0 ] put
Mcbbox0 Encoding ferm get [ 1640.0 0 -815.0 -5.0 815.0 1015.0 ] put
Mcbbox0 Encoding uferm get [ 1640.0 0 -815.0 -5.0 815.0 1015.0 ] put
Mcbbox0 Encoding sign get [ 1340.0 0 -665.0 -825.0 665.0 835.0 ] put
Mcbbox0 Encoding coda get [ 1640.0 0 -815.0 -855.0 815.0 865.0 ] put
Mcbbox0 Encoding mor get [ 1320.0 0 -655.0 -285.0 655.0 295.0 ] put
Mcbbox0 Encoding invmor get [ 1320.0 0 -655.0 -455.0 655.0 465.0 ] put
Mcbbox0 Encoding turn get [ 1300.0 0 -645.0 -335.0 645.0 345.0 ] put
Mcbbox0 Encoding invturn get [ 1300.0 0 -645.0 -335.0 645.0 345.0 ] put
Mcbbox0 Encoding acc_gt get [ 1170.0 0 -525.0 -345.0 635.0 355.0 ] put
Mcbbox0 Encoding acc_hat get [ 780.0 0 -385.0 -5.0 385.0 875.0 ] put
Mcbbox0 Encoding acc_uhat get [ 780.0 0 -385.0 -5.0 385.0 875.0 ] put
Mcbbox0 Encoding tr get [ 1440.0 0 -715.0 -5.0 715.0 1015.0 ] put
Mcbbox0 Encoding leg get [ 840.0 0 -415.0 -55.0 415.0 65.0 ] put
Mcbbox0 Encoding rr get [ 940.0 0 -465.0 -25.0 465.0 1035.0 ] put
Mcbbox0 Encoding dim get [ 540.0 0 -265.0 -15.0 265.0 905.0 ] put
Mcbbox0 Encoding halfdim get [ 760.0 0 -375.0 -15.0 375.0 1015.0 ] put
Mcbbox0 Encoding triangle get [ 800.0 0 -395.0 -45.0 395.0 785.0 ] put
Mcbbox0 Encoding measrpt get [ 1300.0 0 -645.0 -675.0 645.0 685.0 ] put
Mcbbox0 Encoding copyright get [ 920.0 0 -455.0 -45.0 455.0 855.0 ] put
Mcbbox0 Encoding up8n get [ 1390.0 0 -745.0 -335.0 635.0 2115.0 ] put
Mcbbox0 Encoding dn8n get [ 840.0 0 -415.0 -2105.0 415.0 345.0 ] put
Mcbbox0 Encoding up16n get [ 1390.0 0 -745.0 -335.0 635.0 2115.0 ] put
Mcbbox0 Encoding dn16n get [ 840.0 0 -415.0 -2105.0 415.0 345.0 ] put
Mcbbox0 Encoding up32n get [ 1390.0 0 -745.0 -335.0 635.0 2595.0 ] put
Mcbbox0 Encoding dn32n get [ 840.0 0 -415.0 -2585.0 415.0 345.0 ] put
Mcbbox0 Encoding up64n get [ 1390.0 0 -745.0 -335.0 635.0 3075.0 ] put
Mcbbox0 Encoding dn64n get [ 840.0 0 -415.0 -3065.0 415.0 345.0 ] put
Mcbbox0 Encoding up128n get [ 1390.0 0 -745.0 -335.0 635.0 3555.0 ] put
Mcbbox0 Encoding dn128n get [ 840.0 0 -415.0 -3545.0 415.0 345.0 ] put
Mcbbox0 Encoding up256n get [ 1390.0 0 -745.0 -335.0 635.0 3975.0 ] put
Mcbbox0 Encoding dn256n get [ 840.0 0 -415.0 -3965.0 415.0 345.0 ] put

end
end

/Mfont0 mfont0 definefont


% find size of Encoding and make a dictionary
% that size for bounding box information
mfont1 begin
/dictsize Encoding length def
mfont1 /Mcbbox1 dictsize dict put

% temporarily redefine printmchar1 to get code
5 dict begin
/printmchar1 { {} forall } def

Mcbbox1 Encoding dwhrighttriangle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding righttriangle get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding fillrighttriangle get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding udwhrighttriangle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding urighttriangle get [ 880.0 0 -435.0 -275.0 435.0 315.0 ] put
Mcbbox1 Encoding ufillrighttriangle get [ 880.0 0 -435.0 -275.0 435.0 315.0 ] put
Mcbbox1 Encoding dwhrectangle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding rectangle get [ 880.0 0 -435.0 -275.0 435.0 285.0 ] put
Mcbbox1 Encoding fillrectangle get [ 880.0 0 -435.0 -275.0 435.0 285.0 ] put
Mcbbox1 Encoding dwhisostriangle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding isostriangle get [ 880.0 0 -435.0 -275.0 435.0 315.0 ] put
Mcbbox1 Encoding fillisostriangle get [ 880.0 0 -435.0 -275.0 435.0 315.0 ] put
Mcbbox1 Encoding dwhpiewedge get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding piewedge get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding fillpiewedge get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding dwhsemicircle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding semicircle get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding fillsemicircle get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding dwhslashhead get [ 1410.0 0 -695.0 -725.0 705.0 735.0 ] put
Mcbbox1 Encoding slashhead get [ 1380.0 0 -685.0 -725.0 685.0 735.0 ] put
Mcbbox1 Encoding fillslashhead get [ 1300.0 0 -645.0 -675.0 645.0 685.0 ] put
Mcbbox1 Encoding blankhead get [ 880.0 0 -435.0 -275.0 435.0 285.0 ] put

end
end

/Mfont1 mfont1 definefont

/flagsep 1.60 300 mul def	 % 1.60 stepsizes
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] >> setpagedevice
%%EndFeature
%%EndProlog
%%Page: 1 1
save
0.750000 0.750000 scale
%  S_SSV
(kaleidakustikon_3.mup) inputfile
7 linenum
%  S_SSV
17 linenum
%  S_SSV
20 linenum
%  S_FEED
25 linenum
88.79 947.83 768.00 5 1.000000 1.000000 staff
88.79 884.38 768.00 5 1.000000 1.000000 staff
87.79 959.83 872.38 brace
0.70 setlinewidth
88.79 959.83 moveto
88.79 872.38 lineto stroke
%  S_CLEFSIG
25 linenum
100.58 941.83 1.000000 gclef
100.83 890.38 1.000000 fclef
116.62 947.83 1.000000 flat
116.62 878.38 1.000000 flat
/NewCenturySchlbk-Bold findfont
16 scalefont
setfont
122.36 947.83 moveto
(3) show
/NewCenturySchlbk-Bold findfont
16 scalefont
setfont
122.36 935.91 moveto
(4) show
/NewCenturySchlbk-Bold findfont
16 scalefont
setfont
122.36 884.38 moveto
(3) show
/NewCenturySchlbk-Bold findfont
16 scalefont
setfont
122.36 872.46 moveto
(4) show
%  S_CHHEAD
25 linenum
%  S_STAFF
% staff 1
save
145.88 929.83 1.000000 4n
139.65 929.83 moveto
152.11 929.83 lineto stroke
149.56 930.58 moveto
149.56 953.02 lineto stroke
158.40 938.83 1.000000 4n
162.09 939.58 moveto
162.09 957.57 lineto stroke
newpath
149.21 954.52 moveto
162.44 959.07 lineto
162.44 956.07 lineto
149.21 951.52 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
145.88 884.38 1.000000 4rest
restore
%  S_BAR
27 linenum
0.70 setlinewidth
172.48 959.83 moveto
172.48 935.83 lineto stroke
172.48 896.38 moveto
172.48 872.38 lineto stroke
%  S_CHHEAD
30 linenum
%  S_STAFF
% staff 1
save
181.28 944.83 1.000000 4n
177.60 944.08 moveto
177.60 920.38 lineto stroke
192.96 938.83 1.000000 4n
189.28 938.08 moveto
189.28 921.83 lineto stroke
204.65 950.83 1.000000 4n
200.96 950.08 moveto
200.96 923.28 lineto stroke
216.33 944.83 1.000000 4n
212.65 944.08 moveto
212.65 924.72 lineto stroke
228.01 959.83 1.000000 4n
224.33 959.08 moveto
224.33 926.17 lineto stroke
240.54 950.83 1.000000 4n
236.85 950.08 moveto
236.85 927.72 lineto stroke
newpath
177.25 921.88 moveto
237.20 929.22 lineto
237.20 926.22 lineto
177.25 918.88 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
181.28 869.38 1.000000 4n
0.70 setlinewidth
184.96 870.13 moveto
184.96 890.38 lineto stroke
204.65 902.38 1.000000 4n
198.41 902.38 moveto
210.88 902.38 lineto stroke
204.65 896.38 1.000000 4n
204.65 890.38 1.000000 4n
200.96 901.63 moveto
200.96 869.38 lineto stroke
228.01 902.38 1.000000 4n
221.78 902.38 moveto
234.25 902.38 lineto stroke
228.01 896.38 1.000000 4n
228.01 890.38 1.000000 4n
224.33 901.63 moveto
224.33 869.38 lineto stroke
restore
%  S_BAR
32 linenum
0.70 setlinewidth
254.61 959.83 moveto
254.61 935.83 lineto stroke
254.61 896.38 moveto
254.61 872.38 lineto stroke
%  S_CHHEAD
36 linenum
%  S_STAFF
% staff 1
save
263.41 965.83 1.000000 4n
257.18 965.83 moveto
269.64 965.83 lineto stroke
259.73 965.08 moveto
259.73 942.16 lineto stroke
275.10 959.83 1.000000 4n
271.41 959.08 moveto
271.41 942.16 lineto stroke
286.78 974.83 1.000000 4n
280.55 971.83 moveto
291.62 971.83 lineto stroke
280.55 965.83 moveto
291.12 965.83 lineto stroke
283.10 974.08 moveto
283.10 942.16 lineto stroke
298.46 971.83 1.000000 4n
293.62 971.83 moveto
304.69 971.83 lineto stroke
294.12 965.83 moveto
302.80 965.83 lineto stroke
294.78 971.08 moveto
294.78 942.16 lineto stroke
310.14 965.83 1.000000 4n
305.30 965.83 moveto
316.38 965.83 lineto stroke
306.46 965.08 moveto
306.46 942.16 lineto stroke
322.67 959.83 1.000000 4n
318.98 959.08 moveto
318.98 942.16 lineto stroke
newpath
259.38 943.66 moveto
319.33 943.66 lineto
319.33 940.66 lineto
259.38 940.66 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
263.41 869.38 1.000000 4n
0.70 setlinewidth
267.09 870.13 moveto
267.09 890.38 lineto stroke
286.78 902.38 1.000000 4n
280.55 902.38 moveto
293.01 902.38 lineto stroke
286.78 896.38 1.000000 4n
286.78 890.38 1.000000 4n
283.10 901.63 moveto
283.10 869.38 lineto stroke
310.14 902.38 1.000000 4n
303.91 902.38 moveto
316.38 902.38 lineto stroke
310.14 896.38 1.000000 4n
310.14 890.38 1.000000 4n
306.46 901.63 moveto
306.46 869.38 lineto stroke
restore
%  S_BAR
38 linenum
0.70 setlinewidth
336.74 959.83 moveto
336.74 935.83 lineto stroke
336.74 896.38 moveto
336.74 872.38 lineto stroke
%  S_CHHEAD
42 linenum
%  S_STAFF
% staff 1
save
345.54 956.83 1.000000 4n
341.86 956.08 moveto
341.86 935.83 lineto stroke
344.89 935.83 1.000000 upflag
357.40 968.83 1.000000 4n
351.17 965.83 moveto
363.64 965.83 lineto stroke
353.72 968.08 moveto
353.72 947.83 lineto stroke
380.59 962.83 1.000000 4n
376.91 962.08 moveto
376.91 942.67 lineto stroke
392.28 956.83 1.000000 4n
388.59 956.08 moveto
388.59 938.77 lineto stroke
404.80 950.83 1.000000 4n
401.12 950.08 moveto
401.12 934.59 lineto stroke
newpath
376.56 944.17 moveto
401.47 936.09 lineto
401.47 933.09 lineto
376.56 941.17 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
345.54 881.38 1.000000 4n
0.70 setlinewidth
349.23 882.13 moveto
349.23 902.38 lineto stroke
369.09 902.38 1.000000 4n
362.86 902.38 moveto
375.32 902.38 lineto stroke
361.72 899.38 1.000000 4n
369.09 893.38 1.000000 4n
365.41 901.63 moveto
365.41 872.38 lineto stroke
392.28 902.38 1.000000 4n
386.04 902.38 moveto
398.51 902.38 lineto stroke
384.91 899.38 1.000000 4n
392.28 893.38 1.000000 4n
388.59 901.63 moveto
388.59 872.38 lineto stroke
restore
%  S_BAR
44 linenum
0.70 setlinewidth
418.87 959.83 moveto
418.87 935.83 lineto stroke
418.87 896.38 moveto
418.87 872.38 lineto stroke
%  S_CHHEAD
48 linenum
%  S_STAFF
% staff 1
save
434.51 947.83 1.000000 4n
426.06 947.83 1.000000 nat
430.83 947.08 moveto
430.83 925.28 lineto stroke
445.93 950.83 1.000000 4n
442.25 950.08 moveto
442.25 925.28 lineto stroke
463.75 947.83 1.000000 4n
454.97 947.83 1.000000 flat
460.07 947.08 moveto
460.07 925.28 lineto stroke
475.43 950.83 1.000000 4n
471.75 950.08 moveto
471.75 925.28 lineto stroke
487.12 941.83 1.000000 4n
483.43 941.08 moveto
483.43 925.28 lineto stroke
499.64 950.83 1.000000 4n
495.96 950.08 moveto
495.96 925.28 lineto stroke
newpath
430.48 926.78 moveto
496.31 926.78 lineto
496.31 923.78 lineto
430.48 923.78 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
434.51 881.38 1.000000 4n
0.70 setlinewidth
438.20 882.13 moveto
438.20 902.38 lineto stroke
463.75 902.38 1.000000 4n
457.52 902.38 moveto
469.98 902.38 lineto stroke
463.75 893.38 1.000000 4n
463.75 887.38 1.000000 4n
460.07 901.63 moveto
460.07 866.38 lineto stroke
487.12 902.38 1.000000 4n
480.88 902.38 moveto
493.35 902.38 lineto stroke
487.12 893.38 1.000000 4n
487.12 887.38 1.000000 4n
483.43 901.63 moveto
483.43 866.38 lineto stroke
restore
%  S_BAR
50 linenum
0.70 setlinewidth
513.71 959.83 moveto
513.71 935.83 lineto stroke
513.71 896.38 moveto
513.71 872.38 lineto stroke
%  S_CHHEAD
54 linenum
%  S_STAFF
% staff 1
save
522.51 944.83 1.000000 4n
518.83 944.08 moveto
518.83 928.06 lineto stroke
534.20 965.83 1.000000 4n
527.97 965.83 moveto
540.43 965.83 lineto stroke
530.52 965.08 moveto
530.52 928.84 lineto stroke
545.88 962.83 1.000000 4n
542.20 962.08 moveto
542.20 929.63 lineto stroke
557.56 959.83 1.000000 4n
553.88 959.08 moveto
553.88 930.42 lineto stroke
569.25 956.83 1.000000 4n
565.57 956.08 moveto
565.57 931.20 lineto stroke
581.77 959.83 1.000000 4n
578.09 959.08 moveto
578.09 932.04 lineto stroke
newpath
518.48 929.56 moveto
578.44 933.54 lineto
578.44 930.54 lineto
518.48 926.56 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
522.51 869.38 1.000000 4n
0.70 setlinewidth
526.20 870.13 moveto
526.20 890.38 lineto stroke
545.88 902.38 1.000000 4n
539.65 902.38 moveto
552.11 902.38 lineto stroke
545.88 896.38 1.000000 4n
545.88 890.38 1.000000 4n
542.20 901.63 moveto
542.20 869.38 lineto stroke
569.25 902.38 1.000000 4n
563.02 902.38 moveto
575.48 902.38 lineto stroke
569.25 896.38 1.000000 4n
569.25 890.38 1.000000 4n
565.57 901.63 moveto
565.57 869.38 lineto stroke
restore
%  S_BAR
56 linenum
0.70 setlinewidth
595.84 959.83 moveto
595.84 935.83 lineto stroke
595.84 896.38 moveto
595.84 872.38 lineto stroke
%  S_CHHEAD
60 linenum
%  S_STAFF
% staff 1
save
604.86 941.83 1.000000 4n
601.18 941.08 moveto
601.18 923.86 lineto stroke
616.55 947.83 1.000000 4n
612.86 947.08 moveto
612.86 928.11 lineto stroke
628.23 953.83 1.000000 4n
624.55 953.08 moveto
624.55 932.37 lineto stroke
639.91 962.83 1.000000 4n
636.23 962.08 moveto
636.23 936.62 lineto stroke
651.60 968.83 1.000000 4n
645.36 965.83 moveto
656.86 965.83 lineto stroke
647.91 968.08 moveto
647.91 940.87 lineto stroke
664.12 974.83 1.000000 4n
657.89 971.83 moveto
670.35 971.83 lineto stroke
659.36 965.83 moveto
670.35 965.83 lineto stroke
660.44 974.08 moveto
660.44 945.43 lineto stroke
newpath
600.83 925.36 moveto
660.79 946.93 lineto
660.79 943.93 lineto
600.83 922.36 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
604.86 905.38 1.000000 2n
614.34 905.38 1.000000 dot
0.70 setlinewidth
598.41 902.38 moveto
611.31 902.38 lineto stroke
604.86 899.38 1.000000 2n
614.34 899.38 1.000000 dot
600.96 904.63 moveto
600.96 878.38 lineto stroke
restore
%  S_BAR
62 linenum
0.70 setlinewidth
678.19 959.83 moveto
678.19 935.83 lineto stroke
678.19 896.38 moveto
678.19 872.38 lineto stroke
%  S_CHHEAD
66 linenum
%  S_STAFF
% staff 1
save
690.62 935.83 1.000000 4n
694.30 936.58 moveto
694.30 956.83 lineto stroke
697.33 956.83 1.000000 dnflag
706.18 950.83 1.000000 4n
702.50 950.08 moveto
702.50 929.83 lineto stroke
729.37 935.83 1.000000 4n
733.05 936.58 moveto
733.05 967.33 lineto stroke
741.05 950.83 1.000000 4n
744.74 951.58 moveto
744.74 967.33 lineto stroke
753.58 935.83 1.000000 4n
757.26 936.58 moveto
757.26 967.33 lineto stroke
newpath
732.70 968.83 moveto
757.61 968.83 lineto
757.61 965.83 lineto
732.70 965.83 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
686.72 881.38 1.000000 4n
0.70 setlinewidth
690.41 882.13 moveto
690.41 902.38 lineto stroke
717.86 899.38 1.000000 4n
717.86 893.38 1.000000 4n
721.55 894.13 moveto
721.55 915.38 lineto stroke
741.05 899.38 1.000000 4n
741.05 893.38 1.000000 4n
744.74 894.13 moveto
744.74 915.38 lineto stroke
694.52 881.38 1.000000 2n
704.00 881.38 1.000000 dot
690.62 880.63 moveto
690.62 861.38 lineto stroke
restore
%  S_BAR
69 linenum
0.70 setlinewidth
767.65 959.83 moveto
767.65 935.83 lineto stroke
767.65 896.38 moveto
767.65 872.38 lineto stroke
%  S_FEED
72 linenum
50.50 800.38 768.00 5 1.000000 1.000000 staff
/Times-Roman findfont
11 scalefont
setfont
55.00 827.50 moveto
(9) show
50.50 739.08 768.00 5 1.000000 1.000000 staff
49.50 812.38 727.08 brace
50.50 812.38 moveto
50.50 727.08 lineto stroke
%  S_CLEFSIG
72 linenum
62.29 794.38 1.000000 gclef
62.54 745.08 1.000000 fclef
78.33 800.38 1.000000 flat
78.33 733.08 1.000000 flat
%  S_CHHEAD
72 linenum
%  S_STAFF
% staff 1
save
97.52 791.38 1.000000 4n
101.20 792.13 moveto
101.20 812.38 lineto stroke
116.91 800.38 1.000000 4rest
restore
%  S_STAFF
% staff 2
save
97.52 751.08 1.000000 4n
97.52 745.08 1.000000 4n
0.70 setlinewidth
93.84 750.33 moveto
93.84 724.08 lineto stroke
116.91 724.08 1.000000 4n
120.60 724.83 moveto
120.60 745.08 lineto stroke
restore
%  S_BAR
74 linenum
149.71 803.38 1.000000 dot
149.71 797.38 1.000000 dot
135.71 803.38 1.000000 dot
135.71 797.38 1.000000 dot
3.00 setlinewidth
140.21 812.38 moveto
140.21 788.38 lineto stroke
145.21 812.38 moveto
145.21 788.38 lineto stroke
0.70 setlinewidth
149.71 742.08 1.000000 dot
149.71 736.08 1.000000 dot
135.71 742.08 1.000000 dot
135.71 736.08 1.000000 dot
3.00 setlinewidth
140.21 751.08 moveto
140.21 727.08 lineto stroke
145.21 751.08 moveto
145.21 727.08 lineto stroke
0.70 setlinewidth
%  S_CHHEAD
78 linenum
%  S_STAFF
% staff 1
save
159.31 803.38 1.000000 4n
168.58 803.38 1.000000 dot
155.63 802.63 moveto
155.63 782.38 lineto stroke
restore
%  S_STAFF
% staff 2
save
159.31 736.08 1.000000 4n
168.58 736.08 1.000000 dot
0.70 setlinewidth
162.99 736.83 moveto
162.99 757.08 lineto stroke
restore
%  S_BAR
80 linenum
0.70 setlinewidth
186.41 812.38 moveto
186.41 788.38 lineto stroke
186.41 751.08 moveto
186.41 727.08 lineto stroke
%  S_CHHEAD
84 linenum
%  S_STAFF
% staff 1
save
195.25 821.38 1.000000 2n
188.81 818.38 moveto
201.70 818.38 lineto stroke
191.36 820.63 moveto
191.36 800.38 lineto stroke
237.88 818.38 1.000000 4n
231.65 818.38 moveto
244.11 818.38 lineto stroke
234.20 817.63 moveto
234.20 799.15 lineto stroke
249.37 815.38 1.000000 4n
245.69 814.63 moveto
245.69 797.07 lineto stroke
newpath
233.85 800.65 moveto
246.04 798.57 lineto
246.04 795.57 lineto
233.85 797.65 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
195.25 736.08 1.000000 4n
0.70 setlinewidth
191.57 735.33 moveto
191.57 718.11 lineto stroke
205.91 757.08 1.000000 4n
199.68 757.08 moveto
212.14 757.08 lineto stroke
202.23 756.33 moveto
202.23 721.99 lineto stroke
216.57 748.08 1.000000 4n
216.57 742.08 1.000000 4n
212.88 747.33 moveto
212.88 725.58 lineto stroke
227.22 757.08 1.000000 4n
220.99 757.08 moveto
233.45 757.08 lineto stroke
223.54 756.33 moveto
223.54 725.58 lineto stroke
237.88 748.08 1.000000 4n
237.88 742.08 1.000000 4n
234.20 747.33 moveto
234.20 725.58 lineto stroke
249.37 757.08 1.000000 4n
243.14 757.08 moveto
255.60 757.08 lineto stroke
245.69 756.33 moveto
245.69 725.58 lineto stroke
newpath
191.22 719.61 moveto
202.58 723.49 lineto
202.58 720.49 lineto
191.22 716.61 lineto
closepath
fill
newpath
212.53 727.08 moveto
246.04 727.08 lineto
246.04 724.08 lineto
212.53 724.08 lineto
closepath
fill
restore
%  S_BAR
86 linenum
0.70 setlinewidth
262.59 812.38 moveto
262.59 788.38 lineto stroke
262.59 751.08 moveto
262.59 727.08 lineto stroke
%  S_CHHEAD
90 linenum
%  S_STAFF
% staff 1
save
271.22 812.38 1.000000 4n
267.54 811.63 moveto
267.54 792.88 lineto stroke
281.88 809.38 1.000000 4n
278.20 808.63 moveto
278.20 792.88 lineto stroke
292.53 815.38 1.000000 4n
288.85 814.63 moveto
288.85 792.88 lineto stroke
303.19 812.38 1.000000 4n
299.51 811.63 moveto
299.51 792.88 lineto stroke
313.85 818.38 1.000000 4n
307.61 818.38 moveto
320.08 818.38 lineto stroke
310.16 817.63 moveto
310.16 792.88 lineto stroke
325.34 812.38 1.000000 4n
321.66 811.63 moveto
321.66 792.88 lineto stroke
newpath
267.19 794.38 moveto
322.01 794.38 lineto
322.01 791.38 lineto
267.19 791.38 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
271.22 736.08 1.000000 4n
0.70 setlinewidth
267.54 735.33 moveto
267.54 718.11 lineto stroke
281.88 757.08 1.000000 4n
275.65 757.08 moveto
288.11 757.08 lineto stroke
278.20 756.33 moveto
278.20 721.99 lineto stroke
292.53 751.08 1.000000 4n
292.53 745.08 1.000000 4n
288.85 750.33 moveto
288.85 728.58 lineto stroke
303.19 757.08 1.000000 4n
296.96 757.08 moveto
309.42 757.08 lineto stroke
299.51 756.33 moveto
299.51 728.58 lineto stroke
313.85 751.08 1.000000 4n
313.85 745.08 1.000000 4n
310.16 750.33 moveto
310.16 728.58 lineto stroke
325.34 757.08 1.000000 4n
319.11 757.08 moveto
331.57 757.08 lineto stroke
321.66 756.33 moveto
321.66 728.58 lineto stroke
newpath
267.19 719.61 moveto
278.55 723.49 lineto
278.55 720.49 lineto
267.19 716.61 lineto
closepath
fill
newpath
288.50 730.08 moveto
322.01 730.08 lineto
322.01 727.08 lineto
288.50 727.08 lineto
closepath
fill
restore
%  S_BAR
92 linenum
0.70 setlinewidth
338.56 812.38 moveto
338.56 788.38 lineto stroke
338.56 751.08 moveto
338.56 727.08 lineto stroke
%  S_CHHEAD
96 linenum
%  S_STAFF
% staff 1
save
347.09 803.38 1.000000 4n
343.41 802.63 moveto
343.41 785.50 lineto stroke
357.15 812.38 1.000000 4n
353.47 811.63 moveto
353.47 788.95 lineto stroke
375.15 818.38 1.000000 4n
368.92 818.38 moveto
379.89 818.38 lineto stroke
371.47 817.63 moveto
371.47 795.13 lineto stroke
385.22 824.38 1.000000 4n
378.99 824.38 moveto
391.45 824.38 lineto stroke
380.99 818.38 moveto
389.45 818.38 lineto stroke
381.54 823.63 moveto
381.54 801.88 lineto stroke
395.28 818.38 1.000000 4n
390.55 818.38 moveto
401.51 818.38 lineto stroke
391.60 817.63 moveto
391.60 799.65 lineto stroke
413.28 812.38 1.000000 4n
409.60 811.63 moveto
409.60 795.67 lineto stroke
423.35 803.38 1.000000 4n
419.66 802.63 moveto
419.66 781.69 lineto stroke
433.41 797.38 1.000000 4n
429.73 796.63 moveto
429.73 779.59 lineto stroke
451.86 791.38 1.000000 4n
448.17 790.63 moveto
448.17 775.73 lineto stroke
/NewCenturySchlbk-BoldItalic findfont
11 scalefont
setfont
354.27 777.81 moveto
(3) show
/NewCenturySchlbk-BoldItalic findfont
11 scalefont
setfont
392.40 786.28 moveto
(3) show
/NewCenturySchlbk-BoldItalic findfont
11 scalefont
setfont
430.75 766.21 moveto
(3) show
newpath
343.06 787.00 moveto
371.82 796.63 lineto
371.82 793.63 lineto
343.06 784.00 lineto
closepath
fill
newpath
381.19 803.38 moveto
409.95 797.17 lineto
409.95 794.17 lineto
381.19 800.38 lineto
closepath
fill
newpath
419.31 783.19 moveto
448.52 777.23 lineto
448.52 774.23 lineto
419.31 780.19 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
347.09 736.08 1.000000 4n
0.70 setlinewidth
343.41 735.33 moveto
343.41 718.11 lineto stroke
366.15 757.08 1.000000 4n
359.92 757.08 moveto
372.39 757.08 lineto stroke
362.47 756.33 moveto
362.47 725.05 lineto stroke
385.22 751.08 1.000000 4n
385.22 745.08 1.000000 4n
381.54 750.33 moveto
381.54 728.58 lineto stroke
404.28 757.08 1.000000 4n
398.05 757.08 moveto
410.51 757.08 lineto stroke
400.60 756.33 moveto
400.60 728.58 lineto stroke
423.35 751.08 1.000000 4n
423.35 745.08 1.000000 4n
419.66 750.33 moveto
419.66 728.58 lineto stroke
442.41 757.08 1.000000 4n
436.18 757.08 moveto
448.64 757.08 lineto stroke
438.73 756.33 moveto
438.73 728.58 lineto stroke
newpath
343.06 719.61 moveto
362.82 726.55 lineto
362.82 723.55 lineto
343.06 716.61 lineto
closepath
fill
newpath
381.19 730.08 moveto
439.08 730.08 lineto
439.08 727.08 lineto
381.19 727.08 lineto
closepath
fill
restore
%  S_BAR
98 linenum
0.70 setlinewidth
462.61 812.38 moveto
462.61 788.38 lineto stroke
462.61 751.08 moveto
462.61 727.08 lineto stroke
%  S_CHHEAD
102 linenum
%  S_STAFF
% staff 1
save
471.15 788.38 1.000000 4n
474.83 789.13 moveto
474.83 809.38 lineto stroke
477.85 809.38 1.000000 dnflag
486.36 806.38 1.000000 4n
482.68 805.63 moveto
482.68 785.38 lineto stroke
507.67 800.38 1.000000 4n
499.22 800.38 1.000000 nat
511.35 801.13 moveto
511.35 822.29 lineto stroke
518.33 803.38 1.000000 4n
522.01 804.13 moveto
522.01 818.41 lineto stroke
529.82 788.38 1.000000 4n
533.50 789.13 moveto
533.50 814.23 lineto stroke
newpath
511.00 823.79 moveto
533.85 815.73 lineto
533.85 812.73 lineto
511.00 820.79 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
471.15 736.08 1.000000 4n
0.70 setlinewidth
467.46 735.33 moveto
467.46 718.11 lineto stroke
486.36 757.08 1.000000 4n
480.13 757.08 moveto
492.59 757.08 lineto stroke
482.68 756.33 moveto
482.68 723.65 lineto stroke
497.01 754.08 1.000000 4n
497.01 748.08 1.000000 4n
493.33 753.33 moveto
493.33 731.58 lineto stroke
507.67 757.08 1.000000 4n
501.44 757.08 moveto
513.90 757.08 lineto stroke
503.99 756.33 moveto
503.99 731.58 lineto stroke
518.33 754.08 1.000000 4n
518.33 748.08 1.000000 4n
514.64 753.33 moveto
514.64 731.58 lineto stroke
529.82 757.08 1.000000 4n
523.59 757.08 moveto
536.05 757.08 lineto stroke
526.14 756.33 moveto
526.14 731.58 lineto stroke
newpath
467.11 719.61 moveto
483.03 725.15 lineto
483.03 722.15 lineto
467.11 716.61 lineto
closepath
fill
newpath
492.98 733.08 moveto
526.49 733.08 lineto
526.49 730.08 lineto
492.98 730.08 lineto
closepath
fill
restore
%  S_BAR
104 linenum
0.70 setlinewidth
543.04 812.38 moveto
543.04 788.38 lineto stroke
543.04 751.08 moveto
543.04 727.08 lineto stroke
%  S_CHHEAD
108 linenum
%  S_STAFF
% staff 1
save
551.67 788.38 1.000000 4n
547.99 787.63 moveto
547.99 769.87 lineto stroke
562.33 791.38 1.000000 4n
558.64 790.63 moveto
558.64 773.50 lineto stroke
572.98 797.38 1.000000 4n
569.30 796.63 moveto
569.30 777.14 lineto stroke
583.64 803.38 1.000000 4n
579.95 802.63 moveto
579.95 780.78 lineto stroke
594.29 818.38 1.000000 4n
588.06 818.38 moveto
600.52 818.38 lineto stroke
590.61 817.63 moveto
590.61 784.42 lineto stroke
605.79 815.38 1.000000 4n
602.11 814.63 moveto
602.11 788.35 lineto stroke
newpath
547.64 771.37 moveto
602.46 789.85 lineto
602.46 786.85 lineto
547.64 768.37 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
551.67 736.08 1.000000 4n
0.70 setlinewidth
547.99 735.33 moveto
547.99 718.11 lineto stroke
562.33 757.08 1.000000 4n
556.09 757.08 moveto
568.56 757.08 lineto stroke
558.64 756.33 moveto
558.64 721.99 lineto stroke
572.98 751.08 1.000000 4n
572.98 745.08 1.000000 4n
569.30 750.33 moveto
569.30 728.58 lineto stroke
583.64 757.08 1.000000 4n
577.40 757.08 moveto
589.87 757.08 lineto stroke
579.95 756.33 moveto
579.95 728.58 lineto stroke
594.29 751.08 1.000000 4n
594.29 745.08 1.000000 4n
590.61 750.33 moveto
590.61 728.58 lineto stroke
605.79 757.08 1.000000 4n
599.56 757.08 moveto
612.02 757.08 lineto stroke
602.11 756.33 moveto
602.11 728.58 lineto stroke
newpath
547.64 719.61 moveto
558.99 723.49 lineto
558.99 720.49 lineto
547.64 716.61 lineto
closepath
fill
newpath
568.95 730.08 moveto
602.46 730.08 lineto
602.46 727.08 lineto
568.95 727.08 lineto
closepath
fill
restore
%  S_BAR
111 linenum
0.70 setlinewidth
619.01 812.38 moveto
619.01 788.38 lineto stroke
619.01 751.08 moveto
619.01 727.08 lineto stroke
%  S_CHHEAD
115 linenum
%  S_STAFF
% staff 1
save
627.64 812.38 1.000000 4n
623.95 811.63 moveto
623.95 791.38 lineto stroke
648.95 818.38 1.000000 4n
642.72 818.38 moveto
655.18 818.38 lineto stroke
648.95 797.38 1.000000 4n
645.27 817.63 moveto
645.27 777.38 lineto stroke
670.26 812.38 1.000000 4n
670.26 791.38 1.000000 4n
666.58 811.63 moveto
666.58 773.38 lineto stroke
restore
%  S_STAFF
% staff 2
save
627.64 736.08 1.000000 4n
0.70 setlinewidth
623.95 735.33 moveto
623.95 707.23 lineto stroke
638.29 757.08 1.000000 4n
632.06 757.08 moveto
644.52 757.08 lineto stroke
634.61 756.33 moveto
634.61 707.23 lineto stroke
648.95 730.08 1.000000 4n
645.27 729.33 moveto
645.27 707.23 lineto stroke
659.60 751.08 1.000000 4n
655.92 750.33 moveto
655.92 707.23 lineto stroke
670.26 724.08 1.000000 4n
666.58 723.33 moveto
666.58 707.23 lineto stroke
681.75 745.08 1.000000 4n
678.07 744.33 moveto
678.07 707.23 lineto stroke
newpath
623.60 708.73 moveto
678.42 708.73 lineto
678.42 705.73 lineto
623.60 705.73 lineto
closepath
fill
restore
%  S_BAR
117 linenum
0.70 setlinewidth
694.97 812.38 moveto
694.97 788.38 lineto stroke
694.97 751.08 moveto
694.97 727.08 lineto stroke
%  S_CHHEAD
120 linenum
%  S_STAFF
% staff 1
save
708.23 824.38 1.000000 2n
701.78 824.38 moveto
714.68 824.38 lineto stroke
701.78 818.38 moveto
714.68 818.38 lineto stroke
708.23 803.38 1.000000 2n
704.33 823.63 moveto
704.33 782.38 lineto stroke
restore
%  S_STAFF
% staff 2
save
708.23 715.08 1.000000 2n
0.70 setlinewidth
701.78 715.08 moveto
714.68 715.08 lineto stroke
701.78 721.08 moveto
714.68 721.08 lineto stroke
712.13 715.83 moveto
712.13 739.08 lineto stroke
restore
%  S_BAR
122 linenum
743.02 803.38 1.000000 dot
743.02 797.38 1.000000 dot
747.02 812.38 moveto
747.02 788.38 lineto stroke
3.00 setlinewidth
751.02 812.38 moveto
751.02 788.38 lineto stroke
0.70 setlinewidth
743.02 742.08 1.000000 dot
743.02 736.08 1.000000 dot
747.02 751.08 moveto
747.02 727.08 lineto stroke
3.00 setlinewidth
751.02 751.08 moveto
751.02 727.08 lineto stroke
0.70 setlinewidth
%  S_SSV
124 linenum
%  S_CLEFSIG
130 linenum
758.77 800.38 1.000000 flat
764.26 809.38 1.000000 flat
758.77 733.08 1.000000 flat
764.26 742.08 1.000000 flat
%  S_FEED
130 linenum
50.50 655.08 768.00 5 1.000000 1.000000 staff
/Times-Roman findfont
11 scalefont
setfont
55.00 682.20 moveto
(19) show
50.50 584.72 768.00 5 1.000000 1.000000 staff
49.50 667.08 572.72 brace
50.50 667.08 moveto
50.50 572.72 lineto stroke
%  S_CLEFSIG
130 linenum
62.29 649.08 1.000000 gclef
62.54 590.72 1.000000 fclef
78.33 655.08 1.000000 flat
83.82 664.08 1.000000 flat
78.33 578.72 1.000000 flat
83.82 587.72 1.000000 flat
101.56 658.08 1.000000 dot
101.56 652.08 1.000000 dot
98.56 667.08 moveto
98.56 643.08 lineto stroke
3.00 setlinewidth
94.56 667.08 moveto
94.56 643.08 lineto stroke
0.70 setlinewidth
101.56 587.72 1.000000 dot
101.56 581.72 1.000000 dot
98.56 596.72 moveto
98.56 572.72 lineto stroke
3.00 setlinewidth
94.56 596.72 moveto
94.56 572.72 lineto stroke
0.70 setlinewidth
%  S_CHHEAD
130 linenum
%  S_STAFF
% staff 1
save
119.89 646.08 1.000000 4n
123.57 646.83 moveto
123.57 667.08 lineto stroke
restore
%  S_STAFF
% staff 2
save
119.89 584.72 1.000000 4rest
restore
%  S_BAR
132 linenum
0.70 setlinewidth
139.88 667.08 moveto
139.88 643.08 lineto stroke
139.88 596.72 moveto
139.88 572.72 lineto stroke
%  S_CHHEAD
135 linenum
%  S_STAFF
% staff 1
save
148.53 646.08 1.000000 4n
144.85 645.33 moveto
144.85 628.72 lineto stroke
159.32 661.08 1.000000 4n
155.63 660.33 moveto
155.63 631.03 lineto stroke
170.10 652.08 1.000000 4n
166.42 651.33 moveto
166.42 633.34 lineto stroke
180.89 655.08 1.000000 4n
177.21 654.33 moveto
177.21 635.66 lineto stroke
191.68 670.08 1.000000 4n
187.99 669.33 moveto
187.99 637.97 lineto stroke
203.30 667.08 1.000000 4n
199.62 666.33 moveto
199.62 640.47 lineto stroke
newpath
144.50 630.22 moveto
199.97 641.97 lineto
199.97 638.97 lineto
144.50 627.22 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
148.53 578.72 1.000000 4n
0.70 setlinewidth
152.21 579.47 moveto
152.21 599.72 lineto stroke
170.10 605.72 1.000000 4n
163.87 602.72 moveto
176.33 602.72 lineto stroke
170.10 599.72 1.000000 4n
170.10 590.72 1.000000 4n
166.42 604.97 moveto
166.42 569.72 lineto stroke
191.68 605.72 1.000000 4n
185.44 602.72 moveto
197.91 602.72 lineto stroke
191.68 599.72 1.000000 4n
191.68 590.72 1.000000 4n
187.99 604.97 moveto
187.99 569.72 lineto stroke
restore
%  S_BAR
137 linenum
0.70 setlinewidth
216.63 667.08 moveto
216.63 643.08 lineto stroke
216.63 596.72 moveto
216.63 572.72 lineto stroke
%  S_CHHEAD
141 linenum
%  S_STAFF
% staff 1
save
226.61 667.08 1.000000 4n
235.88 670.08 1.000000 dot
222.93 666.33 moveto
222.93 646.08 lineto stroke
254.85 688.08 1.000000 4n
248.62 685.08 moveto
261.08 685.08 lineto stroke
248.62 679.08 moveto
259.08 679.08 lineto stroke
248.62 673.08 moveto
259.08 673.08 lineto stroke
251.17 687.33 moveto
251.17 656.58 lineto stroke
265.64 682.08 1.000000 4n
260.90 679.08 moveto
271.87 679.08 lineto stroke
261.40 673.08 moveto
269.95 673.08 lineto stroke
261.95 681.33 moveto
261.95 655.14 lineto stroke
277.26 676.08 1.000000 4n
272.45 673.08 moveto
283.49 673.08 lineto stroke
273.58 675.33 moveto
273.58 653.58 lineto stroke
newpath
250.82 658.08 moveto
273.93 655.08 lineto
273.93 652.08 lineto
250.82 655.08 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
226.61 578.72 1.000000 4n
0.70 setlinewidth
230.30 579.47 moveto
230.30 599.72 lineto stroke
244.24 605.72 1.000000 4n
238.01 602.72 moveto
250.47 602.72 lineto stroke
244.24 599.72 1.000000 4n
244.24 590.72 1.000000 4n
247.92 591.47 moveto
247.92 620.72 lineto stroke
265.64 605.72 1.000000 4n
259.40 602.72 moveto
271.87 602.72 lineto stroke
265.64 599.72 1.000000 4n
265.64 590.72 1.000000 4n
269.32 591.47 moveto
269.32 620.72 lineto stroke
restore
%  S_BAR
143 linenum
0.70 setlinewidth
290.59 667.08 moveto
290.59 643.08 lineto stroke
290.59 596.72 moveto
290.59 572.72 lineto stroke
%  S_CHHEAD
147 linenum
%  S_STAFF
% staff 1
save
299.24 670.08 1.000000 4n
295.56 669.33 moveto
295.56 645.51 lineto stroke
309.91 667.08 1.000000 4n
306.23 666.33 moveto
306.23 643.59 lineto stroke
328.73 658.08 1.000000 4n
319.38 658.08 1.000000 sharp
325.05 657.33 moveto
325.05 640.20 lineto stroke
339.52 661.08 1.000000 4n
335.84 660.33 moveto
335.84 638.25 lineto stroke
350.31 652.08 1.000000 4n
346.62 651.33 moveto
346.62 636.31 lineto stroke
361.93 655.08 1.000000 4n
358.25 654.33 moveto
358.25 634.21 lineto stroke
newpath
295.21 647.01 moveto
358.60 635.71 lineto
358.60 632.71 lineto
295.21 644.01 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
299.24 578.72 1.000000 4n
0.70 setlinewidth
302.92 579.47 moveto
302.92 599.72 lineto stroke
328.73 605.72 1.000000 4n
322.50 602.72 moveto
334.96 602.72 lineto stroke
328.73 599.72 1.000000 4n
328.73 590.72 1.000000 4n
332.41 591.47 moveto
332.41 620.72 lineto stroke
350.31 605.72 1.000000 4n
344.07 602.72 moveto
356.54 602.72 lineto stroke
350.31 599.72 1.000000 4n
350.31 590.72 1.000000 4n
353.99 591.47 moveto
353.99 620.72 lineto stroke
restore
%  S_BAR
149 linenum
0.70 setlinewidth
375.26 667.08 moveto
375.26 643.08 lineto stroke
375.26 596.72 moveto
375.26 572.72 lineto stroke
%  S_CHHEAD
153 linenum
%  S_STAFF
% staff 1
save
390.75 655.08 1.000000 4n
382.30 655.08 1.000000 nat
387.07 654.33 moveto
387.07 633.24 lineto stroke
401.54 658.08 1.000000 4n
397.86 657.33 moveto
397.86 632.57 lineto stroke
412.33 664.08 1.000000 4n
408.64 663.33 moveto
408.64 631.90 lineto stroke
423.11 661.08 1.000000 4n
419.43 660.33 moveto
419.43 631.22 lineto stroke
433.90 658.08 1.000000 4n
430.22 657.33 moveto
430.22 630.55 lineto stroke
445.52 646.08 1.000000 4n
441.84 645.33 moveto
441.84 629.83 lineto stroke
newpath
386.72 634.74 moveto
442.19 631.33 lineto
442.19 628.33 lineto
386.72 631.74 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
390.75 608.72 1.000000 2n
400.23 611.72 1.000000 dot
0.70 setlinewidth
384.30 608.72 moveto
397.20 608.72 lineto stroke
384.30 602.72 moveto
397.20 602.72 lineto stroke
390.75 596.72 1.000000 2n
400.23 599.72 1.000000 dot
390.75 590.72 1.000000 2n
400.23 593.72 1.000000 dot
386.85 607.97 moveto
386.85 569.72 lineto stroke
restore
%  S_BAR
155 linenum
0.70 setlinewidth
458.85 667.08 moveto
458.85 643.08 lineto stroke
458.85 596.72 moveto
458.85 572.72 lineto stroke
%  S_CHHEAD
159 linenum
%  S_STAFF
% staff 1
save
467.38 646.08 1.000000 4n
471.07 646.83 moveto
471.07 667.08 lineto stroke
475.89 649.08 0.583333 4n
477.89 649.57 moveto
477.89 661.12 lineto stroke
482.59 646.08 0.583333 4n
484.59 646.57 moveto
484.59 661.12 lineto stroke
493.29 643.08 0.583333 4n
487.94 643.08 0.583333 nat
495.29 643.57 moveto
495.29 661.12 lineto stroke
499.99 646.08 0.583333 4n
501.99 646.57 moveto
501.99 661.12 lineto stroke
508.37 652.08 1.000000 4n
512.06 652.83 moveto
512.06 674.58 lineto stroke
519.16 646.08 1.000000 4n
522.84 646.83 moveto
522.84 674.58 lineto stroke
529.95 658.08 1.000000 4n
533.63 658.83 moveto
533.63 674.58 lineto stroke
541.57 652.08 1.000000 4n
545.26 652.83 moveto
545.26 674.58 lineto stroke
newpath
511.71 676.08 moveto
545.61 676.08 lineto
545.61 673.08 lineto
511.71 673.08 lineto
closepath
fill
newpath
477.66 662.10 moveto
502.22 662.10 lineto
502.22 660.15 lineto
477.66 660.15 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
467.38 569.72 1.000000 4n
0.70 setlinewidth
471.07 570.47 moveto
471.07 590.72 lineto stroke
508.37 608.72 1.000000 4n
502.14 608.72 moveto
514.61 608.72 lineto stroke
502.14 602.72 moveto
514.61 602.72 lineto stroke
508.37 602.72 1.000000 4n
502.14 602.72 moveto
514.61 602.72 lineto stroke
508.37 590.72 1.000000 4n
512.06 591.47 moveto
512.06 623.72 lineto stroke
529.95 608.72 1.000000 4n
523.72 608.72 moveto
536.18 608.72 lineto stroke
523.72 602.72 moveto
536.18 602.72 lineto stroke
529.95 602.72 1.000000 4n
523.72 602.72 moveto
536.18 602.72 lineto stroke
529.95 590.72 1.000000 4n
533.63 591.47 moveto
533.63 623.72 lineto stroke
restore
%  S_BAR
161 linenum
0.70 setlinewidth
554.90 667.08 moveto
554.90 643.08 lineto stroke
554.90 596.72 moveto
554.90 572.72 lineto stroke
%  S_CHHEAD
165 linenum
%  S_STAFF
% staff 1
save
563.55 664.08 1.000000 4n
559.87 663.33 moveto
559.87 647.58 lineto stroke
574.34 685.08 1.000000 4n
568.11 685.08 moveto
580.57 685.08 lineto stroke
568.11 679.08 moveto
578.57 679.08 lineto stroke
568.11 673.08 moveto
578.57 673.08 lineto stroke
570.66 684.33 moveto
570.66 647.58 lineto stroke
585.13 679.08 1.000000 4n
580.40 679.08 moveto
591.36 679.08 lineto stroke
580.90 673.08 moveto
589.36 673.08 lineto stroke
581.45 678.33 moveto
581.45 647.58 lineto stroke
595.91 673.08 1.000000 4n
591.18 673.08 moveto
602.15 673.08 lineto stroke
592.23 672.33 moveto
592.23 647.58 lineto stroke
606.70 667.08 1.000000 4n
603.02 666.33 moveto
603.02 647.58 lineto stroke
618.33 664.08 1.000000 4n
614.64 663.33 moveto
614.64 647.58 lineto stroke
newpath
559.52 649.08 moveto
614.99 649.08 lineto
614.99 646.08 lineto
559.52 646.08 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
563.55 569.72 1.000000 4n
0.70 setlinewidth
567.24 570.47 moveto
567.24 590.72 lineto stroke
585.13 602.72 1.000000 4n
578.90 602.72 moveto
591.36 602.72 lineto stroke
585.13 596.72 1.000000 4n
585.13 590.72 1.000000 4n
588.81 591.47 moveto
588.81 617.72 lineto stroke
606.70 602.72 1.000000 4n
600.47 602.72 moveto
612.93 602.72 lineto stroke
606.70 596.72 1.000000 4n
606.70 590.72 1.000000 4n
610.38 591.47 moveto
610.38 617.72 lineto stroke
restore
%  S_BAR
167 linenum
0.70 setlinewidth
631.65 667.08 moveto
631.65 643.08 lineto stroke
631.65 596.72 moveto
631.65 572.72 lineto stroke
%  S_CHHEAD
171 linenum
%  S_STAFF
% staff 1
save
640.31 661.08 1.000000 4n
643.99 661.83 moveto
643.99 678.01 lineto stroke
651.09 655.08 1.000000 4n
654.78 655.83 moveto
654.78 676.70 lineto stroke
661.88 649.08 1.000000 4n
665.56 649.83 moveto
665.56 675.40 lineto stroke
672.67 658.08 1.000000 4n
676.35 658.83 moveto
676.35 674.09 lineto stroke
683.45 652.08 1.000000 4n
687.14 652.83 moveto
687.14 672.79 lineto stroke
695.08 646.08 1.000000 4n
698.76 646.83 moveto
698.76 671.38 lineto stroke
newpath
643.64 679.51 moveto
699.11 672.88 lineto
699.11 669.88 lineto
643.64 676.51 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
640.31 599.72 1.000000 4n
640.31 593.72 1.000000 4n
0.70 setlinewidth
636.62 598.97 moveto
636.62 572.72 lineto stroke
661.88 608.72 1.000000 4n
655.65 608.72 moveto
668.11 608.72 lineto stroke
655.65 602.72 moveto
668.11 602.72 lineto stroke
661.88 587.72 1.000000 4n
658.20 607.97 moveto
658.20 566.72 lineto stroke
683.45 602.72 1.000000 4n
677.22 602.72 moveto
689.69 602.72 lineto stroke
683.45 590.72 1.000000 4n
679.77 601.97 moveto
679.77 569.72 lineto stroke
restore
%  S_BAR
173 linenum
0.70 setlinewidth
708.41 667.08 moveto
708.41 643.08 lineto stroke
708.41 596.72 moveto
708.41 572.72 lineto stroke
%  S_CHHEAD
176 linenum
%  S_STAFF
% staff 1
save
718.39 655.08 1.000000 4n
714.71 654.33 moveto
714.71 634.08 lineto stroke
738.01 655.08 1.000000 4rest
restore
%  S_STAFF
% staff 2
save
718.39 605.72 1.000000 4n
0.70 setlinewidth
712.16 602.72 moveto
724.62 602.72 lineto stroke
718.39 599.72 1.000000 4n
714.71 604.97 moveto
714.71 578.72 lineto stroke
738.01 578.72 1.000000 4n
741.69 579.47 moveto
741.69 599.72 lineto stroke
restore
%  S_CURVE
178 linenum
551.67 797.38 moveto
551.53 797.45 lineto
547.28 813.68 552.67 825.54 567.68 833.03 curveto
582.69 840.52 595.41 837.69 605.82 824.53 curveto
605.76 824.24 lineto
595.21 836.38 582.74 838.87 568.35 831.69 curveto
553.95 824.50 548.44 813.05 551.80 797.32 curveto
fill
%  S_CURVE
179 linenum
119.89 651.33 moveto
119.84 651.54 lineto
124.36 653.81 129.15 654.95 134.21 654.95 curveto
139.27 654.95 144.05 653.81 148.57 651.54 curveto
148.49 651.13 lineto
143.88 652.85 139.12 653.72 134.21 653.72 curveto
129.29 653.72 124.53 652.85 119.93 651.13 curveto
fill
%  S_BAR
180 linenum
758.50 658.08 1.000000 dot
758.50 652.08 1.000000 dot
762.50 667.08 moveto
762.50 643.08 lineto stroke
3.00 setlinewidth
766.50 667.08 moveto
766.50 643.08 lineto stroke
0.70 setlinewidth
758.50 587.72 1.000000 dot
758.50 581.72 1.000000 dot
762.50 596.72 moveto
762.50 572.72 lineto stroke
3.00 setlinewidth
766.50 596.72 moveto
766.50 572.72 lineto stroke
0.70 setlinewidth
%  Printing header/footer
/Times-Roman findfont
12 scalefont
setfont
348.82 998.35 moveto
(Kaleidakustikon Layer 2) show
/Times-Roman findfont
12 scalefont
setfont
408.00 985.61 moveto
showpage
restore
%%Trailer
%%DocumentFonts: /Times-Roman /NewCenturySchlbk-Bold /NewCenturySchlbk-BoldItalic /Mfont0 
%%Pages: 1

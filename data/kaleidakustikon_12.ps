%!PS-Adobe-1.0
%%Creator: Mup (Version 6.1)
%%Title: music:  from kaleidakustikon_12.mup
%%CreationDate: Mon Jun 24 12:23:56 2013
%%Pages: (atend)
%%DocumentFonts: (atend)
%%BoundingBox: 0 0 612 792
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
% Mup prolog Copyright (c) 1995, 1996, 1997, 1998, 1999, 2000, 2003, 2004,
% 2008, 2009, 2012 by Arkkra Enterprises
% All rights reserved

% Mup PostScript Prolog 6.1 for use with Mup 6.1

% lwid is used as the width of a standard (thin) line in the music
% character definitions.
/lwid 70 def
/halflwid lwid 2 div def

% Define the following for use in do_upshortnote, do_dnshortnote, and
% do_shortrest; it has to be done outside of the music font definition.
/utildict 10 dict def
utildict begin
	/setnumflags	{	/numflags	exch def } def
	/sethooksm1	{	/hooksm1	exch def } def
	/setoffsets	{	/offsets	exch def } def
	/setx		{	/x		exch def } def
	/sety		{	/y		exch def } def
end

% Define a music character font.  Each music character is defined as if it
% were a normal ASCII character in a strange font where "A" looks like a
% treble clef, "B" looks like a bass clef, etc.

/mfont0 100 dict def
mfont0 begin
	/FontType 3 def
	/FontMatrix [ .001 0 0 0.001 0 0 ] def
	/FontBBox [ -2000 -4030 2000 4030 ] def
	/FontName (Mfont0) def

	% set up Encoding vector with standard names
	/Encoding 256 array def
	StandardEncoding Encoding copy
	pop

	% the following definitions are used for quarter rests
	/topx -170 def /topy 950 def
	/cor1x 250 def /cor1y 450 def
	/cor2x -300 def /cor2y 200 def
	/cor3x 250 def /cor3y -400 def

	% the following definitions are used for double sharps
	/limit 300 halflwid add def
	/off 70 def
	/inbendsmall limit 200 sub def
	/inbendbig limit 20 sub def
	/outbendsmall 100 def
	/outbendbig outbendsmall off add def

	%%%%% define routines that will be used by multiple characters %%%%%
	/do_1n {
		gsave
		newpath -10 rotate 1.6 1 scale
		0 0 325 0 360 arc		%outer ellipse
		1 1.6 div 1 scale 10 rotate	%back to original
		35 rotate 0.85 1.1 scale
		0 0 275 0 360 arc		%inner ellipse
		eofill
		grestore
	} def
	/do_upflag {
		-315 0 moveto
		-300 100 -100 480 0 600 curveto
		300 960 350 1500 200 1700 curveto
		130 1700 lineto
		350 1200 50 650 -315 600 curveto
		fill
	} def
	/do_flat {
		-250 -400 moveto	%outer edge of loop
		500 0 350 650 -250 160 curveto
		-250 160 lwid sub lineto %inner edge of loop
		100 400 300 0 -250 -400 lwid add curveto
		fill

		lwid setlinewidth	%stem
		-250 1100 moveto -250 -400 lineto stroke
	} def
	/do_diamond {
		newpath
		420 0 moveto 0 300 lineto -420 0 lineto
		0 -300 lineto closepath
		259 -29 moveto -41 185 lineto -259 29 lineto
		41 -185 lineto closepath
		eofill
	} def
	/do_2n {
		gsave
		newpath 25 rotate 1.4 1 scale
		0 0 315 0 360 arc		%outer ellipse
		1 1.4 div 1 scale		%back to original
		1.3 0.5 scale
		0 0 310 0 360 arc		%inner ellipse
		eofill
		grestore
	} def
	/do_4n {
		gsave
		newpath 25 rotate 1.35 1 scale
		0 0 310 0 360 arc fill
		grestore
	} def
	/do_com {
		newpath
		330 250 150 0 360 arc fill	%knob at upper right
		465 300 moveto			%outer boundary
		410 500 200 635 0 635 curveto
		-750 635 -750 -635 0 -635 curveto
		350 -635 480 -300 500 -100 curveto
		430 -100 lineto			%inner boundary
		380 -300 250 -565 0 -565 curveto
		-450 -565 -450 565 0 565 curveto
		200 565 370 350 395 300 curveto
		fill
	} def
	/do_ferm {
		0 0 800 lwid sub 0 180 arc	%inner arc
		-800 0 lineto
		0 270 lwid sub 800 180 0 arcn	%outer arc
		800 0 lineto fill
		0 120 120 0 360 arc fill	%the dot
	} def
	/do_mor {
		gsave
		0.7 1 scale	%scrunch the following horizontally
		45 rotate	%to pretend all lines horz or vertical
		0 1 1 {
			pop	%we don't need the loop variable
			%one half of the mordent
			0 40 moveto 350 40 lineto 350 -460 lineto
			750 -460 lineto 750 -540 lineto
			150 -540 lineto 150 -40 lineto
			0 -40 lineto fill
			180 rotate	%to do the other half
		} for
		grestore
	} def
	/do_turn {
		gsave
		0 1 1 {
			pop	%we don't need the loop variable
			0 -100 moveto	%outer boundary
			200 -400 625 -400 625 0 curveto
			625 200 500 325 300 325 curveto
			300 185 lineto	%inner boundary
			450 255 555 150 555 0 curveto
			555 -350 250 -250 0 100 curveto
			fill
			300 255 70 0 360 arc fill %knob on end
			180 rotate	%to do the other half
		} for
		grestore
	} def

	/do_upshortnote {
		utildict begin
		setnumflags		%set numflags from the stack
		gsave
		-330 0 translate	%half a flag width
		do_4n			%do a quarter note head
		lwid setlinewidth
		370 0 moveto
		370 2100 numflags 2 sub flagsep mul add lineto stroke
		670 2100 numflags 2 sub flagsep mul add translate
		1 -1 scale		%reflect across X axis
		0 1 numflags 1 sub {
			do_upflag	%do an upflag
			pop		%we don't need the loop variable
			0 flagsep translate
		} for
		grestore
		end
	} def

	/do_dnshortnote {
		utildict begin
		setnumflags		%set numflags from the stack
		do_4n			%do a quarter note head
		lwid setlinewidth
		-370 0 moveto
		-370 -2100 numflags 2 sub flagsep mul sub lineto stroke
		gsave
		-70 -2100 numflags 2 sub flagsep mul sub translate
		0 1 numflags 1 sub {
			do_upflag	%do an upflag
			pop		%we don't need the loop variable
			0 flagsep translate
		} for
		grestore
		end
	} def

	/do_shortrest {
		utildict begin
		sety setx setoffsets sethooksm1	%set variable from the stack
		gsave
		-105.8 offsets mul -600 offsets mul translate
		0 1 hooksm1 {		%loop once per hook
			newpath
			1 setlinewidth
			gsave
			1 1.2 scale
			-150 300 1.2 div 140 0 360 arc fill 	%the dot
			grestore
			lwid setlinewidth
			-50 700 550 255 315 arc		%rest of the hook
			hooksm1 lt { stroke 105.8 600 translate } if
		} for
		x y lineto stroke
		grestore
		end
	} def


	% subsidiary dictionary of character definitions
	/CharStrings 128 dict def
	CharStrings begin

		/.notdef {} def

		% Here are the definitions of the characters.  A stepsize here
		% is 300 units (assuming the character is drawn at its default
		% size).

		% gclef
		/A {
			newpath
			%start with inner curl, inside boundary
			-50 -300 moveto
			-450 600 700 700 750 0 curveto
			750 -800 -700 -800 -700 200 curveto
			-700 900 500 1400 520 2250 curveto
			520 2900 300 3000 200 3000 curveto
			100 3000 -400 2500 -200 1800 curveto
			350 -600 lineto
			720 -1600 0 -1650 -400 -1400 curveto

			%go back to start, drawing the other boundary
			-400 -1480 lineto
			0 -1700 800 -1700 430 -600 curveto
			-120 1800 lineto
			-300 2400 200 2800 250 2800 curveto
			400 2800 430 2700 430 2450 curveto
			430 1800 -900 1200 -900 300 curveto
			-750 -900 800 -900 850 0 curveto
			900 1100 -750 900 -120 -300 curveto fill

			%circle at the bottom
			-300 -1250 250 0 360 arc fill
		} def

		% fclef
		/B {
			newpath
			%start with outside boundary, at bottom
			-1000 -1700 moveto
			100 -1100 500 -600 450 0 curveto
			450 850 -1100 850 -950 0 curveto

			%go back to start, drawing the other boundary
			-880 0 lineto
			-920 400 -600 560 -300 560 curveto
			0 560 150 400 150 0 curveto
			150 -400 100 -900 -1000 -1620 curveto fill

			%circle at the left
			newpath
			-700 0 250 0 360 arc fill

			%do the two dots after the main curve
			700 -300 100 0 360 arc fill
			700 300 100 0 360 arc fill
		} def

		% cclef
		/C {
			gsave
			%do upper curved part, then scale to do mirror image
			0 1 1 {
				pop	%we don't need the loop variable
				%outer boundary of curve
				-170 0 moveto 100 300 lineto
				400 -200 750 300 750 650 curveto
				750 1100 450 1235 250 1235 curveto
				0 1235 -143 1100 -143 950 curveto

				%inner boundary of curve
				0 950 lineto
				0 1100 30 1165 250 1165 curveto
				300 1165 450 1100 450 650 curveto
				450 400 400 -100 100 400 curveto
				-270 0 lineto fill
				%stroke
				%-270 0 moveto 100 400 lineto
				%400 -100 450 400 450 650 curveto
				%450 1100 300 1165 250 1165 curveto
				%30 1165 0 1100 0 950 curveto
				%stroke

				%elliptical ball at end of curve
				gsave
				1.3 1 scale
				10 950 120 0 360 arc fill
				grestore
				1 -1 scale	%reflect across X axis
			} for
			grestore

			% two vertical lines on the left
			300 setlinewidth -600 -1200 halflwid sub moveto
			-600 1200 halflwid add lineto stroke
			lwid setlinewidth -300 -1200 halflwid sub moveto
			-300 1200 halflwid add lineto stroke
		} def

		% dblwhole
		/D {
			do_1n		%do a whole note
			lwid setlinewidth
			-490 -600 moveto -490 600 lineto stroke
			490 -600 moveto 490 600 lineto stroke
		} def

		% 1n
		/E {
			do_1n		%do a whole note
		} def

		% 2n
		/F {
			do_2n		%do a half note
		} def

		% 4n
		/G {
			do_4n		%do a quarter note head
		} def

		% upflag
		/H {
			do_upflag		%do an upflag
		} def

		% dnflag
		/I {
			gsave
			1 -1 scale	%reflect across X axis
			do_upflag		%do an upflag
			grestore
		} def

		% dwhrest
		/J {
			300 setlinewidth
			0 0 moveto 0 600 lineto stroke
		} def

		% 1rest
		/K {
			lwid setlinewidth
			-750 600 moveto 750 600 lineto stroke
			300 setlinewidth
			-400 450 moveto 400 450 lineto stroke
		} def

		% 2rest
		/L {
			lwid setlinewidth
			-750 0 moveto 750 0 lineto stroke
			300 setlinewidth
			-400 150 moveto 400 150 lineto stroke
		} def

		% 4rest
		/M {
			newpath
			cor3x cor3y halflwid add moveto
			%-400 -200 -450 -650 50 -950 lwid add curveto
			-450 -50 -450 -650 50 -950 lwid add curveto
			-150 -650 -100 -250 cor3x cor3y halflwid sub curveto
			fill

			cor1x cor1y moveto cor1x 200 sub cor1y 200 add lineto
			cor2x cor2y lineto cor2x 200 add cor2y 200 sub lineto
			fill

			lwid setlinewidth
			topx topy moveto cor1x cor1y lineto stroke
			cor2x cor2y moveto cor3x cor3y lineto stroke
		} def

		% 8rest
		/N {
			0 0 0 -600 do_shortrest
		} def

		% 16rest
		/O {
			1 1 100 -1200 do_shortrest
		} def

		% 32rest
		/P {
			2 1 0 -1800 do_shortrest
		} def

		% 64rest
		/Q {
			3 2 -80 -2100 do_shortrest
		} def

		% 128rest
		/R {
			4 2 -150 -2700 do_shortrest
		} def

		% 256rest
		/S {
			5 3 -280 -3300 do_shortrest
		} def

		% dot
		/T {
			newpath
			0 0 120 0 360 arc fill
		} def

		% nat
		/U {
			% fill crossbars so that we can do parallelograms
			-235 -470 moveto -235 -270 lineto
			235 -130 lineto 235 -330 lineto fill
			-235 130 moveto -235 330 lineto
			235 470 lineto 235 270 lineto fill

			% vertical strokes
			lwid setlinewidth
			-200 -380 moveto -200 850 lineto stroke
			200 -850 moveto 200 380 lineto stroke
		} def

		% sharp
		/V {
			% fill crossbars so that we can do parallelograms
			-325 -480 moveto -325 -280 lineto
			325 -120 lineto 325 -320 lineto fill
			-325 120 moveto -325 320 lineto
			325 480 lineto 325 280 lineto fill

			% vertical strokes
			lwid setlinewidth
			-150 -930 moveto -150 880 lineto stroke
			150 -880 moveto 150 930 lineto stroke
		} def

		% flat
		/W {
			do_flat		%do a flat
		} def

		% dblsharp
		/X {
			gsave
			0 1 3 {		%loop once for each of 4 sticks
				pop	%we don't need the loop variable
				0 off neg moveto
				outbendbig outbendsmall lineto
				inbendbig inbendsmall lineto
				limit limit lineto
				inbendsmall inbendbig lineto
				outbendsmall outbendbig lineto
				off neg 0 lineto
				fill
				-90 rotate
			} for
			grestore
		} def

		% dblflat
		/Y {
			-290 580 290 {	%loop once for each flat

				gsave
				1 setlinewidth
				0 translate	%translate left/right (loop var)
				do_flat		%do a flat
				grestore

			} for
		} def

		% xnote
		/Z {
			gsave
			1.15 1 scale 120 setlinewidth 1 setlinecap	%round
			-300 -300 moveto 300 300 lineto stroke
			-300 300 moveto 300 -300 lineto stroke
			grestore
		} def

		% dwhdiamond
		/a {
			do_diamond	%do a diamond
			lwid setlinewidth
			-420 -600 moveto -420 600 lineto stroke
			420 -600 moveto 420 600 lineto stroke
		} def

		% diamond
		/b {
			do_diamond	%do a diamond
		} def

		% filldiamond
		/c {
			420 0 moveto 0 300 lineto
			-420 0 lineto 0 -300 lineto fill
		} def

		% up2n
		/d {
			lwid setlinewidth
			380 0 moveto 380 2100 lineto stroke
			do_2n		%do a half note
		} def

		% dn2n
		/e {
			lwid setlinewidth
			-380 0 moveto -380 -2100 lineto stroke
			do_2n		%do a half note
		} def

		% up4n
		/f {
			do_4n		%do a quarter note head
			lwid setlinewidth
			370 0 moveto 370 2100 lineto stroke
		} def

		% dn4n
		/g {
			do_4n		%do a quarter note head
			lwid setlinewidth
			-370 0 moveto -370 -2100 lineto stroke
		} def

		% up8n
		/h {
			gsave
			-330 0 translate	% half a flag width
			do_4n		%do a quarter note head
			lwid setlinewidth
			370 0 moveto 370 2100 lineto stroke
			670 2100 translate
			1 -1 scale	%reflect across X axis
			do_upflag		%do an upflag
			grestore
		} def

		% dn8n
		/i {
			do_4n		%do a quarter note head
			lwid setlinewidth
			-370 0 moveto -370 -2100 lineto stroke
			gsave
			-70 -2100 translate
			do_upflag		%do an upflag
			grestore
		} def

		% up16n
		/j {
			2 do_upshortnote
		} def

		% dn16n
		/k {
			2 do_dnshortnote
		} def

		% up32n
		/l {
			3 do_upshortnote
		} def

		% dn32n
		/m {
			3 do_dnshortnote
		} def

		% up64n
		/n {
			4 do_upshortnote
		} def

		% dn64n
		/o {
			4 do_dnshortnote
		} def

		% up128n
		/p {
			5 do_upshortnote
		} def

		% dn128n
		/q {
			5 do_dnshortnote
		} def

		% up256n
		/r {
			6 do_upshortnote
		} def

		% dn256n
		/s {
			6 do_dnshortnote
		} def

		% com
		/t {
			do_com		%do a common time symbol
		} def

		% cut
		/u {
			do_com		%do a common time symbol
			lwid setlinewidth
			0 -900 moveto 0 900 lineto stroke
		} def

		% begped
		/v {
			lwid setlinewidth
			-200 600 moveto -200 0 lineto 200 0 lineto stroke
		} def

		% pedal
		/w {
			lwid setlinewidth
			-500 0 moveto -450 0 lineto 0 600 lineto
			450 0 lineto 500 0 lineto stroke
		} def

		% endped
		/x {
			lwid setlinewidth
			200 600 moveto 200 0 lineto -200 0 lineto stroke
		} def

		% dnbow
		/y {
			lwid setlinewidth
			-350 0 moveto -350 900 lineto stroke
			350 0 moveto 350 900 lineto stroke
			200 setlinewidth
			-350 800 moveto 350 800 lineto stroke
		} def

		% upbow
		/z {
			lwid setlinewidth
			-300 900 moveto 0 0 lineto 300 900 lineto stroke
		} def

		% wedge
		/one {
			0 0 moveto -150 500 lineto 150 500 lineto fill
		} def

		% uwedge
		/two {
			-150 0 moveto 150 0 lineto 0 500 lineto fill
		} def

		% ferm
		/three {
			newpath
			do_ferm		%do a right side up fermata
		} def

		% uferm
		/four {
			newpath
			gsave
			0 270 lwid sub 800 add translate %baseline at bottom
			180 rotate			%upside down
			do_ferm		%do a right side up fermata
			grestore
		} def

		% sign
		/five {
			gsave
			%do upper left curved part, upper right dot;
			%then rotate 180 to do other half
			0 1 1 {
				pop	%we don't need the loop variable
				0 100 moveto		%inner boundary
				-1000 300 -400 750 -200 700 curveto
				-200 800 lineto		%outer boundary
				-550 900 -1100 100 0 -100 curveto
				fill
				%dot at end of curve
				-200 700 100 0 360 arc fill
				%dot in upper right quadrant
				500 200 70 0 360 arc fill
				180 rotate
			} for
			grestore

			%slash through middle
			lwid setlinewidth
			-400 -800 moveto 400 800 lineto stroke
		} def

		% coda
		/six {
			newpath
			gsave
			0.6 1 scale
			0 0 550 0 360 arc	%outside boundary
			1 0.6 div 1 scale	%back to original
			0.9 1 scale
			0 0 650 0 360 arc	%inside boundary
			eofill
			grestore
			lwid setlinewidth
			0 -850 moveto 0 850 lineto stroke
			-800 0 moveto 800 0 lineto stroke
		} def

		% mor
		/seven {
			do_mor		%do a mordent
		} def

		% invmor
		/eight {
			do_mor		%do a mordent
			lwid setlinewidth
			0 -450 moveto 0 450 lineto stroke
		} def

		% turn
		/nine {
			do_turn		%do a turn
		} def

		% invturn
		/zero {
			gsave
			1 -1 scale	%reflect across X axis
			do_turn		%do a turn
			grestore
		} def

		% acc_gt
		/numbersign {
			lwid setlinewidth
			-500 300 moveto 500 0 lineto -500 -300 lineto stroke
		} def

		% acc_hat
		/dollar {
			newpath
			-365 0 moveto 0 860 lineto 365 0 lineto
			150 0 lineto -75 530 lineto -300 0 lineto fill
		} def

		% acc_uhat
		/quotedbl {
			newpath
			365 860 moveto 0 0 lineto -365 860 lineto
			-150 860 lineto 75 330 lineto 300 860 lineto fill
		} def

		% tr
		/asterisk {
			%vertical bar of t
			-350 1000 moveto -550 200 lineto
			-612.5 -50 -212.5 -50 -160 200 curveto
			-230 200 lineto
			-300 50 -420 50 -400 200 curveto
			-200 1000 lineto fill

			%crossbar of t and vertical bar of r
			-700 600 moveto -160 600 lineto
			20 600 30 520 60 440 curveto
			-50 0 lineto 70 0 lineto 180 440 lineto
			190 480 100 670 -150 670 curveto
			-690 670 lineto fill

			%horizontal curve of r
			100 480 moveto
			300 630 450 700 650 550 curveto
			560 480 lineto
			450 630 300 560 100 390 curveto
			fill

			%knob at end of r
			600 460 100 0 360 arc fill
		} def

		% leg
		/comma {
			100 setlinewidth
			-400 0 moveto 400 0 lineto stroke
		} def

		% rr
		/hyphen {
			100 setlinewidth
			-400 0 moveto 0 1000 lineto stroke
			0 0 moveto 400 1000 lineto stroke
		} def

		% measrpt
		/period {
			newpath -450 400 150 0 360 arc fill
			newpath 450 -400 150 0 360 arc fill
			200 setlinewidth
			-550 -600 moveto 550 600 lineto stroke
		} def

		% copyright
		/slash {
			lwid setlinewidth
			newpath 0 400 400 0 360 arc stroke
			newpath 0 400 200 45 315 arc stroke
		} def

		% dim
		/quoteleft {
			50 setlinewidth
			newpath 0 640 220 0 360 arc stroke
		} def

		% halfdim
		/quoteright {
			50 setlinewidth
			newpath 0 640 220 0 360 arc stroke
			newpath -340 300 moveto 340 980 lineto stroke
		} def

		% triangle
		/asciicircum {
			50 setlinewidth
			newpath -340 -10 moveto 0 710 lineto
			340 -10 lineto closepath stroke
		} def

		% qwhrest
		/ampersand {
			300 setlinewidth
			0 -600 moveto 0 600 lineto stroke
		} def

		% ll1rest
		/exclam {
			310 setlinewidth
			-400 455 moveto 400 450 lineto stroke
		} def

		% ll2rest
		/at {
			310 setlinewidth
			-400 145 moveto 400 150 lineto stroke
		} def
	end

	/BuildChar {

		exch begin
		Encoding exch get

		dup
		Mcbbox0 exch get
		aload pop setcachedevice

		CharStrings exch get
		exec
		end
	} def
end


% Define another music character font, since there are too many to fit in one
% font.  It works the same way as the first one.

/mfont1 100 dict def
mfont1 begin
	/FontType 3 def
	/FontMatrix [ .001 0 0 0.001 0 0 ] def
	/FontBBox [ -2000 -4030 2000 4030 ] def
	/FontName (Mfont1) def

	% set up Encoding vector with standard names
	/Encoding 256 array def
	StandardEncoding Encoding copy
	pop

	%%%%% define routines that will be used by multiple characters %%%%%

	/do_dwh_bars {
		% the two bars surrounding a double whole note
		lwid setlinewidth
		-420 -600 moveto -420 600 lineto stroke
		420 -600 moveto 420 600 lineto stroke
	} def
	/do_righttriangle {
		newpath
		420 270 moveto -420 270 lineto 350 -300 lineto 420 -300 lineto
		350 150 moveto -140 150 lineto 350 -213 lineto
		eofill
	} def
	/do_fillrighttriangle {
		newpath
		420 270 moveto -420 270 lineto 350 -300 lineto 420 -300 lineto
		fill
	} def
	/do_rectangle {
		newpath
		420 270 moveto -420 270 lineto -420 -270 lineto 420 -270 lineto
		350 150 moveto -350 150 lineto -350 -150 lineto 350 -150 lineto
		eofill
	} def
	/do_isostriangle {
		newpath
		0 300 moveto -420 -270 lineto 420 -270 lineto
		0 182 moveto -245 -150 lineto 245 -150 lineto
		eofill
	} def
	/do_piewedge {
		newpath
		0 -300 moveto 0 -244 514 35 145 arc
		0 -209 moveto 0 -244 394 43 137 arc
		eofill
	} def
	/do_semicircle {
		newpath
		gsave
		1 1.357 scale 420 199 moveto 0 199 420 180 360 arc
		1 1.09 scale 350 111 moveto 0 199 350 194.1 345.9 arc
		eofill
		grestore
	} def
	/do_slashhead {
		newpath
		lwid setlinewidth
		-620 -530 moveto -480 -670 lineto 620 530 lineto 480 670 lineto
		closepath stroke
	} def

	% subsidiary dictionary of character definitions
	/CharStrings 128 dict def
	CharStrings begin

		/.notdef {} def

		% Here are the definitions of the characters.  A stepsize here
		% is 300 units (assuming the character is drawn at its default
		% size).

		% dwhrighttriangle
		/A {
			do_righttriangle
			do_dwh_bars
		} def

		% righttriangle
		/B {
			do_righttriangle
		} def

		% fillrighttriangle
		/C {
			newpath
			420 270 moveto -420 270 lineto 350 -300 lineto
			420 -300 lineto
			fill
		} def

		% udwhrighttriangle
		/D {
			gsave
			180 rotate
			do_righttriangle
			do_dwh_bars
			grestore
		} def

		% urighttriangle
		/E {
			gsave
			180 rotate
			do_righttriangle
			grestore
		} def

		% ufillrighttriangle
		/F {
			gsave
			180 rotate
			do_fillrighttriangle
			grestore
		} def

		% dwhrectangle
		/G {
			do_rectangle
			do_dwh_bars
		} def

		% rectangle
		/H {
			do_rectangle
		} def

		% fillrectangle
		/I {
			newpath
			420 270 moveto -420 270 lineto -420 -270 lineto
			420 -270 lineto
			fill
		} def

		% dwhisostriangle
		/J {
			do_isostriangle
			do_dwh_bars
		} def

		% isostriangle
		/K {
			do_isostriangle
		} def

		% fillisostriangle
		/L {
			newpath
			0 300 moveto -420 -270 lineto 420 -270 lineto
			fill
		} def

		% dwhpiewedge
		/M {
			do_piewedge
			do_dwh_bars
		} def

		% piewedge
		/N {
			do_piewedge
		} def

		% fillpiewedge
		/O {
			newpath
			0 -300 moveto 0 -244 514 35 145 arc
			fill
		} def

		% dwhsemicircle
		/P {
			do_semicircle
			do_dwh_bars
		} def

		% semicircle
		/Q {
			do_semicircle
		} def

		% fillsemicircle
		/R {
			newpath
			gsave
			1 570 420 div scale
			420 199 moveto 0 199 420 180 360 arc
			fill
			grestore
		} def

		% dwhslashhead
		/S {
			do_slashhead
			lwid setlinewidth
			-650 -600 moveto -650 600 lineto stroke
			650 -600 moveto 650 600 lineto stroke
		} def

		% slashhead
		/T {
			do_slashhead
		} def

		% fillslashhead
		/U {
			newpath
			200 setlinewidth
			-550 -600 moveto 550 600 lineto stroke
		} def

		% blankhead
		/V {
			%print nothing
		} def
	end

	/BuildChar {

		exch begin
		Encoding exch get

		dup
		Mcbbox1 exch get
		aload pop setcachedevice

		CharStrings exch get
		exec
		end
	} def
end


% General routines for printing any music character, invoked by each music
% character's specific routine below.  The scaling factor (default 1) needs
% to be multiplied by 10 to get the actual size.  These routines restore the
% preexisting current font when they are done.

/printmchar0 {
	gsave
	/musicchar exch def
	/Mfont0 findfont exch 10 mul scalefont setfont moveto 
	musicchar show
	grestore
} def
/printmchar1 {
	gsave
	/musicchar exch def
	/Mfont1 findfont exch 10 mul scalefont setfont moveto 
	musicchar show
	grestore
} def

% Define each music character name to be a routine that prints the character.
% Each character is to be invoked as in this example:
%	100 200 1 gclef		% at (100, 200), scale to default size & print

/gclef			{ (A) printmchar0 } def
/fclef			{ (B) printmchar0 } def
/cclef			{ (C) printmchar0 } def
/dblwhole		{ (D) printmchar0 } def
/1n			{ (E) printmchar0 } def
/2n			{ (F) printmchar0 } def
/4n			{ (G) printmchar0 } def
/upflag			{ (H) printmchar0 } def
/dnflag			{ (I) printmchar0 } def
/dwhrest		{ (J) printmchar0 } def
/1rest			{ (K) printmchar0 } def
/2rest			{ (L) printmchar0 } def
/4rest			{ (M) printmchar0 } def
/8rest			{ (N) printmchar0 } def
/16rest			{ (O) printmchar0 } def
/32rest			{ (P) printmchar0 } def
/64rest			{ (Q) printmchar0 } def
/128rest		{ (R) printmchar0 } def
/256rest		{ (S) printmchar0 } def
/dot			{ (T) printmchar0 } def
/nat			{ (U) printmchar0 } def
/sharp			{ (V) printmchar0 } def
/flat			{ (W) printmchar0 } def
/dblsharp		{ (X) printmchar0 } def
/dblflat		{ (Y) printmchar0 } def
/xnote			{ (Z) printmchar0 } def
/dwhdiamond		{ (a) printmchar0 } def
/diamond		{ (b) printmchar0 } def
/filldiamond		{ (c) printmchar0 } def
/up2n			{ (d) printmchar0 } def
/dn2n			{ (e) printmchar0 } def
/up4n			{ (f) printmchar0 } def
/dn4n			{ (g) printmchar0 } def
/up8n			{ (h) printmchar0 } def
/dn8n			{ (i) printmchar0 } def
/up16n			{ (j) printmchar0 } def
/dn16n			{ (k) printmchar0 } def
/up32n			{ (l) printmchar0 } def
/dn32n			{ (m) printmchar0 } def
/up64n			{ (n) printmchar0 } def
/dn64n			{ (o) printmchar0 } def
/up128n			{ (p) printmchar0 } def
/dn128n			{ (q) printmchar0 } def
/up256n			{ (r) printmchar0 } def
/dn256n			{ (s) printmchar0 } def
/com			{ (t) printmchar0 } def
/cut			{ (u) printmchar0 } def
/begped			{ (v) printmchar0 } def
/pedal			{ (w) printmchar0 } def
/endped			{ (x) printmchar0 } def
/dnbow			{ (y) printmchar0 } def
/upbow			{ (z) printmchar0 } def
/wedge			{ (1) printmchar0 } def
/uwedge			{ (2) printmchar0 } def
/ferm			{ (3) printmchar0 } def
/uferm			{ (4) printmchar0 } def
/sign			{ (5) printmchar0 } def
/coda			{ (6) printmchar0 } def
/mor			{ (7) printmchar0 } def
/invmor			{ (8) printmchar0 } def
/turn			{ (9) printmchar0 } def
/invturn		{ (0) printmchar0 } def
/acc_gt			{ (#) printmchar0 } def
/acc_hat		{ ($) printmchar0 } def
/acc_uhat		{ (") printmchar0 } def
/tr			{ (*) printmchar0 } def
/leg			{ (,) printmchar0 } def
/rr			{ (-) printmchar0 } def
/measrpt		{ (.) printmchar0 } def
/copyright		{ (/) printmchar0 } def
/dim			{ (`) printmchar0 } def
/halfdim		{ (') printmchar0 } def
/triangle		{ (^) printmchar0 } def
/qwhrest		{ (&) printmchar0 } def
/ll1rest		{ (!) printmchar0 } def
/ll2rest		{ (@) printmchar0 } def
/dwhrighttriangle	{ (A) printmchar1 } def
/righttriangle		{ (B) printmchar1 } def
/fillrighttriangle	{ (C) printmchar1 } def
/udwhrighttriangle	{ (D) printmchar1 } def
/urighttriangle		{ (E) printmchar1 } def
/ufillrighttriangle	{ (F) printmchar1 } def
/dwhrectangle		{ (G) printmchar1 } def
/rectangle		{ (H) printmchar1 } def
/fillrectangle		{ (I) printmchar1 } def
/dwhisostriangle	{ (J) printmchar1 } def
/isostriangle		{ (K) printmchar1 } def
/fillisostriangle	{ (L) printmchar1 } def
/dwhpiewedge		{ (M) printmchar1 } def
/piewedge		{ (N) printmchar1 } def
/fillpiewedge		{ (O) printmchar1 } def
/dwhsemicircle		{ (P) printmchar1 } def
/semicircle		{ (Q) printmchar1 } def
/fillsemicircle		{ (R) printmchar1 } def
/dwhslashhead		{ (S) printmchar1 } def
/slashhead		{ (T) printmchar1 } def
/fillslashhead		{ (U) printmchar1 } def
/blankhead		{ (V) printmchar1 } def


% Define routines for Mup output other than music characters.

/stepsize 3 def	   % define a step size as 3 points (at default magnification)

% x1 y1 x2 lines dist staffscale staff
%		draw a staff starting at x1, y1 and extending to x2 with "lines"
%		lines, 2*dist*stepsize apart, scaled by staffscale
/staff {
	/staffscale exch def
	/dist exch def
	/lines exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	0.7 staffscale mul setlinewidth
	1 lines sub  2  lines 1 sub {	% loop from bottom line to top line
		dup stepsize mul staffscale mul dist mul y1 add x1 exch moveto
		stepsize mul staffscale mul dist mul y1 add x2 exch lineto stroke
	} for
} def

% x y1 y2 bracket	draw a bracket; y1 is the top
/bracket {
	/y2 exch def
	/y1 exch def
	/x exch def
	gsave
	3 setlinewidth
	x 2 sub y1 1 add moveto
	x 2 sub y2 1 sub lineto
	stroke
	x 2 sub y1 1 add moveto
	x 1 sub y1 1 add   x 3 add y1 1 add   x 5 add y1 6 add   curveto
	x 6 add y1 5 add lineto
	x 5 add y1 2 add   x 1 add y1 2 sub   x 2 sub y1 2 sub   curveto
	fill
	x 2 sub y2 1 sub moveto
	x 1 sub y2 1 sub   x 3 add y2 1 sub   x 5 add y2 6 sub   curveto
	x 6 add y2 5 sub lineto
	x 5 add y2 2 sub   x 1 add y2 2 add   x 2 sub y2 2 add   curveto
	fill
	grestore
} def

% x y1 y2 right repeatbracket	draw a bracket for a repeat; y1 is the top,
%				right==1 means facing to the right
/repeatbracket {
	/right exch def
	/y2 exch def
	/y1 exch def
	/x exch def
	gsave
	right 0 eq {
		x y1 y2 add 2 div translate
		180 rotate
		0 x sub 0 y1 y2 add 2 div sub translate
	} if
	x 4.5 sub y1 1 add moveto
	x 0 sub y1 1 add   x 2 add y1 1 add   x 6 add y1 5 add   curveto
	x 6 add y1 4 add lineto
	x 6 add y1 2 add   x 1 add y1 2 sub   x 4.5 sub y1 1.5 sub   curveto
	fill
	x 4.5 sub y2 1 sub moveto
	x 0 sub y2 1 sub   x 2 add y2 1 sub   x 6 add y2 5 sub   curveto
	x 6 add y2 4 sub lineto
	x 6 add y2 2 sub   x 1 add y2 2 add   x 4.5 sub y2 1.5 add   curveto
	fill
	grestore
} def

% x y1 y2 brace		draw a brace; y1 is the top
/brace {
	/y2 exch def
	/y1 exch def
	/x exch def
	gsave
	x 6 sub y1 y2 add 2 div translate
	/topy y1 y2 sub 2 div 1 sub def
	0.667 1 scale
	0 1 1 {
		pop
		%0 topy moveto 0 0 lineto stroke
		0 0 moveto
		16 topy 0.2 mul   -11 topy 0.6 mul   8 topy   curveto
		8.7 topy lineto
		-7 topy 0.7 mul   20 topy 0.3 mul   1 0   curveto
		fill
		1 -1 scale	% flip to do bottom half
	} for
	grestore
} def

% endx endy wavy staffscale	draw a wavy line from current point to here,
%				scaled by staffscale
/wavy {
	/staffscale exch def
	/endy exch def		% define the end point of the line
	/endx exch def
	currentpoint		% line starts at current point
	/begy exch def		% define the beginning point of the line
	/begx exch def
	gsave
	/dx endx begx sub def	% find delta x and delta y
	/dy endy begy sub def
	/r dx dx mul dy dy mul add sqrt def	% hypotenuse
	/theta dy dx atan def			% angle with positive x axis
	begx begy translate	% change axes so that we can draw the line
	theta rotate		%   from (0, 0) to (r, 0)
	staffscale staffscale scale	% scale everything by staffscale
	/scaledr r staffscale div def	% but scale r in reverse to keep length

	% Each outer loop draws one cycle of the squiggle.  It continues until
	% we are at or beyond the desired end point.
	0 0 moveto
	0 6 scaledr {
		gsave
		% first loop draws left half of squiggle; second draws right
		0 1 1 {
			0.0 0.4 moveto
			2.0 1.9 3.4 2.3 3.9 0.0 curveto
			2.1 0.0 lineto
			1.9 0.8 1.4 0.7 0.0 -0.4 curveto
			fill
			pop 180 rotate -6 0 translate
		} for
		grestore

		pop 6 0 translate	% shift axes right one squiggle
	} for

	grestore
} def

% x y space frets fretno numvert curvel curver [ f1 f2 f3 ... ] grid
%				print a guitar grid diagram
/grid {
	/grid_positions exch def % 0="o", -1="x", -2=nothing, positive=dot
	/curver exch def	% right string for curve, 0 if none
	/curvel exch def	% left string for curve, 0 if none
	/numvert exch def	% vertical position to print fretno, 0 if none
	/fretno exch def	% fret no. to print at right, 0 if none
	/frets exch def		% number of fret lines
	/space exch def		% points between two neighboring lines
	/y exch def		% y coord of top fret line
	/x exch def		% x coord of left strings

	gsave
	/strings grid_positions length def	% number of strings
	/lmarky 0.4 space mul y add def		% lowest Y of a "o" or "x"
	space 10 div setlinewidth
	2 setlinecap

	% draw the lines of the grid
	0  1  strings 1 sub {	% loop from left string to right string
		dup space mul x add y moveto
		space mul x add frets 1 sub space mul y exch sub lineto stroke
	} for
	0  -1  1 frets sub {	% loop from top fret (nut) to bottom fret
		dup space mul y add x exch moveto
		space mul y add strings 1 sub space mul x add exch lineto stroke
	} for

	% draw the curved line if there is one
	curvel 0 gt {
		% within strings curvel to curver, find smallest positive fret
		/minfret 1000 def
		curvel 1 curver {
			/strno exch def
			/grid_p grid_positions strno 1 sub get def
			grid_p 0 gt grid_p minfret lt and {
				/minfret grid_p def
			} if
		} for

		% if curve goes above top fret, other marks must be higher
		minfret 1 eq {
			/hmarky 1.2 space mul y add def
		} {
			/hmarky lmarky def
		} ifelse

		/strdiff curver curvel sub def
		space 8 div setlinewidth

		% set endpoint coords of curve; higher if curve is short
		/curvex1 curvel 1 sub space mul x add def
		/curvex2 curver 1 sub space mul x add def
		/curvey 1 minfret sub space mul y add def
		strdiff 3 lt {
			/curvey 0.2 strdiff div space mul curvey add def
		} if

		% move to left end, set other points, draw curve
		curvex1 curvey moveto

		curvex1 curvex2 curvex1 sub 3 div add
		curvey space 0.4 strdiff sqrt mul mul add

		curvex2 curvex2 curvex1 sub 3 div sub
		curvey space 0.4 strdiff sqrt mul mul add

		curvex2 curvey curveto stroke
	} if

	space 10 div setlinewidth

	% draw dots and x and o marks
	0  1  strings 1 sub {	% loop from left string to right string
		/strno exch def	% first string is 0
		/grid_p grid_positions strno get def
		/strx strno space mul x add def

		% set Y of mark higher if curved line covers this string
		strno 1 add curvel ge  strno 1 add curver le  and {
			/marky hmarky def
		} {
			/marky lmarky def
		} ifelse

		grid_p -1 eq {		% draw an X above the string
			/xhwid space 3 div def
			strx xhwid sub marky xhwid sub moveto
			strx xhwid add marky xhwid add lineto stroke
			strx xhwid sub marky xhwid add moveto
			strx xhwid add marky xhwid sub lineto stroke
		} if
		grid_p 0 eq {		% draw a circle above the string
			strx marky space 0.3 mul 0 360 arc stroke
		} if
		grid_p 1 ge {		% draw a dot by the proper fret
			strx y grid_p space mul sub space 3 div add
			space 3 div 0 360 arc fill
		} if
	} for

	% print "X fr" if requested
	fretno 0 gt {
		/Palatino-Roman findfont space 1.9 mul scalefont setfont
		x strings 0.5 sub space mul add
		y space numvert 0.3 add mul sub moveto
		fretno 2 string cvs show ( fr) show
	} if
	grestore
} def

% x1 y1 x2 y2 whitebox		draw a white rectangle with opposite
%				corners of (x1,y1) and (x2,y2)
/whitebox {
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	1.0 setgray
	newpath
	x1 y1 moveto
	x1 y2 lineto
	x2 y2 lineto
	x2 y1 lineto
	closepath
	fill
	stroke
	0.0 setgray
} def


/LineNum 0 def
/InputFile (unknown) def

% n linenum
/linenum {
	/LineNum exch def
} def

% (inputfilename) inputfile
/inputfile {
	/InputFile exch def
} def

% find size of Encoding and make a dictionary
% that size for bounding box information
mfont0 begin
/dictsize Encoding length def
mfont0 /Mcbbox0 dictsize dict put

% temporarily redefine printmchar0 to get code
5 dict begin
/printmchar0 { {} forall } def

Mcbbox0 Encoding gclef get [ 1790.0 0 -915.0 -1605.0 865.0 3015.0 ] put
Mcbbox0 Encoding fclef get [ 1840.0 0 -1015.0 -1705.0 815.0 655.0 ] put
Mcbbox0 Encoding cclef get [ 1540.0 0 -765.0 -1245.0 765.0 1255.0 ] put
Mcbbox0 Encoding dblwhole get [ 1090.0 0 -535.0 -605.0 545.0 615.0 ] put
Mcbbox0 Encoding 1n get [ 1080.0 0 -535.0 -335.0 535.0 345.0 ] put
Mcbbox0 Encoding 2n get [ 880.0 0 -435.0 -345.0 435.0 355.0 ] put
Mcbbox0 Encoding 4n get [ 840.0 0 -415.0 -335.0 415.0 345.0 ] put
Mcbbox0 Encoding upflag get [ 640.0 0 -335.0 -5.0 295.0 1715.0 ] put
Mcbbox0 Encoding dnflag get [ 640.0 0 -335.0 -1705.0 295.0 15.0 ] put
Mcbbox0 Encoding qwhrest get [ 340.0 0 -165.0 -605.0 165.0 615.0 ] put
Mcbbox0 Encoding dwhrest get [ 340.0 0 -165.0 -5.0 165.0 615.0 ] put
Mcbbox0 Encoding 1rest get [ 1540.0 0 -765.0 -15.0 765.0 645.0 ] put
Mcbbox0 Encoding 2rest get [ 1540.0 0 -765.0 -45.0 765.0 315.0 ] put
Mcbbox0 Encoding 4rest get [ 650.0 0 -345.0 -885.0 295.0 995.0 ] put
Mcbbox0 Encoding 8rest get [ 750.0 0 -305.0 -625.0 435.0 485.0 ] put
Mcbbox0 Encoding 16rest get [ 830.0 0 -415.0 -1215.0 405.0 485.0 ] put
Mcbbox0 Encoding 32rest get [ 940.0 0 -415.0 -1215.0 515.0 1085.0 ] put
Mcbbox0 Encoding 64rest get [ 1040.0 0 -515.0 -1515.0 515.0 1085.0 ] put
Mcbbox0 Encoding 128rest get [ 1140.0 0 -515.0 -1515.0 615.0 1685.0 ] put
Mcbbox0 Encoding 256rest get [ 1250.0 0 -625.0 -2115.0 615.0 1685.0 ] put
Mcbbox0 Encoding ll1rest get [ 840.0 0 -415.0 -15.0 415.0 625.0 ] put
Mcbbox0 Encoding ll2rest get [ 840.0 0 -415.0 -15.0 415.0 325.0 ] put
Mcbbox0 Encoding dot get [ 280.0 0 -135.0 -125.0 135.0 135.0 ] put
Mcbbox0 Encoding nat get [ 520.0 0 -255.0 -855.0 255.0 865.0 ] put
Mcbbox0 Encoding sharp get [ 700.0 0 -345.0 -935.0 345.0 945.0 ] put
Mcbbox0 Encoding flat get [ 580.0 0 -295.0 -405.0 275.0 1115.0 ] put
Mcbbox0 Encoding dblsharp get [ 720.0 0 -355.0 -345.0 355.0 355.0 ] put
Mcbbox0 Encoding dblflat get [ 1160.0 0 -585.0 -405.0 565.0 1115.0 ] put
Mcbbox0 Encoding xnote get [ 880.0 0 -435.0 -365.0 435.0 375.0 ] put
Mcbbox0 Encoding dwhdiamond get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox0 Encoding diamond get [ 880.0 0 -435.0 -305.0 435.0 315.0 ] put
Mcbbox0 Encoding filldiamond get [ 880.0 0 -435.0 -305.0 435.0 315.0 ] put
Mcbbox0 Encoding up2n get [ 880.0 0 -435.0 -345.0 435.0 2115.0 ] put
Mcbbox0 Encoding dn2n get [ 880.0 0 -435.0 -2105.0 435.0 355.0 ] put
Mcbbox0 Encoding up4n get [ 850.0 0 -415.0 -335.0 425.0 2115.0 ] put
Mcbbox0 Encoding dn4n get [ 840.0 0 -415.0 -2105.0 415.0 345.0 ] put
Mcbbox0 Encoding com get [ 1110.0 0 -585.0 -645.0 515.0 655.0 ] put
Mcbbox0 Encoding cut get [ 1110.0 0 -585.0 -905.0 515.0 915.0 ] put
Mcbbox0 Encoding begped get [ 470.0 0 -245.0 -45.0 215.0 615.0 ] put
Mcbbox0 Encoding pedal get [ 1040.0 0 -515.0 -45.0 515.0 675.0 ] put
Mcbbox0 Encoding endped get [ 480.0 0 -215.0 -45.0 255.0 615.0 ] put
Mcbbox0 Encoding dnbow get [ 810.0 0 -395.0 -5.0 405.0 915.0 ] put
Mcbbox0 Encoding upbow get [ 720.0 0 -355.0 -115.0 355.0 925.0 ] put
Mcbbox0 Encoding wedge get [ 340.0 0 -165.0 -5.0 165.0 515.0 ] put
Mcbbox0 Encoding uwedge get [ 340.0 0 -165.0 -5.0 165.0 515.0 ] put
Mcbbox0 Encoding ferm get [ 1640.0 0 -815.0 -5.0 815.0 1015.0 ] put
Mcbbox0 Encoding uferm get [ 1640.0 0 -815.0 -5.0 815.0 1015.0 ] put
Mcbbox0 Encoding sign get [ 1340.0 0 -665.0 -825.0 665.0 835.0 ] put
Mcbbox0 Encoding coda get [ 1640.0 0 -815.0 -855.0 815.0 865.0 ] put
Mcbbox0 Encoding mor get [ 1320.0 0 -655.0 -285.0 655.0 295.0 ] put
Mcbbox0 Encoding invmor get [ 1320.0 0 -655.0 -455.0 655.0 465.0 ] put
Mcbbox0 Encoding turn get [ 1300.0 0 -645.0 -335.0 645.0 345.0 ] put
Mcbbox0 Encoding invturn get [ 1300.0 0 -645.0 -335.0 645.0 345.0 ] put
Mcbbox0 Encoding acc_gt get [ 1170.0 0 -525.0 -345.0 635.0 355.0 ] put
Mcbbox0 Encoding acc_hat get [ 780.0 0 -385.0 -5.0 385.0 875.0 ] put
Mcbbox0 Encoding acc_uhat get [ 780.0 0 -385.0 -5.0 385.0 875.0 ] put
Mcbbox0 Encoding tr get [ 1440.0 0 -715.0 -5.0 715.0 1015.0 ] put
Mcbbox0 Encoding leg get [ 840.0 0 -415.0 -55.0 415.0 65.0 ] put
Mcbbox0 Encoding rr get [ 940.0 0 -465.0 -25.0 465.0 1035.0 ] put
Mcbbox0 Encoding dim get [ 540.0 0 -265.0 -15.0 265.0 905.0 ] put
Mcbbox0 Encoding halfdim get [ 760.0 0 -375.0 -15.0 375.0 1015.0 ] put
Mcbbox0 Encoding triangle get [ 800.0 0 -395.0 -45.0 395.0 785.0 ] put
Mcbbox0 Encoding measrpt get [ 1300.0 0 -645.0 -675.0 645.0 685.0 ] put
Mcbbox0 Encoding copyright get [ 920.0 0 -455.0 -45.0 455.0 855.0 ] put
Mcbbox0 Encoding up8n get [ 1390.0 0 -745.0 -335.0 635.0 2115.0 ] put
Mcbbox0 Encoding dn8n get [ 840.0 0 -415.0 -2105.0 415.0 345.0 ] put
Mcbbox0 Encoding up16n get [ 1390.0 0 -745.0 -335.0 635.0 2115.0 ] put
Mcbbox0 Encoding dn16n get [ 840.0 0 -415.0 -2105.0 415.0 345.0 ] put
Mcbbox0 Encoding up32n get [ 1390.0 0 -745.0 -335.0 635.0 2595.0 ] put
Mcbbox0 Encoding dn32n get [ 840.0 0 -415.0 -2585.0 415.0 345.0 ] put
Mcbbox0 Encoding up64n get [ 1390.0 0 -745.0 -335.0 635.0 3075.0 ] put
Mcbbox0 Encoding dn64n get [ 840.0 0 -415.0 -3065.0 415.0 345.0 ] put
Mcbbox0 Encoding up128n get [ 1390.0 0 -745.0 -335.0 635.0 3555.0 ] put
Mcbbox0 Encoding dn128n get [ 840.0 0 -415.0 -3545.0 415.0 345.0 ] put
Mcbbox0 Encoding up256n get [ 1390.0 0 -745.0 -335.0 635.0 3975.0 ] put
Mcbbox0 Encoding dn256n get [ 840.0 0 -415.0 -3965.0 415.0 345.0 ] put

end
end

/Mfont0 mfont0 definefont


% find size of Encoding and make a dictionary
% that size for bounding box information
mfont1 begin
/dictsize Encoding length def
mfont1 /Mcbbox1 dictsize dict put

% temporarily redefine printmchar1 to get code
5 dict begin
/printmchar1 { {} forall } def

Mcbbox1 Encoding dwhrighttriangle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding righttriangle get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding fillrighttriangle get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding udwhrighttriangle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding urighttriangle get [ 880.0 0 -435.0 -275.0 435.0 315.0 ] put
Mcbbox1 Encoding ufillrighttriangle get [ 880.0 0 -435.0 -275.0 435.0 315.0 ] put
Mcbbox1 Encoding dwhrectangle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding rectangle get [ 880.0 0 -435.0 -275.0 435.0 285.0 ] put
Mcbbox1 Encoding fillrectangle get [ 880.0 0 -435.0 -275.0 435.0 285.0 ] put
Mcbbox1 Encoding dwhisostriangle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding isostriangle get [ 880.0 0 -435.0 -275.0 435.0 315.0 ] put
Mcbbox1 Encoding fillisostriangle get [ 880.0 0 -435.0 -275.0 435.0 315.0 ] put
Mcbbox1 Encoding dwhpiewedge get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding piewedge get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding fillpiewedge get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding dwhsemicircle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding semicircle get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding fillsemicircle get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding dwhslashhead get [ 1410.0 0 -695.0 -725.0 705.0 735.0 ] put
Mcbbox1 Encoding slashhead get [ 1380.0 0 -685.0 -725.0 685.0 735.0 ] put
Mcbbox1 Encoding fillslashhead get [ 1300.0 0 -645.0 -675.0 645.0 685.0 ] put
Mcbbox1 Encoding blankhead get [ 880.0 0 -435.0 -275.0 435.0 285.0 ] put

end
end

/Mfont1 mfont1 definefont

/flagsep 1.60 300 mul def	 % 1.60 stepsizes
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] >> setpagedevice
%%EndFeature
%%EndProlog
%%Page: 1 1
save
0.750000 0.750000 scale
%  S_SSV
(kaleidakustikon_12.mup) inputfile
7 linenum
%  S_SSV
15 linenum
%  S_SSV
18 linenum
%  S_SSV
21 linenum
%  S_FEED
27 linenum
88.79 953.81 768.00 5 1.000000 1.000000 staff
88.79 888.68 768.00 5 1.000000 1.000000 staff
87.79 965.81 876.68 brace
0.70 setlinewidth
88.79 965.81 moveto
88.79 876.68 lineto stroke
%  S_CLEFSIG
27 linenum
100.58 947.81 1.000000 gclef
100.83 894.68 1.000000 fclef
116.62 953.81 1.000000 flat
116.62 882.68 1.000000 flat
/NewCenturySchlbk-Bold findfont
16 scalefont
setfont
122.36 953.81 moveto
(3) show
/NewCenturySchlbk-Bold findfont
16 scalefont
setfont
122.36 941.89 moveto
(4) show
/NewCenturySchlbk-Bold findfont
16 scalefont
setfont
122.36 888.68 moveto
(3) show
/NewCenturySchlbk-Bold findfont
16 scalefont
setfont
122.36 876.76 moveto
(4) show
%  S_CHHEAD
27 linenum
%  S_STAFF
% staff 1
save
145.61 971.81 1.000000 4n
139.38 971.81 moveto
151.84 971.81 lineto stroke
141.93 971.06 moveto
141.93 951.19 lineto stroke
156.14 962.81 1.000000 4n
152.46 962.06 moveto
152.46 947.36 lineto stroke
newpath
141.58 952.69 moveto
152.81 948.86 lineto
152.81 945.86 lineto
141.58 949.69 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
145.61 888.68 1.000000 4rest
restore
%  S_BAR
29 linenum
0.70 setlinewidth
167.01 965.81 moveto
167.01 941.81 lineto stroke
167.01 900.68 moveto
167.01 876.68 lineto stroke
%  S_CHHEAD
32 linenum
%  S_STAFF
% staff 1
save
175.55 956.81 1.000000 4n
171.86 956.06 moveto
171.86 939.25 lineto stroke
185.61 965.81 1.000000 4n
181.93 965.06 moveto
181.93 939.25 lineto stroke
195.67 971.81 1.000000 4n
189.44 971.81 moveto
201.91 971.81 lineto stroke
191.99 971.06 moveto
191.99 939.25 lineto stroke
205.74 965.81 1.000000 4n
202.06 965.06 moveto
202.06 939.25 lineto stroke
215.80 956.81 1.000000 4n
212.12 956.06 moveto
212.12 939.25 lineto stroke
226.33 965.81 1.000000 4n
222.65 965.06 moveto
222.65 939.25 lineto stroke
newpath
171.51 940.75 moveto
223.00 940.75 lineto
223.00 937.75 lineto
171.51 937.75 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
175.55 873.68 1.000000 4n
0.70 setlinewidth
179.23 874.43 moveto
179.23 894.68 lineto stroke
195.67 906.68 1.000000 4n
189.44 906.68 moveto
201.91 906.68 lineto stroke
195.67 900.68 1.000000 4n
195.67 894.68 1.000000 4n
191.99 905.93 moveto
191.99 873.68 lineto stroke
215.80 906.68 1.000000 4n
209.57 906.68 moveto
222.03 906.68 lineto stroke
215.80 900.68 1.000000 4n
215.80 894.68 1.000000 4n
212.12 905.93 moveto
212.12 873.68 lineto stroke
restore
%  S_BAR
34 linenum
0.70 setlinewidth
237.20 965.81 moveto
237.20 941.81 lineto stroke
237.20 900.68 moveto
237.20 876.68 lineto stroke
%  S_CHHEAD
38 linenum
%  S_STAFF
% staff 1
save
246.33 971.81 1.000000 4n
255.60 974.81 1.000000 dot
240.10 971.81 moveto
252.56 971.81 lineto stroke
242.65 971.06 moveto
242.65 950.81 lineto stroke
268.38 971.81 1.000000 4n
262.15 971.81 moveto
274.61 971.81 lineto stroke
264.70 971.06 moveto
264.70 952.17 lineto stroke
278.45 968.81 1.000000 4n
274.76 968.06 moveto
274.76 950.15 lineto stroke
288.98 965.81 1.000000 4n
285.30 965.06 moveto
285.30 948.03 lineto stroke
newpath
264.35 953.67 moveto
285.65 949.53 lineto
285.65 946.53 lineto
264.35 950.67 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
246.33 873.68 1.000000 4n
0.70 setlinewidth
250.01 874.43 moveto
250.01 894.68 lineto stroke
259.38 906.68 1.000000 4n
253.15 906.68 moveto
265.61 906.68 lineto stroke
259.38 900.68 1.000000 4n
259.38 894.68 1.000000 4n
255.70 905.93 moveto
255.70 873.68 lineto stroke
278.45 906.68 1.000000 4n
272.21 906.68 moveto
284.68 906.68 lineto stroke
278.45 900.68 1.000000 4n
278.45 894.68 1.000000 4n
274.76 905.93 moveto
274.76 873.68 lineto stroke
restore
%  S_BAR
40 linenum
0.70 setlinewidth
299.85 965.81 moveto
299.85 941.81 lineto stroke
299.85 900.68 moveto
299.85 876.68 lineto stroke
%  S_CHHEAD
44 linenum
%  S_STAFF
% staff 1
save
317.02 959.81 1.000000 4n
307.67 959.81 1.000000 sharp
313.34 959.06 moveto
313.34 940.48 lineto stroke
327.08 962.81 1.000000 4n
323.40 962.06 moveto
323.40 940.48 lineto stroke
337.15 974.81 1.000000 4n
330.92 971.81 moveto
343.38 971.81 lineto stroke
333.47 974.06 moveto
333.47 940.48 lineto stroke
347.21 968.81 1.000000 4n
343.53 968.06 moveto
343.53 940.48 lineto stroke
357.28 962.81 1.000000 4n
353.59 962.06 moveto
353.59 940.48 lineto stroke
367.81 956.81 1.000000 4n
364.13 956.06 moveto
364.13 940.48 lineto stroke
newpath
312.99 941.98 moveto
364.48 941.98 lineto
364.48 938.98 lineto
312.99 938.98 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
317.02 885.68 1.000000 4n
0.70 setlinewidth
320.70 886.43 moveto
320.70 906.68 lineto stroke
337.15 906.68 1.000000 4n
330.92 906.68 moveto
343.38 906.68 lineto stroke
329.78 903.68 1.000000 4n
337.15 897.68 1.000000 4n
333.47 905.93 moveto
333.47 876.68 lineto stroke
357.28 906.68 1.000000 4n
351.04 906.68 moveto
363.51 906.68 lineto stroke
349.91 903.68 1.000000 4n
357.28 897.68 1.000000 4n
353.59 905.93 moveto
353.59 876.68 lineto stroke
restore
%  S_BAR
46 linenum
0.70 setlinewidth
378.68 965.81 moveto
378.68 941.81 lineto stroke
378.68 900.68 moveto
378.68 876.68 lineto stroke
%  S_CHHEAD
50 linenum
%  S_STAFF
% staff 1
save
394.05 953.81 1.000000 4n
385.60 953.81 1.000000 nat
390.37 953.06 moveto
390.37 936.80 lineto stroke
404.11 956.81 1.000000 4n
400.43 956.06 moveto
400.43 936.80 lineto stroke
414.18 959.81 1.000000 4n
410.50 959.06 moveto
410.50 936.80 lineto stroke
424.24 956.81 1.000000 4n
420.56 956.06 moveto
420.56 936.80 lineto stroke
441.79 953.81 1.000000 4n
433.02 953.81 1.000000 flat
438.11 953.06 moveto
438.11 936.80 lineto stroke
452.33 956.81 1.000000 4n
448.64 956.06 moveto
448.64 936.80 lineto stroke
newpath
390.02 938.30 moveto
448.99 938.30 lineto
448.99 935.30 lineto
390.02 935.30 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
394.05 885.68 1.000000 4n
0.70 setlinewidth
397.73 886.43 moveto
397.73 906.68 lineto stroke
414.18 906.68 1.000000 4n
407.95 906.68 moveto
420.41 906.68 lineto stroke
414.18 897.68 1.000000 4n
414.18 891.68 1.000000 4n
410.50 905.93 moveto
410.50 870.68 lineto stroke
441.79 906.68 1.000000 4n
435.56 906.68 moveto
448.03 906.68 lineto stroke
441.79 897.68 1.000000 4n
441.79 891.68 1.000000 4n
438.11 905.93 moveto
438.11 870.68 lineto stroke
restore
%  S_BAR
52 linenum
0.70 setlinewidth
463.20 965.81 moveto
463.20 941.81 lineto stroke
463.20 900.68 moveto
463.20 876.68 lineto stroke
%  S_CHHEAD
56 linenum
%  S_STAFF
% staff 1
save
471.73 950.81 1.000000 4n
468.05 950.06 moveto
468.05 934.31 lineto stroke
490.43 968.81 1.000000 4n
481.08 968.81 1.000000 sharp
486.75 968.06 moveto
486.75 934.31 lineto stroke
500.50 971.81 1.000000 4n
494.26 971.81 moveto
506.73 971.81 lineto stroke
496.81 971.06 moveto
496.81 934.31 lineto stroke
510.56 965.81 1.000000 4n
506.88 965.06 moveto
506.88 934.31 lineto stroke
520.62 956.81 1.000000 4n
516.94 956.06 moveto
516.94 934.31 lineto stroke
531.16 950.81 1.000000 4n
527.47 950.06 moveto
527.47 934.31 lineto stroke
newpath
467.70 935.81 moveto
527.82 935.81 lineto
527.82 932.81 lineto
467.70 932.81 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
471.73 873.68 1.000000 4n
0.70 setlinewidth
475.41 874.43 moveto
475.41 894.68 lineto stroke
500.50 906.68 1.000000 4n
494.26 906.68 moveto
506.73 906.68 lineto stroke
500.50 900.68 1.000000 4n
500.50 894.68 1.000000 4n
496.81 905.93 moveto
496.81 873.68 lineto stroke
520.62 906.68 1.000000 4n
514.39 906.68 moveto
526.86 906.68 lineto stroke
520.62 900.68 1.000000 4n
520.62 894.68 1.000000 4n
516.94 905.93 moveto
516.94 873.68 lineto stroke
restore
%  S_BAR
58 linenum
0.70 setlinewidth
542.03 965.81 moveto
542.03 941.81 lineto stroke
542.03 900.68 moveto
542.03 876.68 lineto stroke
%  S_CHHEAD
62 linenum
%  S_STAFF
% staff 1
save
550.56 947.81 1.000000 4n
546.88 947.06 moveto
546.88 928.63 lineto stroke
560.62 968.81 1.000000 4n
556.94 968.06 moveto
556.94 930.61 lineto stroke
570.69 950.81 1.000000 4n
567.00 950.06 moveto
567.00 932.58 lineto stroke
580.75 971.81 1.000000 4n
574.52 971.81 moveto
586.98 971.81 lineto stroke
577.07 971.06 moveto
577.07 934.55 lineto stroke
590.81 953.81 1.000000 4n
587.13 953.06 moveto
587.13 936.52 lineto stroke
601.35 974.81 1.000000 4n
595.11 971.81 moveto
607.58 971.81 lineto stroke
597.66 974.06 moveto
597.66 938.58 lineto stroke
newpath
546.53 930.13 moveto
598.01 940.08 lineto
598.01 937.08 lineto
546.53 927.13 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
550.56 909.68 1.000000 4n
0.70 setlinewidth
544.33 906.68 moveto
556.79 906.68 lineto stroke
550.56 903.68 1.000000 4n
546.88 908.93 moveto
546.88 882.68 lineto stroke
570.69 912.68 1.000000 4n
561.91 912.68 1.000000 flat
564.45 912.68 moveto
576.92 912.68 lineto stroke
564.45 906.68 moveto
576.92 906.68 lineto stroke
570.69 906.68 1.000000 4n
564.45 906.68 moveto
576.92 906.68 lineto stroke
570.69 894.68 1.000000 4n
561.33 894.68 1.000000 sharp
567.00 911.93 moveto
567.00 873.68 lineto stroke
590.81 909.68 1.000000 4n
584.58 906.68 moveto
597.05 906.68 lineto stroke
590.81 903.68 1.000000 4n
590.81 897.68 1.000000 4n
587.13 908.93 moveto
587.13 876.68 lineto stroke
restore
%  S_BAR
64 linenum
0.70 setlinewidth
612.22 965.81 moveto
612.22 941.81 lineto stroke
612.22 900.68 moveto
612.22 876.68 lineto stroke
%  S_CHHEAD
68 linenum
%  S_STAFF
% staff 1
save
624.65 941.81 1.000000 4n
628.33 942.56 moveto
628.33 962.81 lineto stroke
631.35 962.81 1.000000 dnflag
639.76 956.81 1.000000 4n
636.08 956.06 moveto
636.08 935.81 lineto stroke
657.76 953.81 1.000000 4n
649.31 953.81 1.000000 nat
654.08 953.06 moveto
654.08 935.89 lineto stroke
667.82 959.81 1.000000 4n
664.14 959.06 moveto
664.14 935.89 lineto stroke
678.35 956.81 1.000000 4n
674.67 956.06 moveto
674.67 935.89 lineto stroke
newpath
653.73 937.39 moveto
675.02 937.39 lineto
675.02 934.39 lineto
653.73 934.39 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
620.75 885.68 1.000000 4n
0.70 setlinewidth
624.43 886.43 moveto
624.43 906.68 lineto stroke
648.76 903.68 1.000000 4n
648.76 897.68 1.000000 4n
652.44 898.43 moveto
652.44 919.68 lineto stroke
667.82 903.68 1.000000 4n
667.82 897.68 1.000000 4n
671.50 898.43 moveto
671.50 919.68 lineto stroke
628.54 885.68 1.000000 2n
638.02 885.68 1.000000 dot
624.65 884.93 moveto
624.65 865.68 lineto stroke
restore
%  S_BAR
71 linenum
0.70 setlinewidth
689.22 965.81 moveto
689.22 941.81 lineto stroke
689.22 900.68 moveto
689.22 876.68 lineto stroke
%  S_CHHEAD
74 linenum
%  S_STAFF
% staff 1
save
698.35 944.81 1.000000 4n
702.03 945.56 moveto
702.03 965.81 lineto stroke
712.84 953.81 1.000000 4rest
restore
%  S_STAFF
% staff 2
save
698.35 900.68 1.000000 4n
698.35 894.68 1.000000 4n
0.70 setlinewidth
694.67 899.93 moveto
694.67 873.68 lineto stroke
712.84 873.68 1.000000 4n
716.52 874.43 moveto
716.52 894.68 lineto stroke
restore
%  S_BAR
76 linenum
732.05 956.81 1.000000 dot
732.05 950.81 1.000000 dot
736.05 965.81 moveto
736.05 941.81 lineto stroke
3.00 setlinewidth
740.05 965.81 moveto
740.05 941.81 lineto stroke
0.70 setlinewidth
732.05 891.68 1.000000 dot
732.05 885.68 1.000000 dot
736.05 900.68 moveto
736.05 876.68 lineto stroke
3.00 setlinewidth
740.05 900.68 moveto
740.05 876.68 lineto stroke
0.70 setlinewidth
%  S_SSV
78 linenum
%  S_CLEFSIG
84 linenum
747.79 953.81 1.000000 flat
753.28 962.81 1.000000 flat
758.77 950.81 1.000000 flat
764.26 959.81 1.000000 flat
747.79 882.68 1.000000 flat
753.28 891.68 1.000000 flat
758.77 879.68 1.000000 flat
764.26 888.68 1.000000 flat
%  S_FEED
84 linenum
50.50 797.65 768.00 5 1.000000 1.000000 staff
/Times-Roman findfont
11 scalefont
setfont
55.00 824.71 moveto
(10) show
50.50 743.65 768.00 5 1.000000 1.000000 staff
49.50 809.65 731.65 brace
50.50 809.65 moveto
50.50 731.65 lineto stroke
%  S_CLEFSIG
84 linenum
62.29 791.65 1.000000 gclef
62.54 749.65 1.000000 fclef
78.33 797.65 1.000000 flat
83.82 806.65 1.000000 flat
89.31 794.65 1.000000 flat
94.80 803.65 1.000000 flat
78.33 737.65 1.000000 flat
83.82 746.65 1.000000 flat
89.31 734.65 1.000000 flat
94.80 743.65 1.000000 flat
112.54 800.65 1.000000 dot
112.54 794.65 1.000000 dot
109.54 809.65 moveto
109.54 785.65 lineto stroke
3.00 setlinewidth
105.54 809.65 moveto
105.54 785.65 lineto stroke
0.70 setlinewidth
112.54 746.65 1.000000 dot
112.54 740.65 1.000000 dot
109.54 755.65 moveto
109.54 731.65 lineto stroke
3.00 setlinewidth
105.54 755.65 moveto
105.54 731.65 lineto stroke
0.70 setlinewidth
%  S_CHHEAD
84 linenum
%  S_STAFF
% staff 1
save
128.57 800.65 1.000000 4n
137.84 800.65 1.000000 dot
124.89 799.90 moveto
124.89 781.15 lineto stroke
146.87 800.65 1.000000 4n
143.19 799.90 moveto
143.19 781.15 lineto stroke
newpath
124.54 782.65 moveto
143.54 782.65 lineto
143.54 779.65 lineto
124.54 779.65 lineto
closepath
fill
newpath
142.84 787.65 moveto
134.77 787.65 lineto
134.77 784.65 lineto
142.84 784.65 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
128.57 743.65 1.000000 4rest
restore
%  S_BAR
86 linenum
0.70 setlinewidth
155.40 809.65 moveto
155.40 785.65 lineto stroke
155.40 755.65 moveto
155.40 731.65 lineto stroke
%  S_CHHEAD
89 linenum
%  S_STAFF
% staff 1
save
163.93 821.65 1.000000 4n
173.20 824.65 1.000000 dot
157.70 821.65 moveto
170.16 821.65 lineto stroke
157.70 815.65 moveto
170.16 815.65 lineto stroke
160.25 820.90 moveto
160.25 797.65 lineto stroke
194.12 818.65 1.000000 4n
187.89 815.65 moveto
198.86 815.65 lineto stroke
190.44 817.90 moveto
190.44 796.15 lineto stroke
204.19 824.65 1.000000 4n
197.96 821.65 moveto
208.92 821.65 lineto stroke
199.96 815.65 moveto
208.42 815.65 lineto stroke
200.51 823.90 moveto
200.51 797.63 lineto stroke
214.58 821.65 1.000000 4n
209.85 821.65 moveto
220.81 821.65 lineto stroke
210.35 815.65 moveto
220.81 815.65 lineto stroke
210.90 820.90 moveto
210.90 799.15 lineto stroke
newpath
190.09 797.65 moveto
211.25 800.65 lineto
211.25 797.65 lineto
190.09 794.65 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
163.93 740.65 1.000000 4n
0.70 setlinewidth
160.25 739.90 moveto
160.25 723.50 lineto stroke
174.00 761.65 1.000000 4n
167.76 761.65 moveto
180.23 761.65 lineto stroke
170.31 760.90 moveto
170.31 725.12 lineto stroke
184.06 758.65 1.000000 4n
184.06 752.65 1.000000 4n
180.38 757.90 moveto
180.38 726.74 lineto stroke
194.12 761.65 1.000000 4n
187.89 761.65 moveto
200.36 761.65 lineto stroke
190.44 760.90 moveto
190.44 728.36 lineto stroke
204.19 758.65 1.000000 4n
204.19 752.65 1.000000 4n
200.51 757.90 moveto
200.51 729.98 lineto stroke
214.58 761.65 1.000000 4n
208.35 761.65 moveto
220.81 761.65 lineto stroke
210.90 760.90 moveto
210.90 731.65 lineto stroke
newpath
159.90 725.00 moveto
211.25 733.15 lineto
211.25 730.15 lineto
159.90 722.00 lineto
closepath
fill
restore
%  S_BAR
91 linenum
0.70 setlinewidth
224.73 809.65 moveto
224.73 785.65 lineto stroke
224.73 755.65 moveto
224.73 731.65 lineto stroke
%  S_CHHEAD
95 linenum
%  S_STAFF
% staff 1
save
233.27 821.65 1.000000 4n
227.03 821.65 moveto
239.50 821.65 lineto stroke
227.03 815.65 moveto
239.50 815.65 lineto stroke
229.58 820.90 moveto
229.58 798.51 lineto stroke
250.17 818.65 1.000000 4n
241.72 818.65 1.000000 nat
243.94 815.65 moveto
256.40 815.65 lineto stroke
246.49 817.90 moveto
246.49 796.46 lineto stroke
267.72 818.65 1.000000 4n
258.95 818.65 1.000000 flat
261.49 815.65 moveto
273.95 815.65 lineto stroke
264.04 817.90 moveto
264.04 794.34 lineto stroke
277.79 812.65 1.000000 4n
274.10 811.90 moveto
274.10 793.12 lineto stroke
287.85 818.65 1.000000 4n
281.62 815.65 moveto
294.08 815.65 lineto stroke
284.17 817.90 moveto
284.17 791.90 lineto stroke
298.24 806.65 1.000000 4n
294.56 805.90 moveto
294.56 790.64 lineto stroke
newpath
229.23 800.01 moveto
294.91 792.14 lineto
294.91 789.14 lineto
229.23 797.01 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
233.27 740.65 1.000000 4n
0.70 setlinewidth
229.58 739.90 moveto
229.58 723.61 lineto stroke
250.17 761.65 1.000000 4n
243.94 761.65 moveto
256.40 761.65 lineto stroke
246.49 760.90 moveto
246.49 725.88 lineto stroke
267.72 758.65 1.000000 4n
267.72 752.65 1.000000 4n
264.04 757.90 moveto
264.04 728.23 lineto stroke
277.79 761.65 1.000000 4n
271.55 761.65 moveto
284.02 761.65 lineto stroke
274.10 760.90 moveto
274.10 729.58 lineto stroke
287.85 758.65 1.000000 4n
287.85 752.65 1.000000 4n
284.17 757.90 moveto
284.17 730.93 lineto stroke
298.24 761.65 1.000000 4n
292.01 761.65 moveto
304.47 761.65 lineto stroke
294.56 760.90 moveto
294.56 732.32 lineto stroke
newpath
229.23 725.11 moveto
294.91 733.82 lineto
294.91 730.82 lineto
229.23 722.11 lineto
closepath
fill
restore
%  S_BAR
97 linenum
0.70 setlinewidth
308.40 809.65 moveto
308.40 785.65 lineto stroke
308.40 755.65 moveto
308.40 731.65 lineto stroke
%  S_CHHEAD
101 linenum
%  S_STAFF
% staff 1
save
316.93 806.65 1.000000 4n
313.25 805.90 moveto
313.25 789.43 lineto stroke
326.99 809.65 1.000000 4n
323.31 808.90 moveto
323.31 790.02 lineto stroke
337.06 812.65 1.000000 4n
333.38 811.90 moveto
333.38 790.61 lineto stroke
347.12 809.65 1.000000 4n
343.44 808.90 moveto
343.44 791.21 lineto stroke
357.19 815.65 1.000000 4n
350.95 815.65 moveto
363.42 815.65 lineto stroke
353.50 814.90 moveto
353.50 791.80 lineto stroke
367.57 809.65 1.000000 4n
363.89 808.90 moveto
363.89 792.41 lineto stroke
newpath
312.90 790.93 moveto
364.24 793.91 lineto
364.24 790.91 lineto
312.90 787.93 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
316.93 740.65 1.000000 4n
0.70 setlinewidth
313.25 739.90 moveto
313.25 723.55 lineto stroke
326.99 761.65 1.000000 4n
320.76 761.65 moveto
333.23 761.65 lineto stroke
323.31 760.90 moveto
323.31 725.05 lineto stroke
337.06 755.65 1.000000 4n
337.06 749.65 1.000000 4n
333.38 754.90 moveto
333.38 726.55 lineto stroke
347.12 761.65 1.000000 4n
340.89 761.65 moveto
353.35 761.65 lineto stroke
343.44 760.90 moveto
343.44 728.06 lineto stroke
357.19 755.65 1.000000 4n
357.19 749.65 1.000000 4n
353.50 754.90 moveto
353.50 729.56 lineto stroke
367.57 761.65 1.000000 4n
361.34 761.65 moveto
373.81 761.65 lineto stroke
363.89 760.90 moveto
363.89 731.11 lineto stroke
newpath
312.90 725.05 moveto
364.24 732.61 lineto
364.24 729.61 lineto
312.90 722.05 lineto
closepath
fill
restore
%  S_BAR
103 linenum
0.70 setlinewidth
377.73 809.65 moveto
377.73 785.65 lineto stroke
377.73 755.65 moveto
377.73 731.65 lineto stroke
%  S_CHHEAD
107 linenum
%  S_STAFF
% staff 1
save
386.26 800.65 1.000000 4n
382.58 799.90 moveto
382.58 782.77 lineto stroke
396.33 809.65 1.000000 4n
392.65 808.90 moveto
392.65 786.22 lineto stroke
414.33 815.65 1.000000 4n
408.10 815.65 moveto
419.06 815.65 lineto stroke
410.65 814.90 moveto
410.65 792.40 lineto stroke
424.39 821.65 1.000000 4n
418.16 821.65 moveto
429.12 821.65 lineto stroke
420.16 815.65 moveto
428.62 815.65 lineto stroke
420.71 820.90 moveto
420.71 796.15 lineto stroke
434.46 827.65 1.000000 4n
428.22 827.65 moveto
440.69 827.65 lineto stroke
430.22 821.65 moveto
440.69 821.65 lineto stroke
430.22 815.65 moveto
440.69 815.65 lineto stroke
430.77 826.90 moveto
430.77 797.23 lineto stroke
452.46 833.65 1.000000 4n
446.22 833.65 moveto
457.19 833.65 lineto stroke
446.22 827.65 moveto
456.69 827.65 lineto stroke
446.22 821.65 moveto
456.69 821.65 lineto stroke
446.22 815.65 moveto
456.69 815.65 lineto stroke
448.77 832.90 moveto
448.77 799.15 lineto stroke
462.52 839.65 1.000000 4n
456.29 839.65 moveto
468.75 839.65 lineto stroke
458.29 833.65 moveto
468.75 833.65 lineto stroke
458.29 827.65 moveto
468.75 827.65 lineto stroke
458.29 821.65 moveto
468.75 821.65 lineto stroke
458.29 815.65 moveto
468.75 815.65 lineto stroke
466.20 840.40 moveto
466.20 854.68 lineto stroke
472.91 788.65 1.000000 4n
476.59 789.40 moveto
476.59 850.90 lineto stroke
/NewCenturySchlbk-BoldItalic findfont
11 scalefont
setfont
397.13 817.31 moveto
(3) show
/NewCenturySchlbk-BoldItalic findfont
11 scalefont
setfont
435.26 834.93 moveto
(3) show
newpath
382.23 784.27 moveto
411.00 793.90 lineto
411.00 790.90 lineto
382.23 781.27 lineto
closepath
fill
newpath
420.36 797.65 moveto
449.12 800.65 lineto
449.12 797.65 lineto
420.36 794.65 lineto
closepath
fill
newpath
465.85 856.18 moveto
476.94 852.40 lineto
476.94 849.40 lineto
465.85 853.18 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
386.26 740.65 1.000000 4n
0.70 setlinewidth
382.58 739.90 moveto
382.58 723.82 lineto stroke
405.33 761.65 1.000000 4n
399.10 761.65 moveto
411.56 761.65 lineto stroke
401.65 760.90 moveto
401.65 725.39 lineto stroke
424.39 755.65 1.000000 4n
424.39 749.65 1.000000 4n
420.71 754.90 moveto
420.71 726.96 lineto stroke
443.46 761.65 1.000000 4n
437.22 761.65 moveto
449.69 761.65 lineto stroke
439.77 760.90 moveto
439.77 728.53 lineto stroke
462.52 755.65 1.000000 4n
462.52 749.65 1.000000 4n
458.84 754.90 moveto
458.84 730.11 lineto stroke
472.91 761.65 1.000000 4n
466.68 761.65 moveto
479.14 761.65 lineto stroke
469.23 760.90 moveto
469.23 730.96 lineto stroke
newpath
382.23 725.32 moveto
469.58 732.46 lineto
469.58 729.46 lineto
382.23 722.32 lineto
closepath
fill
restore
%  S_BAR
109 linenum
0.70 setlinewidth
483.07 809.65 moveto
483.07 785.65 lineto stroke
483.07 755.65 moveto
483.07 731.65 lineto stroke
%  S_CHHEAD
113 linenum
%  S_STAFF
% staff 1
save
491.60 785.65 1.000000 4n
495.28 786.40 moveto
495.28 806.65 lineto stroke
498.31 806.65 1.000000 dnflag
506.71 797.65 1.000000 4n
503.03 796.90 moveto
503.03 776.65 lineto stroke
526.84 791.65 1.000000 4n
530.52 792.40 moveto
530.52 815.39 lineto stroke
536.90 797.65 1.000000 4n
540.59 798.40 moveto
540.59 813.32 lineto stroke
547.29 785.65 1.000000 4n
550.97 786.40 moveto
550.97 811.19 lineto stroke
newpath
530.17 816.89 moveto
551.32 812.69 lineto
551.32 809.69 lineto
530.17 813.89 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
491.60 740.65 1.000000 4n
0.70 setlinewidth
487.92 739.90 moveto
487.92 723.49 lineto stroke
506.71 761.65 1.000000 4n
500.48 761.65 moveto
512.94 761.65 lineto stroke
503.03 760.90 moveto
503.03 725.95 lineto stroke
516.78 758.65 1.000000 4n
516.78 752.65 1.000000 4n
513.09 757.90 moveto
513.09 727.59 lineto stroke
526.84 761.65 1.000000 4n
520.61 761.65 moveto
533.07 761.65 lineto stroke
523.16 760.90 moveto
523.16 729.22 lineto stroke
536.90 758.65 1.000000 4n
536.90 752.65 1.000000 4n
533.22 757.90 moveto
533.22 730.86 lineto stroke
547.29 761.65 1.000000 4n
541.06 761.65 moveto
553.52 761.65 lineto stroke
543.61 760.90 moveto
543.61 732.54 lineto stroke
newpath
487.57 724.99 moveto
543.96 734.04 lineto
543.96 731.04 lineto
487.57 721.99 lineto
closepath
fill
restore
%  S_BAR
115 linenum
0.70 setlinewidth
557.45 809.65 moveto
557.45 785.65 lineto stroke
557.45 755.65 moveto
557.45 731.65 lineto stroke
%  S_CHHEAD
119 linenum
%  S_STAFF
% staff 1
save
565.98 788.65 1.000000 4n
569.66 789.40 moveto
569.66 818.58 lineto stroke
576.05 794.65 1.000000 4n
579.73 795.40 moveto
579.73 819.56 lineto stroke
586.11 803.65 1.000000 4n
589.79 804.40 moveto
589.79 820.54 lineto stroke
596.17 800.65 1.000000 4n
599.86 801.40 moveto
599.86 821.52 lineto stroke
613.08 797.65 1.000000 4n
604.63 797.65 1.000000 nat
616.76 798.40 moveto
616.76 823.17 lineto stroke
623.47 800.65 1.000000 4n
627.15 801.40 moveto
627.15 824.18 lineto stroke
newpath
569.31 820.08 moveto
627.50 825.68 lineto
627.50 822.68 lineto
569.31 817.08 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
565.98 740.65 1.000000 4n
0.70 setlinewidth
562.30 739.90 moveto
562.30 723.68 lineto stroke
576.05 761.65 1.000000 4n
569.81 761.65 moveto
582.28 761.65 lineto stroke
572.36 760.90 moveto
572.36 724.85 lineto stroke
586.11 755.65 1.000000 4n
586.11 749.65 1.000000 4n
582.43 754.90 moveto
582.43 726.03 lineto stroke
596.17 761.65 1.000000 4n
589.94 761.65 moveto
602.41 761.65 lineto stroke
592.49 760.90 moveto
592.49 727.20 lineto stroke
613.08 755.65 1.000000 4n
613.08 749.65 1.000000 4n
609.40 754.90 moveto
609.40 729.18 lineto stroke
623.47 761.65 1.000000 4n
617.24 761.65 moveto
629.70 761.65 lineto stroke
619.79 760.90 moveto
619.79 730.39 lineto stroke
newpath
561.95 725.18 moveto
620.14 731.89 lineto
620.14 728.89 lineto
561.95 722.18 lineto
closepath
fill
restore
%  S_BAR
121 linenum
0.70 setlinewidth
633.63 809.65 moveto
633.63 785.65 lineto stroke
633.63 755.65 moveto
633.63 731.65 lineto stroke
%  S_CHHEAD
125 linenum
%  S_STAFF
% staff 1
save
642.16 809.65 1.000000 4n
638.48 808.90 moveto
638.48 788.65 lineto stroke
662.29 818.65 1.000000 4n
656.05 815.65 moveto
668.52 815.65 lineto stroke
662.29 812.65 1.000000 4n
662.29 800.65 1.000000 4n
658.60 817.90 moveto
658.60 779.65 lineto stroke
682.41 815.65 1.000000 4n
676.18 815.65 moveto
688.65 815.65 lineto stroke
682.41 809.65 1.000000 4n
682.41 800.65 1.000000 4n
678.73 814.90 moveto
678.73 779.65 lineto stroke
restore
%  S_STAFF
% staff 2
save
642.16 740.65 1.000000 4n
0.70 setlinewidth
638.48 739.90 moveto
638.48 723.67 lineto stroke
652.22 761.65 1.000000 4n
645.99 761.65 moveto
656.95 761.65 lineto stroke
648.54 760.90 moveto
648.54 724.86 lineto stroke
662.29 767.65 1.000000 4n
656.05 767.65 moveto
668.52 767.65 lineto stroke
658.05 761.65 moveto
666.52 761.65 lineto stroke
658.60 766.90 moveto
658.60 726.06 lineto stroke
672.35 761.65 1.000000 4n
667.62 761.65 moveto
677.08 761.65 lineto stroke
668.67 760.90 moveto
668.67 727.25 lineto stroke
682.41 770.65 1.000000 4n
676.18 767.65 moveto
688.65 767.65 lineto stroke
678.18 761.65 moveto
688.65 761.65 lineto stroke
678.73 769.90 moveto
678.73 728.44 lineto stroke
692.80 749.65 1.000000 4n
689.12 748.90 moveto
689.12 729.67 lineto stroke
newpath
638.13 725.17 moveto
689.47 731.17 lineto
689.47 728.17 lineto
638.13 722.17 lineto
closepath
fill
restore
%  S_BAR
127 linenum
0.70 setlinewidth
702.96 809.65 moveto
702.96 785.65 lineto stroke
702.96 755.65 moveto
702.96 731.65 lineto stroke
%  S_CHHEAD
130 linenum
%  S_STAFF
% staff 1
save
712.06 812.65 1.000000 2n
712.06 806.65 1.000000 2n
712.06 800.65 1.000000 2n
708.16 811.90 moveto
708.16 779.65 lineto stroke
restore
%  S_STAFF
% staff 2
save
712.06 761.65 1.000000 4n
0.70 setlinewidth
705.83 761.65 moveto
718.29 761.65 lineto stroke
708.38 760.90 moveto
708.38 740.65 lineto stroke
725.05 740.65 1.000000 4n
728.74 741.40 moveto
728.74 761.65 lineto stroke
restore
%  S_BAR
132 linenum
743.02 800.65 1.000000 dot
743.02 794.65 1.000000 dot
747.02 809.65 moveto
747.02 785.65 lineto stroke
3.00 setlinewidth
751.02 809.65 moveto
751.02 785.65 lineto stroke
0.70 setlinewidth
743.02 746.65 1.000000 dot
743.02 740.65 1.000000 dot
747.02 755.65 moveto
747.02 731.65 lineto stroke
3.00 setlinewidth
751.02 755.65 moveto
751.02 731.65 lineto stroke
0.70 setlinewidth
%  S_SSV
134 linenum
%  S_CLEFSIG
140 linenum
758.77 797.65 1.000000 flat
764.26 806.65 1.000000 flat
758.77 737.65 1.000000 flat
764.26 746.65 1.000000 flat
%  S_FEED
140 linenum
50.50 659.65 768.00 5 1.000000 1.000000 staff
/Times-Roman findfont
11 scalefont
setfont
55.00 686.71 moveto
(18) show
50.50 595.36 768.00 5 1.000000 1.000000 staff
49.50 671.65 583.36 brace
50.50 671.65 moveto
50.50 583.36 lineto stroke
%  S_CLEFSIG
140 linenum
62.29 653.65 1.000000 gclef
62.54 601.36 1.000000 fclef
78.33 659.65 1.000000 flat
83.82 668.65 1.000000 flat
78.33 589.36 1.000000 flat
83.82 598.36 1.000000 flat
101.56 662.65 1.000000 dot
101.56 656.65 1.000000 dot
98.56 671.65 moveto
98.56 647.65 lineto stroke
3.00 setlinewidth
94.56 671.65 moveto
94.56 647.65 lineto stroke
0.70 setlinewidth
101.56 598.36 1.000000 dot
101.56 592.36 1.000000 dot
98.56 607.36 moveto
98.56 583.36 lineto stroke
3.00 setlinewidth
94.56 607.36 moveto
94.56 583.36 lineto stroke
0.70 setlinewidth
%  S_CHHEAD
140 linenum
%  S_STAFF
% staff 1
save
119.01 689.65 1.000000 4n
112.78 689.65 moveto
125.25 689.65 lineto stroke
112.78 683.65 moveto
125.25 683.65 lineto stroke
112.78 677.65 moveto
125.25 677.65 lineto stroke
115.33 688.90 moveto
115.33 659.65 lineto stroke
restore
%  S_STAFF
% staff 2
save
119.01 595.36 1.000000 4rest
restore
%  S_BAR
142 linenum
0.70 setlinewidth
134.64 671.65 moveto
134.64 647.65 lineto stroke
134.64 607.36 moveto
134.64 583.36 lineto stroke
%  S_CHHEAD
145 linenum
%  S_STAFF
% staff 1
save
143.17 689.65 1.000000 4n
136.94 689.65 moveto
147.90 689.65 lineto stroke
136.94 683.65 moveto
147.40 683.65 lineto stroke
136.94 677.65 moveto
147.40 677.65 lineto stroke
139.49 688.90 moveto
139.49 661.15 lineto stroke
153.23 698.65 1.000000 4n
147.00 695.65 moveto
159.46 695.65 lineto stroke
149.00 689.65 moveto
159.46 689.65 lineto stroke
149.00 683.65 moveto
157.46 683.65 lineto stroke
149.00 677.65 moveto
157.46 677.65 lineto stroke
149.55 697.90 moveto
149.55 660.56 lineto stroke
163.30 686.65 1.000000 4n
158.56 683.65 moveto
168.03 683.65 lineto stroke
159.06 677.65 moveto
167.53 677.65 lineto stroke
159.61 685.90 moveto
159.61 659.96 lineto stroke
173.36 689.65 1.000000 4n
167.13 689.65 moveto
179.59 689.65 lineto stroke
169.13 683.65 moveto
179.59 683.65 lineto stroke
169.13 677.65 moveto
177.59 677.65 lineto stroke
169.68 688.90 moveto
169.68 659.37 lineto stroke
183.42 680.65 1.000000 4n
178.69 677.65 moveto
188.16 677.65 lineto stroke
179.74 679.90 moveto
179.74 658.77 lineto stroke
193.95 686.65 1.000000 4n
187.71 683.65 moveto
200.18 683.65 lineto stroke
189.71 677.65 moveto
200.18 677.65 lineto stroke
190.26 685.90 moveto
190.26 658.15 lineto stroke
newpath
139.14 662.65 moveto
190.61 659.65 lineto
190.61 656.65 lineto
139.14 659.65 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
143.17 589.36 1.000000 4n
0.70 setlinewidth
146.85 590.11 moveto
146.85 610.36 lineto stroke
163.30 616.36 1.000000 4n
157.06 613.36 moveto
169.53 613.36 lineto stroke
163.30 610.36 1.000000 4n
163.30 601.36 1.000000 4n
159.61 615.61 moveto
159.61 580.36 lineto stroke
183.42 616.36 1.000000 4n
177.19 613.36 moveto
189.66 613.36 lineto stroke
183.42 610.36 1.000000 4n
183.42 601.36 1.000000 4n
179.74 615.61 moveto
179.74 580.36 lineto stroke
restore
%  S_BAR
147 linenum
0.70 setlinewidth
204.77 671.65 moveto
204.77 647.65 lineto stroke
204.77 607.36 moveto
204.77 583.36 lineto stroke
%  S_CHHEAD
151 linenum
%  S_STAFF
% staff 1
save
213.88 671.65 1.000000 4n
223.14 674.65 1.000000 dot
210.20 670.90 moveto
210.20 650.65 lineto stroke
235.84 665.65 1.000000 4n
232.16 664.90 moveto
232.16 647.02 lineto stroke
245.90 668.65 1.000000 4n
242.22 667.90 moveto
242.22 647.03 lineto stroke
263.26 668.65 1.000000 4n
254.81 668.65 1.000000 nat
259.58 667.90 moveto
259.58 647.03 lineto stroke
newpath
231.81 648.52 moveto
259.93 648.53 lineto
259.93 645.53 lineto
231.81 645.52 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
213.88 589.36 1.000000 4n
0.70 setlinewidth
217.56 590.11 moveto
217.56 610.36 lineto stroke
226.84 616.36 1.000000 4n
220.61 613.36 moveto
233.07 613.36 lineto stroke
226.84 610.36 1.000000 4n
226.84 601.36 1.000000 4n
223.16 615.61 moveto
223.16 580.36 lineto stroke
245.90 616.36 1.000000 4n
239.67 613.36 moveto
252.13 613.36 lineto stroke
245.90 610.36 1.000000 4n
245.90 601.36 1.000000 4n
242.22 615.61 moveto
242.22 580.36 lineto stroke
restore
%  S_BAR
153 linenum
0.70 setlinewidth
274.08 671.65 moveto
274.08 647.65 lineto stroke
274.08 607.36 moveto
274.08 583.36 lineto stroke
%  S_CHHEAD
157 linenum
%  S_STAFF
% staff 1
save
282.62 671.65 1.000000 4n
278.93 670.90 moveto
278.93 651.57 lineto stroke
292.68 680.65 1.000000 4n
286.45 677.65 moveto
298.91 677.65 lineto stroke
289.00 679.90 moveto
289.00 650.03 lineto stroke
302.74 665.65 1.000000 4n
299.06 664.90 moveto
299.06 648.48 lineto stroke
312.81 674.65 1.000000 4n
309.13 673.90 moveto
309.13 646.93 lineto stroke
322.87 671.65 1.000000 4n
319.19 670.90 moveto
319.19 645.39 lineto stroke
333.39 659.65 1.000000 4n
329.71 658.90 moveto
329.71 643.77 lineto stroke
newpath
278.58 653.07 moveto
330.06 645.27 lineto
330.06 642.27 lineto
278.58 650.07 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
282.62 589.36 1.000000 4n
0.70 setlinewidth
286.30 590.11 moveto
286.30 610.36 lineto stroke
302.74 616.36 1.000000 4n
296.51 613.36 moveto
308.98 613.36 lineto stroke
302.74 610.36 1.000000 4n
302.74 601.36 1.000000 4n
299.06 615.61 moveto
299.06 580.36 lineto stroke
322.87 616.36 1.000000 4n
316.64 613.36 moveto
329.10 613.36 lineto stroke
322.87 610.36 1.000000 4n
322.87 601.36 1.000000 4n
319.19 615.61 moveto
319.19 580.36 lineto stroke
restore
%  S_BAR
159 linenum
0.70 setlinewidth
344.21 671.65 moveto
344.21 647.65 lineto stroke
344.21 607.36 moveto
344.21 583.36 lineto stroke
%  S_CHHEAD
163 linenum
%  S_STAFF
% staff 1
save
359.59 659.65 1.000000 4n
351.13 659.65 1.000000 nat
355.90 658.90 moveto
355.90 641.56 lineto stroke
369.65 662.65 1.000000 4n
365.97 661.90 moveto
365.97 641.56 lineto stroke
379.71 665.65 1.000000 4n
376.03 664.90 moveto
376.03 641.56 lineto stroke
389.78 662.65 1.000000 4n
386.10 661.90 moveto
386.10 641.56 lineto stroke
399.84 650.65 1.000000 4n
409.11 650.65 1.000000 dot
403.52 651.40 moveto
403.52 670.15 lineto stroke
418.14 650.65 1.000000 4n
421.82 651.40 moveto
421.82 670.15 lineto stroke
newpath
355.55 643.06 moveto
386.45 643.06 lineto
386.45 640.06 lineto
355.55 640.06 lineto
closepath
fill
newpath
403.17 671.65 moveto
422.17 671.65 lineto
422.17 668.65 lineto
403.17 668.65 lineto
closepath
fill
newpath
421.47 666.65 moveto
413.41 666.65 lineto
413.41 663.65 lineto
421.47 663.65 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
359.59 619.36 1.000000 2n
369.07 622.36 1.000000 dot
0.70 setlinewidth
353.14 619.36 moveto
366.03 619.36 lineto stroke
353.14 613.36 moveto
366.03 613.36 lineto stroke
359.59 607.36 1.000000 2n
369.07 610.36 1.000000 dot
359.59 601.36 1.000000 2n
369.07 604.36 1.000000 dot
355.69 618.61 moveto
355.69 580.36 lineto stroke
restore
%  S_BAR
165 linenum
0.70 setlinewidth
426.67 671.65 moveto
426.67 647.65 lineto stroke
426.67 607.36 moveto
426.67 583.36 lineto stroke
%  S_CHHEAD
169 linenum
%  S_STAFF
% staff 1
save
435.20 650.65 1.000000 4n
438.88 651.40 moveto
438.88 678.10 lineto stroke
445.27 656.65 1.000000 4n
448.95 657.40 moveto
448.95 678.76 lineto stroke
455.33 662.65 1.000000 4n
459.01 663.40 moveto
459.01 679.41 lineto stroke
474.03 653.65 1.000000 4n
464.68 653.65 1.000000 sharp
477.72 654.40 moveto
477.72 680.63 lineto stroke
484.10 656.65 1.000000 4n
487.78 657.40 moveto
487.78 681.29 lineto stroke
494.62 662.65 1.000000 4n
498.30 663.40 moveto
498.30 681.98 lineto stroke
newpath
438.53 679.60 moveto
498.65 683.48 lineto
498.65 680.48 lineto
438.53 676.60 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
435.20 580.36 1.000000 4n
0.70 setlinewidth
438.88 581.11 moveto
438.88 601.36 lineto stroke
455.33 619.36 1.000000 4n
449.10 619.36 moveto
461.56 619.36 lineto stroke
449.10 613.36 moveto
461.56 613.36 lineto stroke
455.33 613.36 1.000000 4n
449.10 613.36 moveto
461.56 613.36 lineto stroke
455.33 601.36 1.000000 4n
451.65 618.61 moveto
451.65 580.36 lineto stroke
484.10 619.36 1.000000 4n
477.87 619.36 moveto
490.33 619.36 lineto stroke
477.87 613.36 moveto
490.33 613.36 lineto stroke
484.10 613.36 1.000000 4n
477.87 613.36 moveto
490.33 613.36 lineto stroke
484.10 601.36 1.000000 4n
480.42 618.61 moveto
480.42 580.36 lineto stroke
restore
%  S_BAR
171 linenum
0.70 setlinewidth
505.44 671.65 moveto
505.44 647.65 lineto stroke
505.44 607.36 moveto
505.44 583.36 lineto stroke
%  S_CHHEAD
175 linenum
%  S_STAFF
% staff 1
save
513.97 668.65 1.000000 4n
510.29 667.90 moveto
510.29 650.68 lineto stroke
524.03 695.65 1.000000 4n
517.80 695.65 moveto
530.27 695.65 lineto stroke
517.80 689.65 moveto
528.27 689.65 lineto stroke
517.80 683.65 moveto
528.27 683.65 lineto stroke
517.80 677.65 moveto
528.27 677.65 lineto stroke
520.35 694.90 moveto
520.35 654.35 lineto stroke
534.10 692.65 1.000000 4n
529.37 689.65 moveto
538.83 689.65 lineto stroke
529.87 683.65 moveto
538.33 683.65 lineto stroke
529.87 677.65 moveto
538.33 677.65 lineto stroke
530.42 691.90 moveto
530.42 658.01 lineto stroke
544.16 689.65 1.000000 4n
539.43 689.65 moveto
550.39 689.65 lineto stroke
539.93 683.65 moveto
548.39 683.65 lineto stroke
539.93 677.65 moveto
548.39 677.65 lineto stroke
540.48 688.90 moveto
540.48 661.15 lineto stroke
554.23 686.65 1.000000 4n
549.49 683.65 moveto
558.96 683.65 lineto stroke
549.99 677.65 moveto
558.46 677.65 lineto stroke
550.54 685.90 moveto
550.54 660.15 lineto stroke
564.29 683.65 1.000000 4n
559.56 683.65 moveto
570.52 683.65 lineto stroke
560.06 677.65 moveto
568.52 677.65 lineto stroke
560.61 682.90 moveto
560.61 659.15 lineto stroke
574.35 680.65 1.000000 4n
569.62 677.65 moveto
579.09 677.65 lineto stroke
570.67 679.90 moveto
570.67 658.15 lineto stroke
584.42 677.65 1.000000 4n
579.69 677.65 moveto
590.65 677.65 lineto stroke
580.74 676.90 moveto
580.74 657.39 lineto stroke
594.48 674.65 1.000000 4n
590.80 673.90 moveto
590.80 655.32 lineto stroke
604.55 671.65 1.000000 4n
600.86 670.90 moveto
600.86 653.25 lineto stroke
614.61 668.65 1.000000 4n
610.93 667.90 moveto
610.93 651.18 lineto stroke
newpath
509.94 652.18 moveto
530.77 659.51 lineto
530.77 656.51 lineto
509.94 649.18 lineto
closepath
fill
newpath
520.00 660.85 moveto
530.77 664.51 lineto
530.77 661.51 lineto
520.00 657.85 lineto
closepath
fill
newpath
540.13 662.65 moveto
571.02 659.65 lineto
571.02 656.65 lineto
540.13 659.65 lineto
closepath
fill
newpath
540.13 667.65 moveto
571.02 664.65 lineto
571.02 661.65 lineto
540.13 664.65 lineto
closepath
fill
newpath
580.39 658.89 moveto
611.28 652.68 lineto
611.28 649.68 lineto
580.39 655.89 lineto
closepath
fill
newpath
580.39 663.89 moveto
611.28 657.68 lineto
611.28 654.68 lineto
580.39 660.89 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
513.97 580.36 1.000000 4n
0.70 setlinewidth
517.65 581.11 moveto
517.65 601.36 lineto stroke
544.16 613.36 1.000000 4n
537.93 613.36 moveto
550.39 613.36 lineto stroke
544.16 607.36 1.000000 4n
544.16 601.36 1.000000 4n
540.48 612.61 moveto
540.48 580.36 lineto stroke
584.42 613.36 1.000000 4n
578.19 613.36 moveto
590.65 613.36 lineto stroke
584.42 607.36 1.000000 4n
584.42 601.36 1.000000 4n
580.74 612.61 moveto
580.74 580.36 lineto stroke
restore
%  S_BAR
177 linenum
0.70 setlinewidth
623.14 671.65 moveto
623.14 647.65 lineto stroke
623.14 607.36 moveto
623.14 583.36 lineto stroke
%  S_CHHEAD
181 linenum
%  S_STAFF
% staff 1
save
631.67 665.65 1.000000 4n
635.36 666.40 moveto
635.36 680.68 lineto stroke
641.74 644.65 1.000000 4n
645.42 645.40 moveto
645.42 677.02 lineto stroke
651.80 650.65 1.000000 4n
655.48 651.40 moveto
655.48 673.36 lineto stroke
661.87 659.65 1.000000 4n
658.18 658.90 moveto
658.18 641.02 lineto stroke
671.93 665.65 1.000000 4n
668.25 664.90 moveto
668.25 644.68 lineto stroke
681.99 671.65 1.000000 4n
678.31 670.90 moveto
678.31 648.35 lineto stroke
692.06 686.65 1.000000 4n
701.32 686.65 1.000000 dot
685.83 683.65 moveto
698.29 683.65 lineto stroke
685.83 677.65 moveto
698.29 677.65 lineto stroke
688.38 685.90 moveto
688.38 661.15 lineto stroke
710.35 683.65 1.000000 4n
704.12 683.65 moveto
716.59 683.65 lineto stroke
704.12 677.65 moveto
716.59 677.65 lineto stroke
706.67 682.90 moveto
706.67 658.15 lineto stroke
/NewCenturySchlbk-BoldItalic findfont
11 scalefont
setfont
638.57 630.37 moveto
(3) show
/NewCenturySchlbk-BoldItalic findfont
11 scalefont
setfont
668.76 671.28 moveto
(3) show
newpath
635.01 682.18 moveto
655.83 674.86 lineto
655.83 671.86 lineto
635.01 679.18 lineto
closepath
fill
newpath
657.83 642.52 moveto
678.66 649.85 lineto
678.66 646.85 lineto
657.83 639.52 lineto
closepath
fill
newpath
688.03 662.65 moveto
707.02 659.65 lineto
707.02 656.65 lineto
688.03 659.65 lineto
closepath
fill
newpath
706.32 664.65 moveto
698.26 665.97 lineto
698.26 662.97 lineto
706.32 661.65 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
631.67 589.36 1.000000 4n
0.70 setlinewidth
635.36 590.11 moveto
635.36 610.36 lineto stroke
661.87 616.36 1.000000 4n
655.63 613.36 moveto
668.10 613.36 lineto stroke
661.87 610.36 1.000000 4n
658.18 615.61 moveto
658.18 589.36 lineto stroke
692.06 619.36 1.000000 4n
685.83 619.36 moveto
698.29 619.36 lineto stroke
685.83 613.36 moveto
698.29 613.36 lineto stroke
692.06 607.36 1.000000 4n
692.06 601.36 1.000000 4n
688.38 618.61 moveto
688.38 580.36 lineto stroke
restore
%  S_BAR
183 linenum
0.70 setlinewidth
718.89 671.65 moveto
718.89 647.65 lineto stroke
718.89 607.36 moveto
718.89 583.36 lineto stroke
%  S_CHHEAD
186 linenum
%  S_STAFF
% staff 1
save
728.00 680.65 1.000000 4n
721.77 677.65 moveto
734.23 677.65 lineto stroke
724.32 679.90 moveto
724.32 659.65 lineto stroke
742.38 659.65 1.000000 4rest
restore
%  S_STAFF
% staff 2
save
728.00 616.36 1.000000 4n
0.70 setlinewidth
721.77 613.36 moveto
734.23 613.36 lineto stroke
728.00 610.36 1.000000 4n
724.32 615.61 moveto
724.32 589.36 lineto stroke
742.38 589.36 1.000000 4n
746.06 590.11 moveto
746.06 610.36 lineto stroke
restore
%  S_CURVE
188 linenum
119.01 694.90 moveto
118.96 695.12 lineto
122.69 697.38 126.73 698.52 131.09 698.52 curveto
135.45 698.52 139.50 697.38 143.22 695.12 curveto
143.12 694.68 lineto
139.29 696.42 135.29 697.28 131.09 697.28 curveto
126.90 697.28 122.89 696.42 119.07 694.68 curveto
fill
%  S_BAR
189 linenum
758.50 662.65 1.000000 dot
758.50 656.65 1.000000 dot
762.50 671.65 moveto
762.50 647.65 lineto stroke
3.00 setlinewidth
766.50 671.65 moveto
766.50 647.65 lineto stroke
0.70 setlinewidth
758.50 598.36 1.000000 dot
758.50 592.36 1.000000 dot
762.50 607.36 moveto
762.50 583.36 lineto stroke
3.00 setlinewidth
766.50 607.36 moveto
766.50 583.36 lineto stroke
0.70 setlinewidth
%  Printing header/footer
/Times-Roman findfont
12 scalefont
setfont
345.83 998.35 moveto
(Kaleidakustikon Layer 12) show
/Times-Roman findfont
12 scalefont
setfont
408.00 985.61 moveto
showpage
restore
%%Trailer
%%DocumentFonts: /Times-Roman /NewCenturySchlbk-Bold /NewCenturySchlbk-BoldItalic /Mfont0 
%%Pages: 1

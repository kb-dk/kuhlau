%!PS-Adobe-1.0
%%Creator: Mup (Version 6.1)
%%Title: music:  from kaleidakustikon_12.mup
%%CreationDate: Wed Jun 26 9:58:52 2013
%%Pages: (atend)
%%DocumentFonts: (atend)
%%BoundingBox: 0 0 595 842
%%DocumentMedia: Default 595 842 0 () ()
%%Orientation: Landscape
%%EndComments
% Mup prolog Copyright (c) 1995, 1996, 1997, 1998, 1999, 2000, 2003, 2004,
% 2008, 2009, 2012 by Arkkra Enterprises
% All rights reserved

% Mup PostScript Prolog 6.1 for use with Mup 6.1

% lwid is used as the width of a standard (thin) line in the music
% character definitions.
/lwid 70 def
/halflwid lwid 2 div def

% Define the following for use in do_upshortnote, do_dnshortnote, and
% do_shortrest; it has to be done outside of the music font definition.
/utildict 10 dict def
utildict begin
	/setnumflags	{	/numflags	exch def } def
	/sethooksm1	{	/hooksm1	exch def } def
	/setoffsets	{	/offsets	exch def } def
	/setx		{	/x		exch def } def
	/sety		{	/y		exch def } def
end

% Define a music character font.  Each music character is defined as if it
% were a normal ASCII character in a strange font where "A" looks like a
% treble clef, "B" looks like a bass clef, etc.

/mfont0 100 dict def
mfont0 begin
	/FontType 3 def
	/FontMatrix [ .001 0 0 0.001 0 0 ] def
	/FontBBox [ -2000 -4030 2000 4030 ] def
	/FontName (Mfont0) def

	% set up Encoding vector with standard names
	/Encoding 256 array def
	StandardEncoding Encoding copy
	pop

	% the following definitions are used for quarter rests
	/topx -170 def /topy 950 def
	/cor1x 250 def /cor1y 450 def
	/cor2x -300 def /cor2y 200 def
	/cor3x 250 def /cor3y -400 def

	% the following definitions are used for double sharps
	/limit 300 halflwid add def
	/off 70 def
	/inbendsmall limit 200 sub def
	/inbendbig limit 20 sub def
	/outbendsmall 100 def
	/outbendbig outbendsmall off add def

	%%%%% define routines that will be used by multiple characters %%%%%
	/do_1n {
		gsave
		newpath -10 rotate 1.6 1 scale
		0 0 325 0 360 arc		%outer ellipse
		1 1.6 div 1 scale 10 rotate	%back to original
		35 rotate 0.85 1.1 scale
		0 0 275 0 360 arc		%inner ellipse
		eofill
		grestore
	} def
	/do_upflag {
		-315 0 moveto
		-300 100 -100 480 0 600 curveto
		300 960 350 1500 200 1700 curveto
		130 1700 lineto
		350 1200 50 650 -315 600 curveto
		fill
	} def
	/do_flat {
		-250 -400 moveto	%outer edge of loop
		500 0 350 650 -250 160 curveto
		-250 160 lwid sub lineto %inner edge of loop
		100 400 300 0 -250 -400 lwid add curveto
		fill

		lwid setlinewidth	%stem
		-250 1100 moveto -250 -400 lineto stroke
	} def
	/do_diamond {
		newpath
		420 0 moveto 0 300 lineto -420 0 lineto
		0 -300 lineto closepath
		259 -29 moveto -41 185 lineto -259 29 lineto
		41 -185 lineto closepath
		eofill
	} def
	/do_2n {
		gsave
		newpath 25 rotate 1.4 1 scale
		0 0 315 0 360 arc		%outer ellipse
		1 1.4 div 1 scale		%back to original
		1.3 0.5 scale
		0 0 310 0 360 arc		%inner ellipse
		eofill
		grestore
	} def
	/do_4n {
		gsave
		newpath 25 rotate 1.35 1 scale
		0 0 310 0 360 arc fill
		grestore
	} def
	/do_com {
		newpath
		330 250 150 0 360 arc fill	%knob at upper right
		465 300 moveto			%outer boundary
		410 500 200 635 0 635 curveto
		-750 635 -750 -635 0 -635 curveto
		350 -635 480 -300 500 -100 curveto
		430 -100 lineto			%inner boundary
		380 -300 250 -565 0 -565 curveto
		-450 -565 -450 565 0 565 curveto
		200 565 370 350 395 300 curveto
		fill
	} def
	/do_ferm {
		0 0 800 lwid sub 0 180 arc	%inner arc
		-800 0 lineto
		0 270 lwid sub 800 180 0 arcn	%outer arc
		800 0 lineto fill
		0 120 120 0 360 arc fill	%the dot
	} def
	/do_mor {
		gsave
		0.7 1 scale	%scrunch the following horizontally
		45 rotate	%to pretend all lines horz or vertical
		0 1 1 {
			pop	%we don't need the loop variable
			%one half of the mordent
			0 40 moveto 350 40 lineto 350 -460 lineto
			750 -460 lineto 750 -540 lineto
			150 -540 lineto 150 -40 lineto
			0 -40 lineto fill
			180 rotate	%to do the other half
		} for
		grestore
	} def
	/do_turn {
		gsave
		0 1 1 {
			pop	%we don't need the loop variable
			0 -100 moveto	%outer boundary
			200 -400 625 -400 625 0 curveto
			625 200 500 325 300 325 curveto
			300 185 lineto	%inner boundary
			450 255 555 150 555 0 curveto
			555 -350 250 -250 0 100 curveto
			fill
			300 255 70 0 360 arc fill %knob on end
			180 rotate	%to do the other half
		} for
		grestore
	} def

	/do_upshortnote {
		utildict begin
		setnumflags		%set numflags from the stack
		gsave
		-330 0 translate	%half a flag width
		do_4n			%do a quarter note head
		lwid setlinewidth
		370 0 moveto
		370 2100 numflags 2 sub flagsep mul add lineto stroke
		670 2100 numflags 2 sub flagsep mul add translate
		1 -1 scale		%reflect across X axis
		0 1 numflags 1 sub {
			do_upflag	%do an upflag
			pop		%we don't need the loop variable
			0 flagsep translate
		} for
		grestore
		end
	} def

	/do_dnshortnote {
		utildict begin
		setnumflags		%set numflags from the stack
		do_4n			%do a quarter note head
		lwid setlinewidth
		-370 0 moveto
		-370 -2100 numflags 2 sub flagsep mul sub lineto stroke
		gsave
		-70 -2100 numflags 2 sub flagsep mul sub translate
		0 1 numflags 1 sub {
			do_upflag	%do an upflag
			pop		%we don't need the loop variable
			0 flagsep translate
		} for
		grestore
		end
	} def

	/do_shortrest {
		utildict begin
		sety setx setoffsets sethooksm1	%set variable from the stack
		gsave
		-105.8 offsets mul -600 offsets mul translate
		0 1 hooksm1 {		%loop once per hook
			newpath
			1 setlinewidth
			gsave
			1 1.2 scale
			-150 300 1.2 div 140 0 360 arc fill 	%the dot
			grestore
			lwid setlinewidth
			-50 700 550 255 315 arc		%rest of the hook
			hooksm1 lt { stroke 105.8 600 translate } if
		} for
		x y lineto stroke
		grestore
		end
	} def


	% subsidiary dictionary of character definitions
	/CharStrings 128 dict def
	CharStrings begin

		/.notdef {} def

		% Here are the definitions of the characters.  A stepsize here
		% is 300 units (assuming the character is drawn at its default
		% size).

		% gclef
		/A {
			newpath
			%start with inner curl, inside boundary
			-50 -300 moveto
			-450 600 700 700 750 0 curveto
			750 -800 -700 -800 -700 200 curveto
			-700 900 500 1400 520 2250 curveto
			520 2900 300 3000 200 3000 curveto
			100 3000 -400 2500 -200 1800 curveto
			350 -600 lineto
			720 -1600 0 -1650 -400 -1400 curveto

			%go back to start, drawing the other boundary
			-400 -1480 lineto
			0 -1700 800 -1700 430 -600 curveto
			-120 1800 lineto
			-300 2400 200 2800 250 2800 curveto
			400 2800 430 2700 430 2450 curveto
			430 1800 -900 1200 -900 300 curveto
			-750 -900 800 -900 850 0 curveto
			900 1100 -750 900 -120 -300 curveto fill

			%circle at the bottom
			-300 -1250 250 0 360 arc fill
		} def

		% fclef
		/B {
			newpath
			%start with outside boundary, at bottom
			-1000 -1700 moveto
			100 -1100 500 -600 450 0 curveto
			450 850 -1100 850 -950 0 curveto

			%go back to start, drawing the other boundary
			-880 0 lineto
			-920 400 -600 560 -300 560 curveto
			0 560 150 400 150 0 curveto
			150 -400 100 -900 -1000 -1620 curveto fill

			%circle at the left
			newpath
			-700 0 250 0 360 arc fill

			%do the two dots after the main curve
			700 -300 100 0 360 arc fill
			700 300 100 0 360 arc fill
		} def

		% cclef
		/C {
			gsave
			%do upper curved part, then scale to do mirror image
			0 1 1 {
				pop	%we don't need the loop variable
				%outer boundary of curve
				-170 0 moveto 100 300 lineto
				400 -200 750 300 750 650 curveto
				750 1100 450 1235 250 1235 curveto
				0 1235 -143 1100 -143 950 curveto

				%inner boundary of curve
				0 950 lineto
				0 1100 30 1165 250 1165 curveto
				300 1165 450 1100 450 650 curveto
				450 400 400 -100 100 400 curveto
				-270 0 lineto fill
				%stroke
				%-270 0 moveto 100 400 lineto
				%400 -100 450 400 450 650 curveto
				%450 1100 300 1165 250 1165 curveto
				%30 1165 0 1100 0 950 curveto
				%stroke

				%elliptical ball at end of curve
				gsave
				1.3 1 scale
				10 950 120 0 360 arc fill
				grestore
				1 -1 scale	%reflect across X axis
			} for
			grestore

			% two vertical lines on the left
			300 setlinewidth -600 -1200 halflwid sub moveto
			-600 1200 halflwid add lineto stroke
			lwid setlinewidth -300 -1200 halflwid sub moveto
			-300 1200 halflwid add lineto stroke
		} def

		% dblwhole
		/D {
			do_1n		%do a whole note
			lwid setlinewidth
			-490 -600 moveto -490 600 lineto stroke
			490 -600 moveto 490 600 lineto stroke
		} def

		% 1n
		/E {
			do_1n		%do a whole note
		} def

		% 2n
		/F {
			do_2n		%do a half note
		} def

		% 4n
		/G {
			do_4n		%do a quarter note head
		} def

		% upflag
		/H {
			do_upflag		%do an upflag
		} def

		% dnflag
		/I {
			gsave
			1 -1 scale	%reflect across X axis
			do_upflag		%do an upflag
			grestore
		} def

		% dwhrest
		/J {
			300 setlinewidth
			0 0 moveto 0 600 lineto stroke
		} def

		% 1rest
		/K {
			lwid setlinewidth
			-750 600 moveto 750 600 lineto stroke
			300 setlinewidth
			-400 450 moveto 400 450 lineto stroke
		} def

		% 2rest
		/L {
			lwid setlinewidth
			-750 0 moveto 750 0 lineto stroke
			300 setlinewidth
			-400 150 moveto 400 150 lineto stroke
		} def

		% 4rest
		/M {
			newpath
			cor3x cor3y halflwid add moveto
			%-400 -200 -450 -650 50 -950 lwid add curveto
			-450 -50 -450 -650 50 -950 lwid add curveto
			-150 -650 -100 -250 cor3x cor3y halflwid sub curveto
			fill

			cor1x cor1y moveto cor1x 200 sub cor1y 200 add lineto
			cor2x cor2y lineto cor2x 200 add cor2y 200 sub lineto
			fill

			lwid setlinewidth
			topx topy moveto cor1x cor1y lineto stroke
			cor2x cor2y moveto cor3x cor3y lineto stroke
		} def

		% 8rest
		/N {
			0 0 0 -600 do_shortrest
		} def

		% 16rest
		/O {
			1 1 100 -1200 do_shortrest
		} def

		% 32rest
		/P {
			2 1 0 -1800 do_shortrest
		} def

		% 64rest
		/Q {
			3 2 -80 -2100 do_shortrest
		} def

		% 128rest
		/R {
			4 2 -150 -2700 do_shortrest
		} def

		% 256rest
		/S {
			5 3 -280 -3300 do_shortrest
		} def

		% dot
		/T {
			newpath
			0 0 120 0 360 arc fill
		} def

		% nat
		/U {
			% fill crossbars so that we can do parallelograms
			-235 -470 moveto -235 -270 lineto
			235 -130 lineto 235 -330 lineto fill
			-235 130 moveto -235 330 lineto
			235 470 lineto 235 270 lineto fill

			% vertical strokes
			lwid setlinewidth
			-200 -380 moveto -200 850 lineto stroke
			200 -850 moveto 200 380 lineto stroke
		} def

		% sharp
		/V {
			% fill crossbars so that we can do parallelograms
			-325 -480 moveto -325 -280 lineto
			325 -120 lineto 325 -320 lineto fill
			-325 120 moveto -325 320 lineto
			325 480 lineto 325 280 lineto fill

			% vertical strokes
			lwid setlinewidth
			-150 -930 moveto -150 880 lineto stroke
			150 -880 moveto 150 930 lineto stroke
		} def

		% flat
		/W {
			do_flat		%do a flat
		} def

		% dblsharp
		/X {
			gsave
			0 1 3 {		%loop once for each of 4 sticks
				pop	%we don't need the loop variable
				0 off neg moveto
				outbendbig outbendsmall lineto
				inbendbig inbendsmall lineto
				limit limit lineto
				inbendsmall inbendbig lineto
				outbendsmall outbendbig lineto
				off neg 0 lineto
				fill
				-90 rotate
			} for
			grestore
		} def

		% dblflat
		/Y {
			-290 580 290 {	%loop once for each flat

				gsave
				1 setlinewidth
				0 translate	%translate left/right (loop var)
				do_flat		%do a flat
				grestore

			} for
		} def

		% xnote
		/Z {
			gsave
			1.15 1 scale 120 setlinewidth 1 setlinecap	%round
			-300 -300 moveto 300 300 lineto stroke
			-300 300 moveto 300 -300 lineto stroke
			grestore
		} def

		% dwhdiamond
		/a {
			do_diamond	%do a diamond
			lwid setlinewidth
			-420 -600 moveto -420 600 lineto stroke
			420 -600 moveto 420 600 lineto stroke
		} def

		% diamond
		/b {
			do_diamond	%do a diamond
		} def

		% filldiamond
		/c {
			420 0 moveto 0 300 lineto
			-420 0 lineto 0 -300 lineto fill
		} def

		% up2n
		/d {
			lwid setlinewidth
			380 0 moveto 380 2100 lineto stroke
			do_2n		%do a half note
		} def

		% dn2n
		/e {
			lwid setlinewidth
			-380 0 moveto -380 -2100 lineto stroke
			do_2n		%do a half note
		} def

		% up4n
		/f {
			do_4n		%do a quarter note head
			lwid setlinewidth
			370 0 moveto 370 2100 lineto stroke
		} def

		% dn4n
		/g {
			do_4n		%do a quarter note head
			lwid setlinewidth
			-370 0 moveto -370 -2100 lineto stroke
		} def

		% up8n
		/h {
			gsave
			-330 0 translate	% half a flag width
			do_4n		%do a quarter note head
			lwid setlinewidth
			370 0 moveto 370 2100 lineto stroke
			670 2100 translate
			1 -1 scale	%reflect across X axis
			do_upflag		%do an upflag
			grestore
		} def

		% dn8n
		/i {
			do_4n		%do a quarter note head
			lwid setlinewidth
			-370 0 moveto -370 -2100 lineto stroke
			gsave
			-70 -2100 translate
			do_upflag		%do an upflag
			grestore
		} def

		% up16n
		/j {
			2 do_upshortnote
		} def

		% dn16n
		/k {
			2 do_dnshortnote
		} def

		% up32n
		/l {
			3 do_upshortnote
		} def

		% dn32n
		/m {
			3 do_dnshortnote
		} def

		% up64n
		/n {
			4 do_upshortnote
		} def

		% dn64n
		/o {
			4 do_dnshortnote
		} def

		% up128n
		/p {
			5 do_upshortnote
		} def

		% dn128n
		/q {
			5 do_dnshortnote
		} def

		% up256n
		/r {
			6 do_upshortnote
		} def

		% dn256n
		/s {
			6 do_dnshortnote
		} def

		% com
		/t {
			do_com		%do a common time symbol
		} def

		% cut
		/u {
			do_com		%do a common time symbol
			lwid setlinewidth
			0 -900 moveto 0 900 lineto stroke
		} def

		% begped
		/v {
			lwid setlinewidth
			-200 600 moveto -200 0 lineto 200 0 lineto stroke
		} def

		% pedal
		/w {
			lwid setlinewidth
			-500 0 moveto -450 0 lineto 0 600 lineto
			450 0 lineto 500 0 lineto stroke
		} def

		% endped
		/x {
			lwid setlinewidth
			200 600 moveto 200 0 lineto -200 0 lineto stroke
		} def

		% dnbow
		/y {
			lwid setlinewidth
			-350 0 moveto -350 900 lineto stroke
			350 0 moveto 350 900 lineto stroke
			200 setlinewidth
			-350 800 moveto 350 800 lineto stroke
		} def

		% upbow
		/z {
			lwid setlinewidth
			-300 900 moveto 0 0 lineto 300 900 lineto stroke
		} def

		% wedge
		/one {
			0 0 moveto -150 500 lineto 150 500 lineto fill
		} def

		% uwedge
		/two {
			-150 0 moveto 150 0 lineto 0 500 lineto fill
		} def

		% ferm
		/three {
			newpath
			do_ferm		%do a right side up fermata
		} def

		% uferm
		/four {
			newpath
			gsave
			0 270 lwid sub 800 add translate %baseline at bottom
			180 rotate			%upside down
			do_ferm		%do a right side up fermata
			grestore
		} def

		% sign
		/five {
			gsave
			%do upper left curved part, upper right dot;
			%then rotate 180 to do other half
			0 1 1 {
				pop	%we don't need the loop variable
				0 100 moveto		%inner boundary
				-1000 300 -400 750 -200 700 curveto
				-200 800 lineto		%outer boundary
				-550 900 -1100 100 0 -100 curveto
				fill
				%dot at end of curve
				-200 700 100 0 360 arc fill
				%dot in upper right quadrant
				500 200 70 0 360 arc fill
				180 rotate
			} for
			grestore

			%slash through middle
			lwid setlinewidth
			-400 -800 moveto 400 800 lineto stroke
		} def

		% coda
		/six {
			newpath
			gsave
			0.6 1 scale
			0 0 550 0 360 arc	%outside boundary
			1 0.6 div 1 scale	%back to original
			0.9 1 scale
			0 0 650 0 360 arc	%inside boundary
			eofill
			grestore
			lwid setlinewidth
			0 -850 moveto 0 850 lineto stroke
			-800 0 moveto 800 0 lineto stroke
		} def

		% mor
		/seven {
			do_mor		%do a mordent
		} def

		% invmor
		/eight {
			do_mor		%do a mordent
			lwid setlinewidth
			0 -450 moveto 0 450 lineto stroke
		} def

		% turn
		/nine {
			do_turn		%do a turn
		} def

		% invturn
		/zero {
			gsave
			1 -1 scale	%reflect across X axis
			do_turn		%do a turn
			grestore
		} def

		% acc_gt
		/numbersign {
			lwid setlinewidth
			-500 300 moveto 500 0 lineto -500 -300 lineto stroke
		} def

		% acc_hat
		/dollar {
			newpath
			-365 0 moveto 0 860 lineto 365 0 lineto
			150 0 lineto -75 530 lineto -300 0 lineto fill
		} def

		% acc_uhat
		/quotedbl {
			newpath
			365 860 moveto 0 0 lineto -365 860 lineto
			-150 860 lineto 75 330 lineto 300 860 lineto fill
		} def

		% tr
		/asterisk {
			%vertical bar of t
			-350 1000 moveto -550 200 lineto
			-612.5 -50 -212.5 -50 -160 200 curveto
			-230 200 lineto
			-300 50 -420 50 -400 200 curveto
			-200 1000 lineto fill

			%crossbar of t and vertical bar of r
			-700 600 moveto -160 600 lineto
			20 600 30 520 60 440 curveto
			-50 0 lineto 70 0 lineto 180 440 lineto
			190 480 100 670 -150 670 curveto
			-690 670 lineto fill

			%horizontal curve of r
			100 480 moveto
			300 630 450 700 650 550 curveto
			560 480 lineto
			450 630 300 560 100 390 curveto
			fill

			%knob at end of r
			600 460 100 0 360 arc fill
		} def

		% leg
		/comma {
			100 setlinewidth
			-400 0 moveto 400 0 lineto stroke
		} def

		% rr
		/hyphen {
			100 setlinewidth
			-400 0 moveto 0 1000 lineto stroke
			0 0 moveto 400 1000 lineto stroke
		} def

		% measrpt
		/period {
			newpath -450 400 150 0 360 arc fill
			newpath 450 -400 150 0 360 arc fill
			200 setlinewidth
			-550 -600 moveto 550 600 lineto stroke
		} def

		% copyright
		/slash {
			lwid setlinewidth
			newpath 0 400 400 0 360 arc stroke
			newpath 0 400 200 45 315 arc stroke
		} def

		% dim
		/quoteleft {
			50 setlinewidth
			newpath 0 640 220 0 360 arc stroke
		} def

		% halfdim
		/quoteright {
			50 setlinewidth
			newpath 0 640 220 0 360 arc stroke
			newpath -340 300 moveto 340 980 lineto stroke
		} def

		% triangle
		/asciicircum {
			50 setlinewidth
			newpath -340 -10 moveto 0 710 lineto
			340 -10 lineto closepath stroke
		} def

		% qwhrest
		/ampersand {
			300 setlinewidth
			0 -600 moveto 0 600 lineto stroke
		} def

		% ll1rest
		/exclam {
			310 setlinewidth
			-400 455 moveto 400 450 lineto stroke
		} def

		% ll2rest
		/at {
			310 setlinewidth
			-400 145 moveto 400 150 lineto stroke
		} def
	end

	/BuildChar {

		exch begin
		Encoding exch get

		dup
		Mcbbox0 exch get
		aload pop setcachedevice

		CharStrings exch get
		exec
		end
	} def
end


% Define another music character font, since there are too many to fit in one
% font.  It works the same way as the first one.

/mfont1 100 dict def
mfont1 begin
	/FontType 3 def
	/FontMatrix [ .001 0 0 0.001 0 0 ] def
	/FontBBox [ -2000 -4030 2000 4030 ] def
	/FontName (Mfont1) def

	% set up Encoding vector with standard names
	/Encoding 256 array def
	StandardEncoding Encoding copy
	pop

	%%%%% define routines that will be used by multiple characters %%%%%

	/do_dwh_bars {
		% the two bars surrounding a double whole note
		lwid setlinewidth
		-420 -600 moveto -420 600 lineto stroke
		420 -600 moveto 420 600 lineto stroke
	} def
	/do_righttriangle {
		newpath
		420 270 moveto -420 270 lineto 350 -300 lineto 420 -300 lineto
		350 150 moveto -140 150 lineto 350 -213 lineto
		eofill
	} def
	/do_fillrighttriangle {
		newpath
		420 270 moveto -420 270 lineto 350 -300 lineto 420 -300 lineto
		fill
	} def
	/do_rectangle {
		newpath
		420 270 moveto -420 270 lineto -420 -270 lineto 420 -270 lineto
		350 150 moveto -350 150 lineto -350 -150 lineto 350 -150 lineto
		eofill
	} def
	/do_isostriangle {
		newpath
		0 300 moveto -420 -270 lineto 420 -270 lineto
		0 182 moveto -245 -150 lineto 245 -150 lineto
		eofill
	} def
	/do_piewedge {
		newpath
		0 -300 moveto 0 -244 514 35 145 arc
		0 -209 moveto 0 -244 394 43 137 arc
		eofill
	} def
	/do_semicircle {
		newpath
		gsave
		1 1.357 scale 420 199 moveto 0 199 420 180 360 arc
		1 1.09 scale 350 111 moveto 0 199 350 194.1 345.9 arc
		eofill
		grestore
	} def
	/do_slashhead {
		newpath
		lwid setlinewidth
		-620 -530 moveto -480 -670 lineto 620 530 lineto 480 670 lineto
		closepath stroke
	} def

	% subsidiary dictionary of character definitions
	/CharStrings 128 dict def
	CharStrings begin

		/.notdef {} def

		% Here are the definitions of the characters.  A stepsize here
		% is 300 units (assuming the character is drawn at its default
		% size).

		% dwhrighttriangle
		/A {
			do_righttriangle
			do_dwh_bars
		} def

		% righttriangle
		/B {
			do_righttriangle
		} def

		% fillrighttriangle
		/C {
			newpath
			420 270 moveto -420 270 lineto 350 -300 lineto
			420 -300 lineto
			fill
		} def

		% udwhrighttriangle
		/D {
			gsave
			180 rotate
			do_righttriangle
			do_dwh_bars
			grestore
		} def

		% urighttriangle
		/E {
			gsave
			180 rotate
			do_righttriangle
			grestore
		} def

		% ufillrighttriangle
		/F {
			gsave
			180 rotate
			do_fillrighttriangle
			grestore
		} def

		% dwhrectangle
		/G {
			do_rectangle
			do_dwh_bars
		} def

		% rectangle
		/H {
			do_rectangle
		} def

		% fillrectangle
		/I {
			newpath
			420 270 moveto -420 270 lineto -420 -270 lineto
			420 -270 lineto
			fill
		} def

		% dwhisostriangle
		/J {
			do_isostriangle
			do_dwh_bars
		} def

		% isostriangle
		/K {
			do_isostriangle
		} def

		% fillisostriangle
		/L {
			newpath
			0 300 moveto -420 -270 lineto 420 -270 lineto
			fill
		} def

		% dwhpiewedge
		/M {
			do_piewedge
			do_dwh_bars
		} def

		% piewedge
		/N {
			do_piewedge
		} def

		% fillpiewedge
		/O {
			newpath
			0 -300 moveto 0 -244 514 35 145 arc
			fill
		} def

		% dwhsemicircle
		/P {
			do_semicircle
			do_dwh_bars
		} def

		% semicircle
		/Q {
			do_semicircle
		} def

		% fillsemicircle
		/R {
			newpath
			gsave
			1 570 420 div scale
			420 199 moveto 0 199 420 180 360 arc
			fill
			grestore
		} def

		% dwhslashhead
		/S {
			do_slashhead
			lwid setlinewidth
			-650 -600 moveto -650 600 lineto stroke
			650 -600 moveto 650 600 lineto stroke
		} def

		% slashhead
		/T {
			do_slashhead
		} def

		% fillslashhead
		/U {
			newpath
			200 setlinewidth
			-550 -600 moveto 550 600 lineto stroke
		} def

		% blankhead
		/V {
			%print nothing
		} def
	end

	/BuildChar {

		exch begin
		Encoding exch get

		dup
		Mcbbox1 exch get
		aload pop setcachedevice

		CharStrings exch get
		exec
		end
	} def
end


% General routines for printing any music character, invoked by each music
% character's specific routine below.  The scaling factor (default 1) needs
% to be multiplied by 10 to get the actual size.  These routines restore the
% preexisting current font when they are done.

/printmchar0 {
	gsave
	/musicchar exch def
	/Mfont0 findfont exch 10 mul scalefont setfont moveto 
	musicchar show
	grestore
} def
/printmchar1 {
	gsave
	/musicchar exch def
	/Mfont1 findfont exch 10 mul scalefont setfont moveto 
	musicchar show
	grestore
} def

% Define each music character name to be a routine that prints the character.
% Each character is to be invoked as in this example:
%	100 200 1 gclef		% at (100, 200), scale to default size & print

/gclef			{ (A) printmchar0 } def
/fclef			{ (B) printmchar0 } def
/cclef			{ (C) printmchar0 } def
/dblwhole		{ (D) printmchar0 } def
/1n			{ (E) printmchar0 } def
/2n			{ (F) printmchar0 } def
/4n			{ (G) printmchar0 } def
/upflag			{ (H) printmchar0 } def
/dnflag			{ (I) printmchar0 } def
/dwhrest		{ (J) printmchar0 } def
/1rest			{ (K) printmchar0 } def
/2rest			{ (L) printmchar0 } def
/4rest			{ (M) printmchar0 } def
/8rest			{ (N) printmchar0 } def
/16rest			{ (O) printmchar0 } def
/32rest			{ (P) printmchar0 } def
/64rest			{ (Q) printmchar0 } def
/128rest		{ (R) printmchar0 } def
/256rest		{ (S) printmchar0 } def
/dot			{ (T) printmchar0 } def
/nat			{ (U) printmchar0 } def
/sharp			{ (V) printmchar0 } def
/flat			{ (W) printmchar0 } def
/dblsharp		{ (X) printmchar0 } def
/dblflat		{ (Y) printmchar0 } def
/xnote			{ (Z) printmchar0 } def
/dwhdiamond		{ (a) printmchar0 } def
/diamond		{ (b) printmchar0 } def
/filldiamond		{ (c) printmchar0 } def
/up2n			{ (d) printmchar0 } def
/dn2n			{ (e) printmchar0 } def
/up4n			{ (f) printmchar0 } def
/dn4n			{ (g) printmchar0 } def
/up8n			{ (h) printmchar0 } def
/dn8n			{ (i) printmchar0 } def
/up16n			{ (j) printmchar0 } def
/dn16n			{ (k) printmchar0 } def
/up32n			{ (l) printmchar0 } def
/dn32n			{ (m) printmchar0 } def
/up64n			{ (n) printmchar0 } def
/dn64n			{ (o) printmchar0 } def
/up128n			{ (p) printmchar0 } def
/dn128n			{ (q) printmchar0 } def
/up256n			{ (r) printmchar0 } def
/dn256n			{ (s) printmchar0 } def
/com			{ (t) printmchar0 } def
/cut			{ (u) printmchar0 } def
/begped			{ (v) printmchar0 } def
/pedal			{ (w) printmchar0 } def
/endped			{ (x) printmchar0 } def
/dnbow			{ (y) printmchar0 } def
/upbow			{ (z) printmchar0 } def
/wedge			{ (1) printmchar0 } def
/uwedge			{ (2) printmchar0 } def
/ferm			{ (3) printmchar0 } def
/uferm			{ (4) printmchar0 } def
/sign			{ (5) printmchar0 } def
/coda			{ (6) printmchar0 } def
/mor			{ (7) printmchar0 } def
/invmor			{ (8) printmchar0 } def
/turn			{ (9) printmchar0 } def
/invturn		{ (0) printmchar0 } def
/acc_gt			{ (#) printmchar0 } def
/acc_hat		{ ($) printmchar0 } def
/acc_uhat		{ (") printmchar0 } def
/tr			{ (*) printmchar0 } def
/leg			{ (,) printmchar0 } def
/rr			{ (-) printmchar0 } def
/measrpt		{ (.) printmchar0 } def
/copyright		{ (/) printmchar0 } def
/dim			{ (`) printmchar0 } def
/halfdim		{ (') printmchar0 } def
/triangle		{ (^) printmchar0 } def
/qwhrest		{ (&) printmchar0 } def
/ll1rest		{ (!) printmchar0 } def
/ll2rest		{ (@) printmchar0 } def
/dwhrighttriangle	{ (A) printmchar1 } def
/righttriangle		{ (B) printmchar1 } def
/fillrighttriangle	{ (C) printmchar1 } def
/udwhrighttriangle	{ (D) printmchar1 } def
/urighttriangle		{ (E) printmchar1 } def
/ufillrighttriangle	{ (F) printmchar1 } def
/dwhrectangle		{ (G) printmchar1 } def
/rectangle		{ (H) printmchar1 } def
/fillrectangle		{ (I) printmchar1 } def
/dwhisostriangle	{ (J) printmchar1 } def
/isostriangle		{ (K) printmchar1 } def
/fillisostriangle	{ (L) printmchar1 } def
/dwhpiewedge		{ (M) printmchar1 } def
/piewedge		{ (N) printmchar1 } def
/fillpiewedge		{ (O) printmchar1 } def
/dwhsemicircle		{ (P) printmchar1 } def
/semicircle		{ (Q) printmchar1 } def
/fillsemicircle		{ (R) printmchar1 } def
/dwhslashhead		{ (S) printmchar1 } def
/slashhead		{ (T) printmchar1 } def
/fillslashhead		{ (U) printmchar1 } def
/blankhead		{ (V) printmchar1 } def


% Define routines for Mup output other than music characters.

/stepsize 3 def	   % define a step size as 3 points (at default magnification)

% x1 y1 x2 lines dist staffscale staff
%		draw a staff starting at x1, y1 and extending to x2 with "lines"
%		lines, 2*dist*stepsize apart, scaled by staffscale
/staff {
	/staffscale exch def
	/dist exch def
	/lines exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	0.7 staffscale mul setlinewidth
	1 lines sub  2  lines 1 sub {	% loop from bottom line to top line
		dup stepsize mul staffscale mul dist mul y1 add x1 exch moveto
		stepsize mul staffscale mul dist mul y1 add x2 exch lineto stroke
	} for
} def

% x y1 y2 bracket	draw a bracket; y1 is the top
/bracket {
	/y2 exch def
	/y1 exch def
	/x exch def
	gsave
	3 setlinewidth
	x 2 sub y1 1 add moveto
	x 2 sub y2 1 sub lineto
	stroke
	x 2 sub y1 1 add moveto
	x 1 sub y1 1 add   x 3 add y1 1 add   x 5 add y1 6 add   curveto
	x 6 add y1 5 add lineto
	x 5 add y1 2 add   x 1 add y1 2 sub   x 2 sub y1 2 sub   curveto
	fill
	x 2 sub y2 1 sub moveto
	x 1 sub y2 1 sub   x 3 add y2 1 sub   x 5 add y2 6 sub   curveto
	x 6 add y2 5 sub lineto
	x 5 add y2 2 sub   x 1 add y2 2 add   x 2 sub y2 2 add   curveto
	fill
	grestore
} def

% x y1 y2 right repeatbracket	draw a bracket for a repeat; y1 is the top,
%				right==1 means facing to the right
/repeatbracket {
	/right exch def
	/y2 exch def
	/y1 exch def
	/x exch def
	gsave
	right 0 eq {
		x y1 y2 add 2 div translate
		180 rotate
		0 x sub 0 y1 y2 add 2 div sub translate
	} if
	x 4.5 sub y1 1 add moveto
	x 0 sub y1 1 add   x 2 add y1 1 add   x 6 add y1 5 add   curveto
	x 6 add y1 4 add lineto
	x 6 add y1 2 add   x 1 add y1 2 sub   x 4.5 sub y1 1.5 sub   curveto
	fill
	x 4.5 sub y2 1 sub moveto
	x 0 sub y2 1 sub   x 2 add y2 1 sub   x 6 add y2 5 sub   curveto
	x 6 add y2 4 sub lineto
	x 6 add y2 2 sub   x 1 add y2 2 add   x 4.5 sub y2 1.5 add   curveto
	fill
	grestore
} def

% x y1 y2 brace		draw a brace; y1 is the top
/brace {
	/y2 exch def
	/y1 exch def
	/x exch def
	gsave
	x 6 sub y1 y2 add 2 div translate
	/topy y1 y2 sub 2 div 1 sub def
	0.667 1 scale
	0 1 1 {
		pop
		%0 topy moveto 0 0 lineto stroke
		0 0 moveto
		16 topy 0.2 mul   -11 topy 0.6 mul   8 topy   curveto
		8.7 topy lineto
		-7 topy 0.7 mul   20 topy 0.3 mul   1 0   curveto
		fill
		1 -1 scale	% flip to do bottom half
	} for
	grestore
} def

% endx endy wavy staffscale	draw a wavy line from current point to here,
%				scaled by staffscale
/wavy {
	/staffscale exch def
	/endy exch def		% define the end point of the line
	/endx exch def
	currentpoint		% line starts at current point
	/begy exch def		% define the beginning point of the line
	/begx exch def
	gsave
	/dx endx begx sub def	% find delta x and delta y
	/dy endy begy sub def
	/r dx dx mul dy dy mul add sqrt def	% hypotenuse
	/theta dy dx atan def			% angle with positive x axis
	begx begy translate	% change axes so that we can draw the line
	theta rotate		%   from (0, 0) to (r, 0)
	staffscale staffscale scale	% scale everything by staffscale
	/scaledr r staffscale div def	% but scale r in reverse to keep length

	% Each outer loop draws one cycle of the squiggle.  It continues until
	% we are at or beyond the desired end point.
	0 0 moveto
	0 6 scaledr {
		gsave
		% first loop draws left half of squiggle; second draws right
		0 1 1 {
			0.0 0.4 moveto
			2.0 1.9 3.4 2.3 3.9 0.0 curveto
			2.1 0.0 lineto
			1.9 0.8 1.4 0.7 0.0 -0.4 curveto
			fill
			pop 180 rotate -6 0 translate
		} for
		grestore

		pop 6 0 translate	% shift axes right one squiggle
	} for

	grestore
} def

% x y space frets fretno numvert curvel curver [ f1 f2 f3 ... ] grid
%				print a guitar grid diagram
/grid {
	/grid_positions exch def % 0="o", -1="x", -2=nothing, positive=dot
	/curver exch def	% right string for curve, 0 if none
	/curvel exch def	% left string for curve, 0 if none
	/numvert exch def	% vertical position to print fretno, 0 if none
	/fretno exch def	% fret no. to print at right, 0 if none
	/frets exch def		% number of fret lines
	/space exch def		% points between two neighboring lines
	/y exch def		% y coord of top fret line
	/x exch def		% x coord of left strings

	gsave
	/strings grid_positions length def	% number of strings
	/lmarky 0.4 space mul y add def		% lowest Y of a "o" or "x"
	space 10 div setlinewidth
	2 setlinecap

	% draw the lines of the grid
	0  1  strings 1 sub {	% loop from left string to right string
		dup space mul x add y moveto
		space mul x add frets 1 sub space mul y exch sub lineto stroke
	} for
	0  -1  1 frets sub {	% loop from top fret (nut) to bottom fret
		dup space mul y add x exch moveto
		space mul y add strings 1 sub space mul x add exch lineto stroke
	} for

	% draw the curved line if there is one
	curvel 0 gt {
		% within strings curvel to curver, find smallest positive fret
		/minfret 1000 def
		curvel 1 curver {
			/strno exch def
			/grid_p grid_positions strno 1 sub get def
			grid_p 0 gt grid_p minfret lt and {
				/minfret grid_p def
			} if
		} for

		% if curve goes above top fret, other marks must be higher
		minfret 1 eq {
			/hmarky 1.2 space mul y add def
		} {
			/hmarky lmarky def
		} ifelse

		/strdiff curver curvel sub def
		space 8 div setlinewidth

		% set endpoint coords of curve; higher if curve is short
		/curvex1 curvel 1 sub space mul x add def
		/curvex2 curver 1 sub space mul x add def
		/curvey 1 minfret sub space mul y add def
		strdiff 3 lt {
			/curvey 0.2 strdiff div space mul curvey add def
		} if

		% move to left end, set other points, draw curve
		curvex1 curvey moveto

		curvex1 curvex2 curvex1 sub 3 div add
		curvey space 0.4 strdiff sqrt mul mul add

		curvex2 curvex2 curvex1 sub 3 div sub
		curvey space 0.4 strdiff sqrt mul mul add

		curvex2 curvey curveto stroke
	} if

	space 10 div setlinewidth

	% draw dots and x and o marks
	0  1  strings 1 sub {	% loop from left string to right string
		/strno exch def	% first string is 0
		/grid_p grid_positions strno get def
		/strx strno space mul x add def

		% set Y of mark higher if curved line covers this string
		strno 1 add curvel ge  strno 1 add curver le  and {
			/marky hmarky def
		} {
			/marky lmarky def
		} ifelse

		grid_p -1 eq {		% draw an X above the string
			/xhwid space 3 div def
			strx xhwid sub marky xhwid sub moveto
			strx xhwid add marky xhwid add lineto stroke
			strx xhwid sub marky xhwid add moveto
			strx xhwid add marky xhwid sub lineto stroke
		} if
		grid_p 0 eq {		% draw a circle above the string
			strx marky space 0.3 mul 0 360 arc stroke
		} if
		grid_p 1 ge {		% draw a dot by the proper fret
			strx y grid_p space mul sub space 3 div add
			space 3 div 0 360 arc fill
		} if
	} for

	% print "X fr" if requested
	fretno 0 gt {
		/Palatino-Roman findfont space 1.9 mul scalefont setfont
		x strings 0.5 sub space mul add
		y space numvert 0.3 add mul sub moveto
		fretno 2 string cvs show ( fr) show
	} if
	grestore
} def

% x1 y1 x2 y2 whitebox		draw a white rectangle with opposite
%				corners of (x1,y1) and (x2,y2)
/whitebox {
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	1.0 setgray
	newpath
	x1 y1 moveto
	x1 y2 lineto
	x2 y2 lineto
	x2 y1 lineto
	closepath
	fill
	stroke
	0.0 setgray
} def


/LineNum 0 def
/InputFile (unknown) def

% n linenum
/linenum {
	/LineNum exch def
} def

% (inputfilename) inputfile
/inputfile {
	/InputFile exch def
} def

% find size of Encoding and make a dictionary
% that size for bounding box information
mfont0 begin
/dictsize Encoding length def
mfont0 /Mcbbox0 dictsize dict put

% temporarily redefine printmchar0 to get code
5 dict begin
/printmchar0 { {} forall } def

Mcbbox0 Encoding gclef get [ 1790.0 0 -915.0 -1605.0 865.0 3015.0 ] put
Mcbbox0 Encoding fclef get [ 1840.0 0 -1015.0 -1705.0 815.0 655.0 ] put
Mcbbox0 Encoding cclef get [ 1540.0 0 -765.0 -1245.0 765.0 1255.0 ] put
Mcbbox0 Encoding dblwhole get [ 1090.0 0 -535.0 -605.0 545.0 615.0 ] put
Mcbbox0 Encoding 1n get [ 1080.0 0 -535.0 -335.0 535.0 345.0 ] put
Mcbbox0 Encoding 2n get [ 880.0 0 -435.0 -345.0 435.0 355.0 ] put
Mcbbox0 Encoding 4n get [ 840.0 0 -415.0 -335.0 415.0 345.0 ] put
Mcbbox0 Encoding upflag get [ 640.0 0 -335.0 -5.0 295.0 1715.0 ] put
Mcbbox0 Encoding dnflag get [ 640.0 0 -335.0 -1705.0 295.0 15.0 ] put
Mcbbox0 Encoding qwhrest get [ 340.0 0 -165.0 -605.0 165.0 615.0 ] put
Mcbbox0 Encoding dwhrest get [ 340.0 0 -165.0 -5.0 165.0 615.0 ] put
Mcbbox0 Encoding 1rest get [ 1540.0 0 -765.0 -15.0 765.0 645.0 ] put
Mcbbox0 Encoding 2rest get [ 1540.0 0 -765.0 -45.0 765.0 315.0 ] put
Mcbbox0 Encoding 4rest get [ 650.0 0 -345.0 -885.0 295.0 995.0 ] put
Mcbbox0 Encoding 8rest get [ 750.0 0 -305.0 -625.0 435.0 485.0 ] put
Mcbbox0 Encoding 16rest get [ 830.0 0 -415.0 -1215.0 405.0 485.0 ] put
Mcbbox0 Encoding 32rest get [ 940.0 0 -415.0 -1215.0 515.0 1085.0 ] put
Mcbbox0 Encoding 64rest get [ 1040.0 0 -515.0 -1515.0 515.0 1085.0 ] put
Mcbbox0 Encoding 128rest get [ 1140.0 0 -515.0 -1515.0 615.0 1685.0 ] put
Mcbbox0 Encoding 256rest get [ 1250.0 0 -625.0 -2115.0 615.0 1685.0 ] put
Mcbbox0 Encoding ll1rest get [ 840.0 0 -415.0 -15.0 415.0 625.0 ] put
Mcbbox0 Encoding ll2rest get [ 840.0 0 -415.0 -15.0 415.0 325.0 ] put
Mcbbox0 Encoding dot get [ 280.0 0 -135.0 -125.0 135.0 135.0 ] put
Mcbbox0 Encoding nat get [ 520.0 0 -255.0 -855.0 255.0 865.0 ] put
Mcbbox0 Encoding sharp get [ 700.0 0 -345.0 -935.0 345.0 945.0 ] put
Mcbbox0 Encoding flat get [ 580.0 0 -295.0 -405.0 275.0 1115.0 ] put
Mcbbox0 Encoding dblsharp get [ 720.0 0 -355.0 -345.0 355.0 355.0 ] put
Mcbbox0 Encoding dblflat get [ 1160.0 0 -585.0 -405.0 565.0 1115.0 ] put
Mcbbox0 Encoding xnote get [ 880.0 0 -435.0 -365.0 435.0 375.0 ] put
Mcbbox0 Encoding dwhdiamond get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox0 Encoding diamond get [ 880.0 0 -435.0 -305.0 435.0 315.0 ] put
Mcbbox0 Encoding filldiamond get [ 880.0 0 -435.0 -305.0 435.0 315.0 ] put
Mcbbox0 Encoding up2n get [ 880.0 0 -435.0 -345.0 435.0 2115.0 ] put
Mcbbox0 Encoding dn2n get [ 880.0 0 -435.0 -2105.0 435.0 355.0 ] put
Mcbbox0 Encoding up4n get [ 850.0 0 -415.0 -335.0 425.0 2115.0 ] put
Mcbbox0 Encoding dn4n get [ 840.0 0 -415.0 -2105.0 415.0 345.0 ] put
Mcbbox0 Encoding com get [ 1110.0 0 -585.0 -645.0 515.0 655.0 ] put
Mcbbox0 Encoding cut get [ 1110.0 0 -585.0 -905.0 515.0 915.0 ] put
Mcbbox0 Encoding begped get [ 470.0 0 -245.0 -45.0 215.0 615.0 ] put
Mcbbox0 Encoding pedal get [ 1040.0 0 -515.0 -45.0 515.0 675.0 ] put
Mcbbox0 Encoding endped get [ 480.0 0 -215.0 -45.0 255.0 615.0 ] put
Mcbbox0 Encoding dnbow get [ 810.0 0 -395.0 -5.0 405.0 915.0 ] put
Mcbbox0 Encoding upbow get [ 720.0 0 -355.0 -115.0 355.0 925.0 ] put
Mcbbox0 Encoding wedge get [ 340.0 0 -165.0 -5.0 165.0 515.0 ] put
Mcbbox0 Encoding uwedge get [ 340.0 0 -165.0 -5.0 165.0 515.0 ] put
Mcbbox0 Encoding ferm get [ 1640.0 0 -815.0 -5.0 815.0 1015.0 ] put
Mcbbox0 Encoding uferm get [ 1640.0 0 -815.0 -5.0 815.0 1015.0 ] put
Mcbbox0 Encoding sign get [ 1340.0 0 -665.0 -825.0 665.0 835.0 ] put
Mcbbox0 Encoding coda get [ 1640.0 0 -815.0 -855.0 815.0 865.0 ] put
Mcbbox0 Encoding mor get [ 1320.0 0 -655.0 -285.0 655.0 295.0 ] put
Mcbbox0 Encoding invmor get [ 1320.0 0 -655.0 -455.0 655.0 465.0 ] put
Mcbbox0 Encoding turn get [ 1300.0 0 -645.0 -335.0 645.0 345.0 ] put
Mcbbox0 Encoding invturn get [ 1300.0 0 -645.0 -335.0 645.0 345.0 ] put
Mcbbox0 Encoding acc_gt get [ 1170.0 0 -525.0 -345.0 635.0 355.0 ] put
Mcbbox0 Encoding acc_hat get [ 780.0 0 -385.0 -5.0 385.0 875.0 ] put
Mcbbox0 Encoding acc_uhat get [ 780.0 0 -385.0 -5.0 385.0 875.0 ] put
Mcbbox0 Encoding tr get [ 1440.0 0 -715.0 -5.0 715.0 1015.0 ] put
Mcbbox0 Encoding leg get [ 840.0 0 -415.0 -55.0 415.0 65.0 ] put
Mcbbox0 Encoding rr get [ 940.0 0 -465.0 -25.0 465.0 1035.0 ] put
Mcbbox0 Encoding dim get [ 540.0 0 -265.0 -15.0 265.0 905.0 ] put
Mcbbox0 Encoding halfdim get [ 760.0 0 -375.0 -15.0 375.0 1015.0 ] put
Mcbbox0 Encoding triangle get [ 800.0 0 -395.0 -45.0 395.0 785.0 ] put
Mcbbox0 Encoding measrpt get [ 1300.0 0 -645.0 -675.0 645.0 685.0 ] put
Mcbbox0 Encoding copyright get [ 920.0 0 -455.0 -45.0 455.0 855.0 ] put
Mcbbox0 Encoding up8n get [ 1390.0 0 -745.0 -335.0 635.0 2115.0 ] put
Mcbbox0 Encoding dn8n get [ 840.0 0 -415.0 -2105.0 415.0 345.0 ] put
Mcbbox0 Encoding up16n get [ 1390.0 0 -745.0 -335.0 635.0 2115.0 ] put
Mcbbox0 Encoding dn16n get [ 840.0 0 -415.0 -2105.0 415.0 345.0 ] put
Mcbbox0 Encoding up32n get [ 1390.0 0 -745.0 -335.0 635.0 2595.0 ] put
Mcbbox0 Encoding dn32n get [ 840.0 0 -415.0 -2585.0 415.0 345.0 ] put
Mcbbox0 Encoding up64n get [ 1390.0 0 -745.0 -335.0 635.0 3075.0 ] put
Mcbbox0 Encoding dn64n get [ 840.0 0 -415.0 -3065.0 415.0 345.0 ] put
Mcbbox0 Encoding up128n get [ 1390.0 0 -745.0 -335.0 635.0 3555.0 ] put
Mcbbox0 Encoding dn128n get [ 840.0 0 -415.0 -3545.0 415.0 345.0 ] put
Mcbbox0 Encoding up256n get [ 1390.0 0 -745.0 -335.0 635.0 3975.0 ] put
Mcbbox0 Encoding dn256n get [ 840.0 0 -415.0 -3965.0 415.0 345.0 ] put

end
end

/Mfont0 mfont0 definefont


% find size of Encoding and make a dictionary
% that size for bounding box information
mfont1 begin
/dictsize Encoding length def
mfont1 /Mcbbox1 dictsize dict put

% temporarily redefine printmchar1 to get code
5 dict begin
/printmchar1 { {} forall } def

Mcbbox1 Encoding dwhrighttriangle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding righttriangle get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding fillrighttriangle get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding udwhrighttriangle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding urighttriangle get [ 880.0 0 -435.0 -275.0 435.0 315.0 ] put
Mcbbox1 Encoding ufillrighttriangle get [ 880.0 0 -435.0 -275.0 435.0 315.0 ] put
Mcbbox1 Encoding dwhrectangle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding rectangle get [ 880.0 0 -435.0 -275.0 435.0 285.0 ] put
Mcbbox1 Encoding fillrectangle get [ 880.0 0 -435.0 -275.0 435.0 285.0 ] put
Mcbbox1 Encoding dwhisostriangle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding isostriangle get [ 880.0 0 -435.0 -275.0 435.0 315.0 ] put
Mcbbox1 Encoding fillisostriangle get [ 880.0 0 -435.0 -275.0 435.0 315.0 ] put
Mcbbox1 Encoding dwhpiewedge get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding piewedge get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding fillpiewedge get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding dwhsemicircle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding semicircle get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding fillsemicircle get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding dwhslashhead get [ 1410.0 0 -695.0 -725.0 705.0 735.0 ] put
Mcbbox1 Encoding slashhead get [ 1380.0 0 -685.0 -725.0 685.0 735.0 ] put
Mcbbox1 Encoding fillslashhead get [ 1300.0 0 -645.0 -675.0 645.0 685.0 ] put
Mcbbox1 Encoding blankhead get [ 880.0 0 -435.0 -275.0 435.0 285.0 ] put

end
end

/Mfont1 mfont1 definefont

/flagsep 1.60 300 mul def	 % 1.60 stepsizes
%%BeginFeature: *PageSize Default
<< /PageSize [ 595 842 ] >> setpagedevice
%%EndFeature
%%EndProlog
%%Page: 1 1
save
% set up landscape mode
594 0 translate
90 rotate
0.750000 0.750000 scale
%  S_SSV
(kaleidakustikon_12.mup) inputfile
8 linenum
%  S_SSV
10 linenum
%  S_SSV
18 linenum
%  S_SSV
21 linenum
%  S_SSV
24 linenum
%  S_FEED
30 linenum
88.79 690.77 1074.24 5 1.000000 1.000000 staff
88.79 625.88 1074.24 5 1.000000 1.000000 staff
87.79 702.77 613.88 brace
0.70 setlinewidth
88.79 702.77 moveto
88.79 613.88 lineto stroke
%  S_CLEFSIG
30 linenum
100.58 684.77 1.000000 gclef
100.83 631.88 1.000000 fclef
116.62 690.77 1.000000 flat
116.62 619.88 1.000000 flat
/NewCenturySchlbk-Bold findfont
16 scalefont
setfont
122.36 690.77 moveto
(3) show
/NewCenturySchlbk-Bold findfont
16 scalefont
setfont
122.36 678.85 moveto
(4) show
/NewCenturySchlbk-Bold findfont
16 scalefont
setfont
122.36 625.88 moveto
(3) show
/NewCenturySchlbk-Bold findfont
16 scalefont
setfont
122.36 613.96 moveto
(4) show
%  S_CHHEAD
30 linenum
%  S_STAFF
% staff 1
save
146.64 708.77 1.000000 4n
140.41 708.77 moveto
152.87 708.77 lineto stroke
142.96 708.02 moveto
142.96 689.21 lineto stroke
163.70 699.77 1.000000 4n
160.02 699.02 moveto
160.02 683.18 lineto stroke
newpath
142.61 690.71 moveto
160.37 684.68 lineto
160.37 681.68 lineto
142.61 687.71 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
146.64 625.88 1.000000 4rest
restore
%  S_BAR
32 linenum
0.70 setlinewidth
181.56 702.77 moveto
181.56 678.77 lineto stroke
181.56 637.88 moveto
181.56 613.88 lineto stroke
%  S_CHHEAD
35 linenum
%  S_STAFF
% staff 1
save
191.12 693.77 1.000000 4n
187.44 693.02 moveto
187.44 676.25 lineto stroke
207.35 702.77 1.000000 4n
203.67 702.02 moveto
203.67 676.25 lineto stroke
223.57 708.77 1.000000 4n
217.34 708.77 moveto
229.81 708.77 lineto stroke
219.89 708.02 moveto
219.89 676.25 lineto stroke
239.80 702.77 1.000000 4n
236.12 702.02 moveto
236.12 676.25 lineto stroke
256.03 693.77 1.000000 4n
252.34 693.02 moveto
252.34 676.25 lineto stroke
273.09 702.77 1.000000 4n
269.41 702.02 moveto
269.41 676.25 lineto stroke
newpath
187.09 677.75 moveto
269.76 677.75 lineto
269.76 674.75 lineto
187.09 674.75 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
191.12 610.88 1.000000 4n
0.70 setlinewidth
194.80 611.63 moveto
194.80 631.88 lineto stroke
223.57 643.88 1.000000 4n
217.34 643.88 moveto
229.81 643.88 lineto stroke
223.57 637.88 1.000000 4n
223.57 631.88 1.000000 4n
219.89 643.13 moveto
219.89 610.88 lineto stroke
256.03 643.88 1.000000 4n
249.79 643.88 moveto
262.26 643.88 lineto stroke
256.03 637.88 1.000000 4n
256.03 631.88 1.000000 4n
252.34 643.13 moveto
252.34 610.88 lineto stroke
restore
%  S_BAR
37 linenum
0.70 setlinewidth
290.95 702.77 moveto
290.95 678.77 lineto stroke
290.95 637.88 moveto
290.95 613.88 lineto stroke
%  S_CHHEAD
41 linenum
%  S_STAFF
% staff 1
save
302.51 708.77 1.000000 4n
311.78 711.77 1.000000 dot
296.28 708.77 moveto
308.75 708.77 lineto stroke
298.83 708.02 moveto
298.83 687.77 lineto stroke
344.99 708.77 1.000000 4n
338.75 708.77 moveto
351.22 708.77 lineto stroke
341.30 708.02 moveto
341.30 688.84 lineto stroke
361.21 705.77 1.000000 4n
357.53 705.02 moveto
357.53 686.81 lineto stroke
378.28 702.77 1.000000 4n
374.59 702.02 moveto
374.59 684.67 lineto stroke
newpath
340.95 690.34 moveto
374.94 686.17 lineto
374.94 683.17 lineto
340.95 687.34 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
302.51 610.88 1.000000 4n
0.70 setlinewidth
306.20 611.63 moveto
306.20 631.88 lineto stroke
328.94 643.88 1.000000 4n
322.71 643.88 moveto
335.17 643.88 lineto stroke
328.94 637.88 1.000000 4n
328.94 631.88 1.000000 4n
325.26 643.13 moveto
325.26 610.88 lineto stroke
361.21 643.88 1.000000 4n
354.98 643.88 moveto
367.44 643.88 lineto stroke
361.21 637.88 1.000000 4n
361.21 631.88 1.000000 4n
357.53 643.13 moveto
357.53 610.88 lineto stroke
restore
%  S_BAR
43 linenum
0.70 setlinewidth
396.14 702.77 moveto
396.14 678.77 lineto stroke
396.14 637.88 moveto
396.14 613.88 lineto stroke
%  S_CHHEAD
47 linenum
%  S_STAFF
% staff 1
save
414.34 696.77 1.000000 4n
404.98 696.77 1.000000 sharp
410.65 696.02 moveto
410.65 677.37 lineto stroke
430.56 699.77 1.000000 4n
426.88 699.02 moveto
426.88 677.37 lineto stroke
446.79 711.77 1.000000 4n
440.56 708.77 moveto
453.02 708.77 lineto stroke
443.11 711.02 moveto
443.11 677.37 lineto stroke
463.01 705.77 1.000000 4n
459.33 705.02 moveto
459.33 677.37 lineto stroke
479.24 699.77 1.000000 4n
475.56 699.02 moveto
475.56 677.37 lineto stroke
496.30 693.77 1.000000 4n
492.62 693.02 moveto
492.62 677.37 lineto stroke
newpath
410.30 678.87 moveto
492.97 678.87 lineto
492.97 675.87 lineto
410.30 675.87 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
414.34 622.88 1.000000 4n
0.70 setlinewidth
418.02 623.63 moveto
418.02 643.88 lineto stroke
446.79 643.88 1.000000 4n
440.56 643.88 moveto
453.02 643.88 lineto stroke
439.42 640.88 1.000000 4n
446.79 634.88 1.000000 4n
443.11 643.13 moveto
443.11 613.88 lineto stroke
479.24 643.88 1.000000 4n
473.01 643.88 moveto
485.47 643.88 lineto stroke
471.88 640.88 1.000000 4n
479.24 634.88 1.000000 4n
475.56 643.13 moveto
475.56 613.88 lineto stroke
restore
%  S_BAR
49 linenum
0.70 setlinewidth
514.16 702.77 moveto
514.16 678.77 lineto stroke
514.16 637.88 moveto
514.16 613.88 lineto stroke
%  S_CHHEAD
53 linenum
%  S_STAFF
% staff 1
save
530.56 690.77 1.000000 4n
522.11 690.77 1.000000 nat
526.88 690.02 moveto
526.88 673.63 lineto stroke
546.79 693.77 1.000000 4n
543.11 693.02 moveto
543.11 673.63 lineto stroke
563.01 696.77 1.000000 4n
559.33 696.02 moveto
559.33 673.63 lineto stroke
578.21 693.77 1.000000 4n
574.53 693.02 moveto
574.53 673.63 lineto stroke
596.79 690.77 1.000000 4n
588.02 690.77 1.000000 flat
593.11 690.02 moveto
593.11 673.63 lineto stroke
613.86 693.77 1.000000 4n
610.17 693.02 moveto
610.17 673.63 lineto stroke
newpath
526.53 675.13 moveto
610.52 675.13 lineto
610.52 672.13 lineto
526.53 672.13 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
530.56 622.88 1.000000 4n
0.70 setlinewidth
534.24 623.63 moveto
534.24 643.88 lineto stroke
563.01 643.88 1.000000 4n
556.78 643.88 moveto
569.25 643.88 lineto stroke
563.01 634.88 1.000000 4n
563.01 628.88 1.000000 4n
559.33 643.13 moveto
559.33 607.88 lineto stroke
596.79 643.88 1.000000 4n
590.56 643.88 moveto
603.02 643.88 lineto stroke
596.79 634.88 1.000000 4n
596.79 628.88 1.000000 4n
593.11 643.13 moveto
593.11 607.88 lineto stroke
restore
%  S_BAR
55 linenum
0.70 setlinewidth
631.72 702.77 moveto
631.72 678.77 lineto stroke
631.72 637.88 moveto
631.72 613.88 lineto stroke
%  S_CHHEAD
59 linenum
%  S_STAFF
% staff 1
save
640.25 687.77 1.000000 4n
636.57 687.02 moveto
636.57 671.27 lineto stroke
659.98 705.77 1.000000 4n
650.63 705.77 1.000000 sharp
656.30 705.02 moveto
656.30 671.27 lineto stroke
676.21 708.77 1.000000 4n
669.97 708.77 moveto
682.44 708.77 lineto stroke
672.52 708.02 moveto
672.52 671.27 lineto stroke
692.43 702.77 1.000000 4n
688.75 702.02 moveto
688.75 671.27 lineto stroke
708.66 693.77 1.000000 4n
704.98 693.02 moveto
704.98 671.27 lineto stroke
725.72 687.77 1.000000 4n
722.04 687.02 moveto
722.04 671.27 lineto stroke
newpath
636.22 672.77 moveto
722.39 672.77 lineto
722.39 669.77 lineto
636.22 669.77 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
640.25 610.88 1.000000 4n
0.70 setlinewidth
643.93 611.63 moveto
643.93 631.88 lineto stroke
676.21 643.88 1.000000 4n
669.97 643.88 moveto
682.44 643.88 lineto stroke
676.21 637.88 1.000000 4n
676.21 631.88 1.000000 4n
672.52 643.13 moveto
672.52 610.88 lineto stroke
708.66 643.88 1.000000 4n
702.43 643.88 moveto
714.89 643.88 lineto stroke
708.66 637.88 1.000000 4n
708.66 631.88 1.000000 4n
704.98 643.13 moveto
704.98 610.88 lineto stroke
restore
%  S_BAR
61 linenum
0.70 setlinewidth
743.58 702.77 moveto
743.58 678.77 lineto stroke
743.58 637.88 moveto
743.58 613.88 lineto stroke
%  S_CHHEAD
65 linenum
%  S_STAFF
% staff 1
save
753.14 684.77 1.000000 4n
749.46 684.02 moveto
749.46 665.83 lineto stroke
769.37 705.77 1.000000 4n
765.69 705.02 moveto
765.69 667.81 lineto stroke
785.59 687.77 1.000000 4n
781.91 687.02 moveto
781.91 669.80 lineto stroke
801.82 708.77 1.000000 4n
795.59 708.77 moveto
808.05 708.77 lineto stroke
798.14 708.02 moveto
798.14 671.79 lineto stroke
818.04 690.77 1.000000 4n
814.36 690.02 moveto
814.36 673.77 lineto stroke
835.11 711.77 1.000000 4n
828.88 708.77 moveto
841.34 708.77 lineto stroke
831.43 711.02 moveto
831.43 675.86 lineto stroke
newpath
749.11 667.33 moveto
831.78 677.36 lineto
831.78 674.36 lineto
749.11 664.33 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
753.14 646.88 1.000000 4n
0.70 setlinewidth
746.91 643.88 moveto
759.37 643.88 lineto stroke
753.14 640.88 1.000000 4n
749.46 646.13 moveto
749.46 619.88 lineto stroke
785.59 649.88 1.000000 4n
776.82 649.88 1.000000 flat
779.36 649.88 moveto
791.83 649.88 lineto stroke
779.36 643.88 moveto
791.83 643.88 lineto stroke
785.59 643.88 1.000000 4n
779.36 643.88 moveto
791.83 643.88 lineto stroke
785.59 631.88 1.000000 4n
776.24 631.88 1.000000 sharp
781.91 649.13 moveto
781.91 610.88 lineto stroke
818.04 646.88 1.000000 4n
811.81 643.88 moveto
824.28 643.88 lineto stroke
818.04 640.88 1.000000 4n
818.04 634.88 1.000000 4n
814.36 646.13 moveto
814.36 613.88 lineto stroke
restore
%  S_BAR
67 linenum
0.70 setlinewidth
852.97 702.77 moveto
852.97 678.77 lineto stroke
852.97 637.88 moveto
852.97 613.88 lineto stroke
%  S_CHHEAD
71 linenum
%  S_STAFF
% staff 1
save
865.59 678.77 1.000000 4n
869.27 679.52 moveto
869.27 699.77 lineto stroke
872.29 699.77 1.000000 dnflag
882.83 693.77 1.000000 4n
879.15 693.02 moveto
879.15 672.77 lineto stroke
915.10 690.77 1.000000 4n
906.65 690.77 1.000000 nat
911.42 690.02 moveto
911.42 673.01 lineto stroke
931.33 696.77 1.000000 4n
927.65 696.02 moveto
927.65 673.01 lineto stroke
948.39 693.77 1.000000 4n
944.71 693.02 moveto
944.71 673.01 lineto stroke
newpath
911.07 674.51 moveto
945.06 674.51 lineto
945.06 671.51 lineto
911.07 671.51 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
861.69 622.88 1.000000 4n
0.70 setlinewidth
865.37 623.63 moveto
865.37 643.88 lineto stroke
899.06 640.88 1.000000 4n
899.06 634.88 1.000000 4n
902.74 635.63 moveto
902.74 656.88 lineto stroke
931.33 640.88 1.000000 4n
931.33 634.88 1.000000 4n
935.01 635.63 moveto
935.01 656.88 lineto stroke
869.48 622.88 1.000000 2n
878.96 622.88 1.000000 dot
865.59 622.13 moveto
865.59 602.88 lineto stroke
restore
%  S_BAR
74 linenum
0.70 setlinewidth
966.25 702.77 moveto
966.25 678.77 lineto stroke
966.25 637.88 moveto
966.25 613.88 lineto stroke
%  S_CHHEAD
77 linenum
%  S_STAFF
% staff 1
save
977.82 681.77 1.000000 4n
981.50 682.52 moveto
981.50 702.77 lineto stroke
1006.91 690.77 1.000000 4rest
restore
%  S_STAFF
% staff 2
save
977.82 637.88 1.000000 4n
977.82 631.88 1.000000 4n
0.70 setlinewidth
974.14 637.13 moveto
974.14 610.88 lineto stroke
1006.91 610.88 1.000000 4n
1010.59 611.63 moveto
1010.59 631.88 lineto stroke
restore
%  S_BAR
79 linenum
1038.29 693.77 1.000000 dot
1038.29 687.77 1.000000 dot
1042.29 702.77 moveto
1042.29 678.77 lineto stroke
3.00 setlinewidth
1046.29 702.77 moveto
1046.29 678.77 lineto stroke
0.70 setlinewidth
1038.29 628.88 1.000000 dot
1038.29 622.88 1.000000 dot
1042.29 637.88 moveto
1042.29 613.88 lineto stroke
3.00 setlinewidth
1046.29 637.88 moveto
1046.29 613.88 lineto stroke
0.70 setlinewidth
%  S_SSV
81 linenum
%  S_CLEFSIG
87 linenum
1054.03 690.77 1.000000 flat
1059.52 699.77 1.000000 flat
1065.01 687.77 1.000000 flat
1070.50 696.77 1.000000 flat
1054.03 619.88 1.000000 flat
1059.52 628.88 1.000000 flat
1065.01 616.88 1.000000 flat
1070.50 625.88 1.000000 flat
%  S_FEED
87 linenum
50.50 534.84 1074.24 5 1.000000 1.000000 staff
/Times-Roman findfont
11 scalefont
setfont
55.00 561.90 moveto
(10) show
50.50 480.84 1074.24 5 1.000000 1.000000 staff
49.50 546.84 468.84 brace
50.50 546.84 moveto
50.50 468.84 lineto stroke
%  S_CLEFSIG
87 linenum
62.29 528.84 1.000000 gclef
62.54 486.84 1.000000 fclef
78.33 534.84 1.000000 flat
83.82 543.84 1.000000 flat
89.31 531.84 1.000000 flat
94.80 540.84 1.000000 flat
78.33 474.84 1.000000 flat
83.82 483.84 1.000000 flat
89.31 471.84 1.000000 flat
94.80 480.84 1.000000 flat
112.54 537.84 1.000000 dot
112.54 531.84 1.000000 dot
109.54 546.84 moveto
109.54 522.84 lineto stroke
3.00 setlinewidth
105.54 546.84 moveto
105.54 522.84 lineto stroke
0.70 setlinewidth
112.54 483.84 1.000000 dot
112.54 477.84 1.000000 dot
109.54 492.84 moveto
109.54 468.84 lineto stroke
3.00 setlinewidth
105.54 492.84 moveto
105.54 468.84 lineto stroke
0.70 setlinewidth
%  S_CHHEAD
87 linenum
%  S_STAFF
% staff 1
save
129.41 537.84 1.000000 4n
138.67 537.84 1.000000 dot
125.72 537.09 moveto
125.72 518.34 lineto stroke
152.64 537.84 1.000000 4n
148.96 537.09 moveto
148.96 518.34 lineto stroke
newpath
125.37 519.84 moveto
149.31 519.84 lineto
149.31 516.84 lineto
125.37 516.84 lineto
closepath
fill
newpath
148.61 524.84 moveto
140.55 524.84 lineto
140.55 521.84 lineto
148.61 521.84 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
129.41 480.84 1.000000 4rest
restore
%  S_BAR
89 linenum
0.70 setlinewidth
165.04 546.84 moveto
165.04 522.84 lineto stroke
165.04 492.84 moveto
165.04 468.84 lineto stroke
%  S_CHHEAD
92 linenum
%  S_STAFF
% staff 1
save
174.71 558.84 1.000000 4n
183.97 561.84 1.000000 dot
168.47 558.84 moveto
180.94 558.84 lineto stroke
168.47 552.84 moveto
180.94 552.84 lineto stroke
171.02 558.09 moveto
171.02 534.84 lineto stroke
225.24 555.84 1.000000 4n
219.00 552.84 moveto
231.47 552.84 lineto stroke
221.55 555.09 moveto
221.55 533.34 lineto stroke
242.08 561.84 1.000000 4n
235.85 558.84 moveto
248.31 558.84 lineto stroke
235.85 552.84 moveto
248.31 552.84 lineto stroke
238.40 561.09 moveto
238.40 534.81 lineto stroke
259.76 558.84 1.000000 4n
253.53 558.84 moveto
265.99 558.84 lineto stroke
253.53 552.84 moveto
265.99 552.84 lineto stroke
256.08 558.09 moveto
256.08 536.34 lineto stroke
newpath
221.20 534.84 moveto
256.43 537.84 lineto
256.43 534.84 lineto
221.20 531.84 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
174.71 477.84 1.000000 4n
0.70 setlinewidth
171.02 477.09 moveto
171.02 460.95 lineto stroke
191.55 498.84 1.000000 4n
185.32 498.84 moveto
197.78 498.84 lineto stroke
187.87 498.09 moveto
187.87 462.58 lineto stroke
208.39 495.84 1.000000 4n
208.39 489.84 1.000000 4n
204.71 495.09 moveto
204.71 464.20 lineto stroke
225.24 498.84 1.000000 4n
219.00 498.84 moveto
231.47 498.84 lineto stroke
221.55 498.09 moveto
221.55 465.83 lineto stroke
242.08 495.84 1.000000 4n
242.08 489.84 1.000000 4n
238.40 495.09 moveto
238.40 467.45 lineto stroke
259.76 498.84 1.000000 4n
253.53 498.84 moveto
265.99 498.84 lineto stroke
256.08 498.09 moveto
256.08 469.15 lineto stroke
newpath
170.67 462.45 moveto
256.43 470.65 lineto
256.43 467.65 lineto
170.67 459.45 lineto
closepath
fill
restore
%  S_BAR
94 linenum
0.70 setlinewidth
278.14 546.84 moveto
278.14 522.84 lineto stroke
278.14 492.84 moveto
278.14 468.84 lineto stroke
%  S_CHHEAD
98 linenum
%  S_STAFF
% staff 1
save
286.67 558.84 1.000000 4n
280.44 558.84 moveto
292.90 558.84 lineto stroke
280.44 552.84 moveto
292.90 552.84 lineto stroke
282.99 558.09 moveto
282.99 535.80 lineto stroke
303.57 555.84 1.000000 4n
295.12 555.84 1.000000 nat
297.34 552.84 moveto
309.81 552.84 lineto stroke
299.89 555.09 moveto
299.89 534.23 lineto stroke
322.25 555.84 1.000000 4n
313.48 555.84 1.000000 flat
316.02 552.84 moveto
328.49 552.84 lineto stroke
318.57 555.09 moveto
318.57 532.49 lineto stroke
339.10 549.84 1.000000 4n
335.42 549.09 moveto
335.42 530.93 lineto stroke
355.94 555.84 1.000000 4n
349.71 552.84 moveto
362.17 552.84 lineto stroke
352.26 555.09 moveto
352.26 529.36 lineto stroke
373.62 543.84 1.000000 4n
369.94 543.09 moveto
369.94 527.72 lineto stroke
newpath
282.64 537.30 moveto
370.29 529.22 lineto
370.29 526.22 lineto
282.64 534.30 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
286.67 477.84 1.000000 4n
0.70 setlinewidth
282.99 477.09 moveto
282.99 460.97 lineto stroke
303.57 498.84 1.000000 4n
297.34 498.84 moveto
309.81 498.84 lineto stroke
299.89 498.09 moveto
299.89 462.55 lineto stroke
322.25 495.84 1.000000 4n
322.25 489.84 1.000000 4n
318.57 495.09 moveto
318.57 464.30 lineto stroke
339.10 498.84 1.000000 4n
332.87 498.84 moveto
345.33 498.84 lineto stroke
335.42 498.09 moveto
335.42 465.87 lineto stroke
355.94 495.84 1.000000 4n
355.94 489.84 1.000000 4n
352.26 495.09 moveto
352.26 467.45 lineto stroke
373.62 498.84 1.000000 4n
367.39 498.84 moveto
379.86 498.84 lineto stroke
369.94 498.09 moveto
369.94 469.11 lineto stroke
newpath
282.64 462.47 moveto
370.29 470.61 lineto
370.29 467.61 lineto
282.64 459.47 lineto
closepath
fill
restore
%  S_BAR
100 linenum
0.70 setlinewidth
392.00 546.84 moveto
392.00 522.84 lineto stroke
392.00 492.84 moveto
392.00 468.84 lineto stroke
%  S_CHHEAD
104 linenum
%  S_STAFF
% staff 1
save
401.66 543.84 1.000000 4n
397.98 543.09 moveto
397.98 526.72 lineto stroke
418.50 546.84 1.000000 4n
414.82 546.09 moveto
414.82 527.31 lineto stroke
435.35 549.84 1.000000 4n
431.67 549.09 moveto
431.67 527.90 lineto stroke
452.19 546.84 1.000000 4n
448.51 546.09 moveto
448.51 528.49 lineto stroke
469.04 552.84 1.000000 4n
462.80 552.84 moveto
475.27 552.84 lineto stroke
465.35 552.09 moveto
465.35 529.08 lineto stroke
486.72 546.84 1.000000 4n
483.04 546.09 moveto
483.04 529.70 lineto stroke
newpath
397.63 528.22 moveto
483.39 531.20 lineto
483.39 528.20 lineto
397.63 525.22 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
401.66 477.84 1.000000 4n
0.70 setlinewidth
397.98 477.09 moveto
397.98 460.98 lineto stroke
418.50 498.84 1.000000 4n
412.27 498.84 moveto
424.74 498.84 lineto stroke
414.82 498.09 moveto
414.82 462.49 lineto stroke
435.35 492.84 1.000000 4n
435.35 486.84 1.000000 4n
431.67 492.09 moveto
431.67 464.00 lineto stroke
452.19 498.84 1.000000 4n
445.96 498.84 moveto
458.42 498.84 lineto stroke
448.51 498.09 moveto
448.51 465.51 lineto stroke
469.04 492.84 1.000000 4n
469.04 486.84 1.000000 4n
465.35 492.09 moveto
465.35 467.02 lineto stroke
486.72 498.84 1.000000 4n
480.49 498.84 moveto
492.95 498.84 lineto stroke
483.04 498.09 moveto
483.04 468.60 lineto stroke
newpath
397.63 462.48 moveto
483.39 470.10 lineto
483.39 467.10 lineto
397.63 459.48 lineto
closepath
fill
restore
%  S_BAR
106 linenum
0.70 setlinewidth
505.09 546.84 moveto
505.09 522.84 lineto stroke
505.09 492.84 moveto
505.09 468.84 lineto stroke
%  S_CHHEAD
110 linenum
%  S_STAFF
% staff 1
save
513.98 537.84 1.000000 4n
510.30 537.09 moveto
510.30 520.03 lineto stroke
525.80 546.84 1.000000 4n
522.12 546.09 moveto
522.12 523.88 lineto stroke
544.15 552.84 1.000000 4n
537.92 552.84 moveto
549.24 552.84 lineto stroke
540.47 552.09 moveto
540.47 529.85 lineto stroke
556.33 558.84 1.000000 4n
550.10 558.84 moveto
561.25 558.84 lineto stroke
551.74 552.84 moveto
560.75 552.84 lineto stroke
552.65 558.09 moveto
552.65 533.34 lineto stroke
568.16 564.84 1.000000 4n
561.93 564.84 moveto
574.39 564.84 lineto stroke
563.75 558.84 moveto
574.39 558.84 lineto stroke
563.75 552.84 moveto
574.39 552.84 lineto stroke
564.48 564.09 moveto
564.48 534.52 lineto stroke
586.51 570.84 1.000000 4n
580.28 570.84 moveto
591.99 570.84 lineto stroke
580.28 564.84 moveto
591.49 564.84 lineto stroke
580.28 558.84 moveto
591.49 558.84 lineto stroke
580.28 552.84 moveto
591.49 552.84 lineto stroke
582.83 570.09 moveto
582.83 536.34 lineto stroke
599.47 576.84 1.000000 4n
593.23 576.84 moveto
605.70 576.84 lineto stroke
594.49 570.84 moveto
605.70 570.84 lineto stroke
594.49 564.84 moveto
605.70 564.84 lineto stroke
594.49 558.84 moveto
605.70 558.84 lineto stroke
594.49 552.84 moveto
605.70 552.84 lineto stroke
603.15 577.59 moveto
603.15 591.88 lineto stroke
617.15 525.84 1.000000 4n
620.83 526.59 moveto
620.83 585.44 lineto stroke
/NewCenturySchlbk-BoldItalic findfont
11 scalefont
setfont
525.90 554.05 moveto
(3) show
/NewCenturySchlbk-BoldItalic findfont
11 scalefont
setfont
568.25 571.75 moveto
(3) show
newpath
509.95 521.53 moveto
540.82 531.35 lineto
540.82 528.35 lineto
509.95 518.53 lineto
closepath
fill
newpath
552.30 534.84 moveto
583.18 537.84 lineto
583.18 534.84 lineto
552.30 531.84 lineto
closepath
fill
newpath
602.80 593.38 moveto
621.18 586.94 lineto
621.18 583.94 lineto
602.80 590.38 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
513.98 477.84 1.000000 4n
0.70 setlinewidth
510.30 477.09 moveto
510.30 461.06 lineto stroke
534.80 498.84 1.000000 4n
528.57 498.84 moveto
541.03 498.84 lineto stroke
531.12 498.09 moveto
531.12 462.54 lineto stroke
556.33 492.84 1.000000 4n
556.33 486.84 1.000000 4n
552.65 492.09 moveto
552.65 464.07 lineto stroke
577.16 498.84 1.000000 4n
570.93 498.84 moveto
583.39 498.84 lineto stroke
573.48 498.09 moveto
573.48 465.55 lineto stroke
599.47 492.84 1.000000 4n
599.47 486.84 1.000000 4n
595.78 492.09 moveto
595.78 467.13 lineto stroke
617.15 498.84 1.000000 4n
610.92 498.84 moveto
623.38 498.84 lineto stroke
613.47 498.09 moveto
613.47 468.39 lineto stroke
newpath
509.95 462.56 moveto
613.82 469.89 lineto
613.82 466.89 lineto
509.95 459.56 lineto
closepath
fill
restore
%  S_BAR
112 linenum
0.70 setlinewidth
635.52 546.84 moveto
635.52 522.84 lineto stroke
635.52 492.84 moveto
635.52 468.84 lineto stroke
%  S_CHHEAD
116 linenum
%  S_STAFF
% staff 1
save
644.34 522.84 1.000000 4n
648.02 523.59 moveto
648.02 543.84 lineto stroke
651.05 543.84 1.000000 dnflag
662.03 534.84 1.000000 4n
658.35 534.09 moveto
658.35 513.84 lineto stroke
695.71 528.84 1.000000 4n
699.40 529.59 moveto
699.40 552.93 lineto stroke
712.56 534.84 1.000000 4n
716.24 535.59 moveto
716.24 550.84 lineto stroke
730.24 522.84 1.000000 4n
733.92 523.59 moveto
733.92 548.65 lineto stroke
newpath
699.05 554.43 moveto
734.27 550.15 lineto
734.27 547.15 lineto
699.05 551.43 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
644.34 477.84 1.000000 4n
0.70 setlinewidth
640.66 477.09 moveto
640.66 460.95 lineto stroke
662.03 498.84 1.000000 4n
655.80 498.84 moveto
668.26 498.84 lineto stroke
658.35 498.09 moveto
658.35 462.66 lineto stroke
678.87 495.84 1.000000 4n
678.87 489.84 1.000000 4n
675.19 495.09 moveto
675.19 464.29 lineto stroke
695.71 498.84 1.000000 4n
689.48 498.84 moveto
701.95 498.84 lineto stroke
692.03 498.09 moveto
692.03 465.92 lineto stroke
712.56 495.84 1.000000 4n
712.56 489.84 1.000000 4n
708.88 495.09 moveto
708.88 467.55 lineto stroke
730.24 498.84 1.000000 4n
724.01 498.84 moveto
736.47 498.84 lineto stroke
726.56 498.09 moveto
726.56 469.25 lineto stroke
newpath
640.31 462.45 moveto
726.91 470.75 lineto
726.91 467.75 lineto
640.31 459.45 lineto
closepath
fill
restore
%  S_BAR
118 linenum
0.70 setlinewidth
748.62 546.84 moveto
748.62 522.84 lineto stroke
748.62 492.84 moveto
748.62 468.84 lineto stroke
%  S_CHHEAD
122 linenum
%  S_STAFF
% staff 1
save
758.28 525.84 1.000000 4n
761.96 526.59 moveto
761.96 555.19 lineto stroke
775.12 531.84 1.000000 4n
778.80 532.59 moveto
778.80 556.41 lineto stroke
791.96 540.84 1.000000 4n
795.65 541.59 moveto
795.65 557.64 lineto stroke
807.68 537.84 1.000000 4n
811.36 538.59 moveto
811.36 558.77 lineto stroke
825.71 534.84 1.000000 4n
817.26 534.84 1.000000 nat
829.39 535.59 moveto
829.39 560.08 lineto stroke
843.39 537.84 1.000000 4n
847.08 538.59 moveto
847.08 561.36 lineto stroke
newpath
761.61 556.69 moveto
847.43 562.86 lineto
847.43 559.86 lineto
761.61 553.69 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
758.28 477.84 1.000000 4n
0.70 setlinewidth
754.60 477.09 moveto
754.60 460.99 lineto stroke
775.12 498.84 1.000000 4n
768.89 498.84 moveto
781.35 498.84 lineto stroke
771.44 498.09 moveto
771.44 462.48 lineto stroke
791.96 492.84 1.000000 4n
791.96 486.84 1.000000 4n
788.28 492.09 moveto
788.28 463.97 lineto stroke
807.68 498.84 1.000000 4n
801.45 498.84 moveto
813.91 498.84 lineto stroke
804.00 498.09 moveto
804.00 465.36 lineto stroke
825.71 492.84 1.000000 4n
825.71 486.84 1.000000 4n
822.03 492.09 moveto
822.03 466.96 lineto stroke
843.39 498.84 1.000000 4n
837.16 498.84 moveto
849.63 498.84 lineto stroke
839.71 498.09 moveto
839.71 468.53 lineto stroke
newpath
754.25 462.49 moveto
840.06 470.03 lineto
840.06 467.03 lineto
754.25 459.49 lineto
closepath
fill
restore
%  S_BAR
124 linenum
0.70 setlinewidth
861.77 546.84 moveto
861.77 522.84 lineto stroke
861.77 492.84 moveto
861.77 468.84 lineto stroke
%  S_CHHEAD
128 linenum
%  S_STAFF
% staff 1
save
871.43 546.84 1.000000 4n
867.75 546.09 moveto
867.75 525.84 lineto stroke
905.12 555.84 1.000000 4n
898.89 552.84 moveto
911.35 552.84 lineto stroke
905.12 549.84 1.000000 4n
905.12 537.84 1.000000 4n
901.44 555.09 moveto
901.44 516.84 lineto stroke
938.81 552.84 1.000000 4n
932.57 552.84 moveto
945.04 552.84 lineto stroke
938.81 546.84 1.000000 4n
938.81 537.84 1.000000 4n
935.12 552.09 moveto
935.12 516.84 lineto stroke
restore
%  S_STAFF
% staff 2
save
871.43 477.84 1.000000 4n
0.70 setlinewidth
867.75 477.09 moveto
867.75 461.06 lineto stroke
888.27 498.84 1.000000 4n
882.04 498.84 moveto
894.51 498.84 lineto stroke
884.59 498.09 moveto
884.59 462.24 lineto stroke
905.12 504.84 1.000000 4n
898.89 504.84 moveto
911.35 504.84 lineto stroke
898.89 498.84 moveto
911.35 498.84 lineto stroke
901.44 504.09 moveto
901.44 463.43 lineto stroke
921.96 498.84 1.000000 4n
915.73 498.84 moveto
928.19 498.84 lineto stroke
918.28 498.09 moveto
918.28 464.61 lineto stroke
938.81 507.84 1.000000 4n
932.57 504.84 moveto
945.04 504.84 lineto stroke
932.57 498.84 moveto
945.04 498.84 lineto stroke
935.12 507.09 moveto
935.12 465.79 lineto stroke
956.49 486.84 1.000000 4n
952.81 486.09 moveto
952.81 467.03 lineto stroke
newpath
867.40 462.56 moveto
953.16 468.53 lineto
953.16 465.53 lineto
867.40 459.56 lineto
closepath
fill
restore
%  S_BAR
130 linenum
0.70 setlinewidth
974.86 546.84 moveto
974.86 522.84 lineto stroke
974.86 492.84 moveto
974.86 468.84 lineto stroke
%  S_CHHEAD
133 linenum
%  S_STAFF
% staff 1
save
986.82 549.84 1.000000 2n
986.82 543.84 1.000000 2n
986.82 537.84 1.000000 2n
982.92 549.09 moveto
982.92 516.84 lineto stroke
restore
%  S_STAFF
% staff 2
save
986.82 498.84 1.000000 4n
0.70 setlinewidth
980.59 498.84 moveto
993.05 498.84 lineto stroke
983.14 498.09 moveto
983.14 477.84 lineto stroke
1016.99 477.84 1.000000 4n
1020.67 478.59 moveto
1020.67 498.84 lineto stroke
restore
%  S_BAR
135 linenum
1049.26 537.84 1.000000 dot
1049.26 531.84 1.000000 dot
1053.26 546.84 moveto
1053.26 522.84 lineto stroke
3.00 setlinewidth
1057.26 546.84 moveto
1057.26 522.84 lineto stroke
0.70 setlinewidth
1049.26 483.84 1.000000 dot
1049.26 477.84 1.000000 dot
1053.26 492.84 moveto
1053.26 468.84 lineto stroke
3.00 setlinewidth
1057.26 492.84 moveto
1057.26 468.84 lineto stroke
0.70 setlinewidth
%  S_SSV
137 linenum
%  S_CLEFSIG
143 linenum
1065.01 534.84 1.000000 flat
1070.50 543.84 1.000000 flat
1065.01 474.84 1.000000 flat
1070.50 483.84 1.000000 flat
%  S_FEED
143 linenum
50.50 396.84 1074.24 5 1.000000 1.000000 staff
/Times-Roman findfont
11 scalefont
setfont
55.00 423.90 moveto
(18) show
50.50 332.56 1074.24 5 1.000000 1.000000 staff
49.50 408.84 320.56 brace
50.50 408.84 moveto
50.50 320.56 lineto stroke
%  S_CLEFSIG
143 linenum
62.29 390.84 1.000000 gclef
62.54 338.56 1.000000 fclef
78.33 396.84 1.000000 flat
83.82 405.84 1.000000 flat
78.33 326.56 1.000000 flat
83.82 335.56 1.000000 flat
101.56 399.84 1.000000 dot
101.56 393.84 1.000000 dot
98.56 408.84 moveto
98.56 384.84 lineto stroke
3.00 setlinewidth
94.56 408.84 moveto
94.56 384.84 lineto stroke
0.70 setlinewidth
101.56 335.56 1.000000 dot
101.56 329.56 1.000000 dot
98.56 344.56 moveto
98.56 320.56 lineto stroke
3.00 setlinewidth
94.56 344.56 moveto
94.56 320.56 lineto stroke
0.70 setlinewidth
%  S_CHHEAD
143 linenum
%  S_STAFF
% staff 1
save
121.83 426.84 1.000000 4n
115.60 426.84 moveto
128.06 426.84 lineto stroke
115.60 420.84 moveto
128.06 420.84 lineto stroke
115.60 414.84 moveto
128.06 414.84 lineto stroke
118.15 426.09 moveto
118.15 396.84 lineto stroke
restore
%  S_STAFF
% staff 2
save
121.83 332.56 1.000000 4rest
restore
%  S_BAR
145 linenum
0.70 setlinewidth
151.54 408.84 moveto
151.54 384.84 lineto stroke
151.54 344.56 moveto
151.54 320.56 lineto stroke
%  S_CHHEAD
148 linenum
%  S_STAFF
% staff 1
save
161.31 426.84 1.000000 4n
155.08 426.84 moveto
167.54 426.84 lineto stroke
155.08 420.84 moveto
167.54 420.84 lineto stroke
155.08 414.84 moveto
167.54 414.84 lineto stroke
157.63 426.09 moveto
157.63 398.34 lineto stroke
178.80 435.84 1.000000 4n
172.56 432.84 moveto
185.03 432.84 lineto stroke
172.56 426.84 moveto
185.03 426.84 lineto stroke
172.56 420.84 moveto
185.03 420.84 lineto stroke
172.56 414.84 moveto
185.03 414.84 lineto stroke
175.11 435.09 moveto
175.11 397.75 lineto stroke
196.28 423.84 1.000000 4n
190.05 420.84 moveto
202.51 420.84 lineto stroke
190.05 414.84 moveto
202.51 414.84 lineto stroke
192.60 423.09 moveto
192.60 397.15 lineto stroke
213.77 426.84 1.000000 4n
207.54 426.84 moveto
220.00 426.84 lineto stroke
207.54 420.84 moveto
220.00 420.84 lineto stroke
207.54 414.84 moveto
220.00 414.84 lineto stroke
210.09 426.09 moveto
210.09 396.56 lineto stroke
231.25 417.84 1.000000 4n
225.02 414.84 moveto
237.49 414.84 lineto stroke
227.57 417.09 moveto
227.57 395.97 lineto stroke
249.58 423.84 1.000000 4n
243.35 420.84 moveto
255.81 420.84 lineto stroke
243.35 414.84 moveto
255.81 414.84 lineto stroke
245.90 423.09 moveto
245.90 395.34 lineto stroke
newpath
157.28 399.84 moveto
246.25 396.84 lineto
246.25 393.84 lineto
157.28 396.84 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
161.31 326.56 1.000000 4n
0.70 setlinewidth
164.99 327.31 moveto
164.99 347.56 lineto stroke
196.28 353.56 1.000000 4n
190.05 350.56 moveto
202.51 350.56 lineto stroke
196.28 347.56 1.000000 4n
196.28 338.56 1.000000 4n
192.60 352.81 moveto
192.60 317.56 lineto stroke
231.25 353.56 1.000000 4n
225.02 350.56 moveto
237.49 350.56 lineto stroke
231.25 347.56 1.000000 4n
231.25 338.56 1.000000 4n
227.57 352.81 moveto
227.57 317.56 lineto stroke
restore
%  S_BAR
150 linenum
0.70 setlinewidth
268.49 408.84 moveto
268.49 384.84 lineto stroke
268.49 344.56 moveto
268.49 320.56 lineto stroke
%  S_CHHEAD
154 linenum
%  S_STAFF
% staff 1
save
280.42 408.84 1.000000 4n
289.68 411.84 1.000000 dot
276.74 408.09 moveto
276.74 387.84 lineto stroke
326.19 402.84 1.000000 4n
322.51 402.09 moveto
322.51 384.13 lineto stroke
342.53 405.84 1.000000 4n
338.85 405.09 moveto
338.85 384.13 lineto stroke
362.00 405.84 1.000000 4n
353.55 405.84 1.000000 nat
358.32 405.09 moveto
358.32 384.13 lineto stroke
newpath
322.16 385.63 moveto
358.67 385.63 lineto
358.67 382.63 lineto
322.16 382.63 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
280.42 326.56 1.000000 4n
0.70 setlinewidth
284.10 327.31 moveto
284.10 347.56 lineto stroke
308.88 353.56 1.000000 4n
302.65 350.56 moveto
315.11 350.56 lineto stroke
308.88 347.56 1.000000 4n
308.88 338.56 1.000000 4n
305.20 352.81 moveto
305.20 317.56 lineto stroke
342.53 353.56 1.000000 4n
336.30 350.56 moveto
348.77 350.56 lineto stroke
342.53 347.56 1.000000 4n
342.53 338.56 1.000000 4n
338.85 352.81 moveto
338.85 317.56 lineto stroke
restore
%  S_BAR
156 linenum
0.70 setlinewidth
380.91 408.84 moveto
380.91 384.84 lineto stroke
380.91 344.56 moveto
380.91 320.56 lineto stroke
%  S_CHHEAD
160 linenum
%  S_STAFF
% staff 1
save
390.68 408.84 1.000000 4n
387.00 408.09 moveto
387.00 388.55 lineto stroke
408.16 417.84 1.000000 4n
401.93 414.84 moveto
414.40 414.84 lineto stroke
404.48 417.09 moveto
404.48 387.00 lineto stroke
425.65 402.84 1.000000 4n
421.97 402.09 moveto
421.97 385.44 lineto stroke
443.14 411.84 1.000000 4n
439.45 411.09 moveto
439.45 383.89 lineto stroke
460.62 408.84 1.000000 4n
456.94 408.09 moveto
456.94 382.33 lineto stroke
478.95 396.84 1.000000 4n
475.26 396.09 moveto
475.26 380.70 lineto stroke
newpath
386.65 390.05 moveto
475.61 382.20 lineto
475.61 379.20 lineto
386.65 387.05 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
390.68 326.56 1.000000 4n
0.70 setlinewidth
394.36 327.31 moveto
394.36 347.56 lineto stroke
425.65 353.56 1.000000 4n
419.42 350.56 moveto
431.88 350.56 lineto stroke
425.65 347.56 1.000000 4n
425.65 338.56 1.000000 4n
421.97 352.81 moveto
421.97 317.56 lineto stroke
460.62 353.56 1.000000 4n
454.39 350.56 moveto
466.85 350.56 lineto stroke
460.62 347.56 1.000000 4n
460.62 338.56 1.000000 4n
456.94 352.81 moveto
456.94 317.56 lineto stroke
restore
%  S_BAR
162 linenum
0.70 setlinewidth
497.86 408.84 moveto
497.86 384.84 lineto stroke
497.86 344.56 moveto
497.86 320.56 lineto stroke
%  S_CHHEAD
166 linenum
%  S_STAFF
% staff 1
save
514.47 396.84 1.000000 4n
506.01 396.84 1.000000 nat
510.78 396.09 moveto
510.78 378.89 lineto stroke
531.95 399.84 1.000000 4n
528.27 399.09 moveto
528.27 378.89 lineto stroke
549.44 402.84 1.000000 4n
545.76 402.09 moveto
545.76 378.89 lineto stroke
566.92 399.84 1.000000 4n
563.24 399.09 moveto
563.24 378.89 lineto stroke
584.15 387.84 1.000000 4n
593.42 387.84 1.000000 dot
587.84 388.59 moveto
587.84 407.34 lineto stroke
608.19 387.84 1.000000 4n
611.88 388.59 moveto
611.88 407.34 lineto stroke
newpath
510.43 380.39 moveto
563.59 380.39 lineto
563.59 377.39 lineto
510.43 377.39 lineto
closepath
fill
newpath
587.49 408.84 moveto
612.23 408.84 lineto
612.23 405.84 lineto
587.49 405.84 lineto
closepath
fill
newpath
611.53 403.84 moveto
603.46 403.84 lineto
603.46 400.84 lineto
611.53 400.84 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
514.47 356.56 1.000000 2n
523.95 359.56 1.000000 dot
0.70 setlinewidth
508.02 356.56 moveto
520.91 356.56 lineto stroke
508.02 350.56 moveto
520.91 350.56 lineto stroke
514.47 344.56 1.000000 2n
523.95 347.56 1.000000 dot
514.47 338.56 1.000000 2n
523.95 341.56 1.000000 dot
510.57 355.81 moveto
510.57 317.56 lineto stroke
restore
%  S_BAR
168 linenum
0.70 setlinewidth
620.90 408.84 moveto
620.90 384.84 lineto stroke
620.90 344.56 moveto
620.90 320.56 lineto stroke
%  S_CHHEAD
172 linenum
%  S_STAFF
% staff 1
save
630.67 387.84 1.000000 4n
634.35 388.59 moveto
634.35 414.83 lineto stroke
648.16 393.84 1.000000 4n
651.84 394.59 moveto
651.84 415.72 lineto stroke
664.41 399.84 1.000000 4n
668.09 400.59 moveto
668.09 416.55 lineto stroke
684.35 390.84 1.000000 4n
675.00 390.84 1.000000 sharp
688.03 391.59 moveto
688.03 417.56 lineto stroke
701.83 393.84 1.000000 4n
705.52 394.59 moveto
705.52 418.45 lineto stroke
720.16 399.84 1.000000 4n
723.84 400.59 moveto
723.84 419.39 lineto stroke
newpath
634.00 416.33 moveto
724.19 420.89 lineto
724.19 417.89 lineto
634.00 413.33 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
630.67 317.56 1.000000 4n
0.70 setlinewidth
634.35 318.31 moveto
634.35 338.56 lineto stroke
664.41 356.56 1.000000 4n
658.17 356.56 moveto
670.64 356.56 lineto stroke
658.17 350.56 moveto
670.64 350.56 lineto stroke
664.41 350.56 1.000000 4n
658.17 350.56 moveto
670.64 350.56 lineto stroke
664.41 338.56 1.000000 4n
660.72 355.81 moveto
660.72 317.56 lineto stroke
701.83 356.56 1.000000 4n
695.60 356.56 moveto
708.07 356.56 lineto stroke
695.60 350.56 moveto
708.07 350.56 lineto stroke
701.83 350.56 1.000000 4n
695.60 350.56 moveto
708.07 350.56 lineto stroke
701.83 338.56 1.000000 4n
698.15 355.81 moveto
698.15 317.56 lineto stroke
restore
%  S_BAR
174 linenum
0.70 setlinewidth
739.07 408.84 moveto
739.07 384.84 lineto stroke
739.07 344.56 moveto
739.07 320.56 lineto stroke
%  S_CHHEAD
178 linenum
%  S_STAFF
% staff 1
save
748.84 405.84 1.000000 4n
745.16 405.09 moveto
745.16 387.88 lineto stroke
765.09 432.84 1.000000 4n
758.85 432.84 moveto
771.32 432.84 lineto stroke
758.85 426.84 moveto
769.32 426.84 lineto stroke
758.85 420.84 moveto
769.32 420.84 lineto stroke
758.85 414.84 moveto
769.32 414.84 lineto stroke
761.40 432.09 moveto
761.40 393.79 lineto stroke
775.15 429.84 1.000000 4n
770.42 426.84 moveto
779.88 426.84 lineto stroke
770.92 420.84 moveto
779.38 420.84 lineto stroke
770.92 414.84 moveto
779.38 414.84 lineto stroke
771.47 429.09 moveto
771.47 397.45 lineto stroke
785.21 426.84 1.000000 4n
780.48 426.84 moveto
791.45 426.84 lineto stroke
780.98 420.84 moveto
789.45 420.84 lineto stroke
780.98 414.84 moveto
789.45 414.84 lineto stroke
781.53 426.09 moveto
781.53 398.34 lineto stroke
795.28 423.84 1.000000 4n
790.55 420.84 moveto
800.01 420.84 lineto stroke
791.05 414.84 moveto
799.51 414.84 lineto stroke
791.60 423.09 moveto
791.60 397.34 lineto stroke
805.34 420.84 1.000000 4n
800.61 420.84 moveto
811.57 420.84 lineto stroke
801.11 414.84 moveto
809.57 414.84 lineto stroke
801.66 420.09 moveto
801.66 396.34 lineto stroke
815.41 417.84 1.000000 4n
810.67 414.84 moveto
820.14 414.84 lineto stroke
811.72 417.09 moveto
811.72 395.34 lineto stroke
825.47 414.84 1.000000 4n
820.74 414.84 moveto
831.70 414.84 lineto stroke
821.79 414.09 moveto
821.79 394.58 lineto stroke
835.53 411.84 1.000000 4n
831.85 411.09 moveto
831.85 392.56 lineto stroke
845.60 408.84 1.000000 4n
841.92 408.09 moveto
841.92 390.54 lineto stroke
856.50 405.84 1.000000 4n
852.82 405.09 moveto
852.82 388.35 lineto stroke
newpath
744.81 389.38 moveto
771.82 398.95 lineto
771.82 395.95 lineto
744.81 386.38 lineto
closepath
fill
newpath
761.05 400.29 moveto
771.82 403.95 lineto
771.82 400.95 lineto
761.05 397.29 lineto
closepath
fill
newpath
781.18 399.84 moveto
812.07 396.84 lineto
812.07 393.84 lineto
781.18 396.84 lineto
closepath
fill
newpath
781.18 404.84 moveto
812.07 401.84 lineto
812.07 398.84 lineto
781.18 401.84 lineto
closepath
fill
newpath
821.44 396.08 moveto
853.17 389.85 lineto
853.17 386.85 lineto
821.44 393.08 lineto
closepath
fill
newpath
821.44 401.08 moveto
853.17 394.85 lineto
853.17 391.85 lineto
821.44 398.08 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
748.84 317.56 1.000000 4n
0.70 setlinewidth
752.52 318.31 moveto
752.52 338.56 lineto stroke
785.21 350.56 1.000000 4n
778.98 350.56 moveto
791.45 350.56 lineto stroke
785.21 344.56 1.000000 4n
785.21 338.56 1.000000 4n
781.53 349.81 moveto
781.53 317.56 lineto stroke
825.47 350.56 1.000000 4n
819.24 350.56 moveto
831.70 350.56 lineto stroke
825.47 344.56 1.000000 4n
825.47 338.56 1.000000 4n
821.79 349.81 moveto
821.79 317.56 lineto stroke
restore
%  S_BAR
180 linenum
0.70 setlinewidth
869.21 408.84 moveto
869.21 384.84 lineto stroke
869.21 344.56 moveto
869.21 320.56 lineto stroke
%  S_CHHEAD
184 linenum
%  S_STAFF
% staff 1
save
878.17 402.84 1.000000 4n
881.85 403.59 moveto
881.85 417.95 lineto stroke
890.81 381.84 1.000000 4n
894.49 382.59 moveto
894.49 413.59 lineto stroke
903.45 387.84 1.000000 4n
907.13 388.59 moveto
907.13 409.22 lineto stroke
916.09 396.84 1.000000 4n
912.41 396.09 moveto
912.41 378.00 lineto stroke
928.74 402.84 1.000000 4n
925.05 402.09 moveto
925.05 382.05 lineto stroke
941.38 408.84 1.000000 4n
937.70 408.09 moveto
937.70 386.10 lineto stroke
954.57 423.84 1.000000 4n
963.84 423.84 1.000000 dot
948.34 420.84 moveto
960.80 420.84 lineto stroke
948.34 414.84 moveto
960.80 414.84 lineto stroke
950.89 423.09 moveto
950.89 398.34 lineto stroke
978.61 420.84 1.000000 4n
972.38 420.84 moveto
984.84 420.84 lineto stroke
972.38 414.84 moveto
984.84 414.84 lineto stroke
974.93 420.09 moveto
974.93 395.34 lineto stroke
/NewCenturySchlbk-BoldItalic findfont
11 scalefont
setfont
887.64 367.57 moveto
(3) show
/NewCenturySchlbk-BoldItalic findfont
11 scalefont
setfont
925.57 408.47 moveto
(3) show
newpath
881.50 419.45 moveto
907.48 410.72 lineto
907.48 407.72 lineto
881.50 416.45 lineto
closepath
fill
newpath
912.06 379.50 moveto
938.05 387.60 lineto
938.05 384.60 lineto
912.06 376.50 lineto
closepath
fill
newpath
950.54 399.84 moveto
975.28 396.84 lineto
975.28 393.84 lineto
950.54 396.84 lineto
closepath
fill
newpath
974.58 401.84 moveto
966.51 402.85 lineto
966.51 399.85 lineto
974.58 398.84 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
878.17 326.56 1.000000 4n
0.70 setlinewidth
881.85 327.31 moveto
881.85 347.56 lineto stroke
916.09 353.56 1.000000 4n
909.86 350.56 moveto
922.33 350.56 lineto stroke
916.09 347.56 1.000000 4n
912.41 352.81 moveto
912.41 326.56 lineto stroke
954.57 356.56 1.000000 4n
948.34 356.56 moveto
960.80 356.56 lineto stroke
948.34 350.56 moveto
960.80 350.56 lineto stroke
954.57 344.56 1.000000 4n
954.57 338.56 1.000000 4n
950.89 355.81 moveto
950.89 317.56 lineto stroke
restore
%  S_BAR
186 linenum
0.70 setlinewidth
991.32 408.84 moveto
991.32 384.84 lineto stroke
991.32 344.56 moveto
991.32 320.56 lineto stroke
%  S_CHHEAD
189 linenum
%  S_STAFF
% staff 1
save
1003.25 417.84 1.000000 4n
997.02 414.84 moveto
1009.48 414.84 lineto stroke
999.57 417.09 moveto
999.57 396.84 lineto stroke
1034.53 396.84 1.000000 4rest
restore
%  S_STAFF
% staff 2
save
1003.25 353.56 1.000000 4n
0.70 setlinewidth
997.02 350.56 moveto
1009.48 350.56 lineto stroke
1003.25 347.56 1.000000 4n
999.57 352.81 moveto
999.57 326.56 lineto stroke
1034.53 326.56 1.000000 4n
1038.21 327.31 moveto
1038.21 347.56 lineto stroke
restore
%  S_CURVE
191 linenum
121.83 432.09 moveto
121.81 432.27 lineto
128.19 434.59 134.78 435.75 141.57 435.75 curveto
148.36 435.75 154.95 434.59 161.34 432.27 curveto
161.28 431.92 lineto
154.82 433.60 148.25 434.44 141.57 434.44 curveto
134.89 434.44 128.32 433.60 121.86 431.92 curveto
fill
%  S_BAR
192 linenum
1064.74 399.84 1.000000 dot
1064.74 393.84 1.000000 dot
1068.74 408.84 moveto
1068.74 384.84 lineto stroke
3.00 setlinewidth
1072.74 408.84 moveto
1072.74 384.84 lineto stroke
0.70 setlinewidth
1064.74 335.56 1.000000 dot
1064.74 329.56 1.000000 dot
1068.74 344.56 moveto
1068.74 320.56 lineto stroke
3.00 setlinewidth
1072.74 344.56 moveto
1072.74 320.56 lineto stroke
0.70 setlinewidth
%  Printing header/footer
/Times-Roman findfont
12 scalefont
setfont
498.95 735.31 moveto
(Kaleidakustikon Layer 12) show
/Times-Roman findfont
12 scalefont
setfont
561.12 722.57 moveto
showpage
restore
%%Trailer
%%DocumentFonts: /Times-Roman /NewCenturySchlbk-Bold /NewCenturySchlbk-BoldItalic /Mfont0 
%%Pages: 1

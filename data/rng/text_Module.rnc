# **************************************************************

# NAME:     Music Encoding Initiative (MEI) schema component:
#           text_Module.rng
# 
# NOTICE:   Copyright (c) 2010 by the Music Encoding Initiative (MEI)
#           Council.
# 
#           Licensed under the Educational Community License, Version
#           2.0 (the "License"); you may not use this file except in
#           compliance with the License. You may obtain a copy of the
#           License at http://www.osedu.org/licenses/ECL-2.0.
# 
#           Unless required by applicable law or agreed to in writing,
#           software distributed under the License is distributed on
#           an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#           KIND, either express or implied. See the License for the
#           specific language governing permissions and limitations
#           under the License.
# 
#           This is a derivative work based on earlier versions of the
#           schema copyright (c) 2001-2006 Perry Roland and the Rector
#           and Visitors of the University of Virginia; licensed under
#           the Educational Community License version 1.0.
# 
# CONTACT:  contact@music-encoding.org 

namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
default namespace mei = "http://www.music-encoding.org/ns/mei"
namespace sch = "http://purl.oclc.org/dsdl/schematron"
namespace tei = "http://www.tei-c.org/ns/1.0"
namespace xhtml = "http://www.w3.org/1999/xhtml"
namespace xlink = "http://www.w3.org/1999/xlink"

# Text Module

# Declare module attr classes

# Declare module model classes
[
  a:documentation [
    xml:lang = "eng"
    "groups elements that may contain back\x{a}" ~
    "      matter."
  ]
]
model.backLike &= back
[
  a:documentation [
    xml:lang = "eng"
    "groups elements used to represent generic\x{a}" ~
    "      structural divisions of text."
  ]
]
model.divLike &= \div
[
  a:documentation [
    xml:lang = "eng"
    "groups elements that may contain front\x{a}" ~
    "      matter."
  ]
]
model.frontLike &= front
[
  a:documentation [
    xml:lang = "eng"
    "groups elements used to provide a heading at\x{a}" ~
    "      the start of a text division."
  ]
]
model.headLike &= head
[
  a:documentation [
    xml:lang = "eng"
    "groups elements representing metrical\x{a}" ~
    "      components such as verse lines."
  ]
]
model.lLike &= l
[ a:documentation [ xml:lang = "eng" "groups list-like elements." ] ]
model.listLike &= \list
[
  a:documentation [
    xml:lang = "eng"
    "groups elements used to directly contain\x{a}" ~
    "      quotations."
  ]
]
model.quoteLike &= blockquote
model.rdgPart &=
  (text | model.textcomponentLike | model.textphraseLike.limited)*
[
  a:documentation [
    xml:lang = "eng"
    "groups elements that have a line-grouping\x{a}" ~
    "      function."
  ]
]
model.lgLike &= lg
# Declare module elements
content.back =
  model.milestoneLike.text*, model.divLike+, model.milestoneLike.text*
back =
  [
    a:documentation [
      xml:lang = "eng"
      "back ― Back matter such as indexes,\x{a}" ~
      "        advertisements, etc. following the main part of a text. This element is\x{a}" ~
      "        modelled on an element in the Text Encoding Initiative\x{a}" ~
      "        (TEI)."
    ]
  ]
  element back { attlist.back, content.back }
attlist.back = att.common, att.facsimile, att.lang
content.blockquote = model.textcomponentLike+, model.biblLike?
blockquote =
  [
    a:documentation [
      xml:lang = "eng"
      "blockquote ― A formatting element that\x{a}" ~
      "        designates an extended quotation; that is, a passage attributed to a\x{a}" ~
      "        source external to the text. The quotation is normally set off from the\x{a}" ~
      "        text by spacing or other typographic distinction. The source for the\x{a}" ~
      "        quote may be included in the optional <bibl> sub-element.\x{a}" ~
      "        Use <rend> for words that are enclosed in quotation marks\x{a}" ~
      "        for emphasis or for a short quoted phrase that occurs within a line of\x{a}" ~
      "        text. This element is modelled on an element in HTML."
    ]
  ]
  element blockquote { attlist.blockquote, content.blockquote }
attlist.blockquote = att.common, att.facsimile, att.lang, att.xy
content.div =
  model.milestoneLike.text*,
  model.headLike?,
  (model.divLike | model.textcomponentLike)+,
  model.milestoneLike.text*
\div =
  [
    a:documentation [
      xml:lang = "eng"
      "division ― Major structural division of\x{a}" ~
      "        text, such as a preface, chapter or section. Often, the\x{a}" ~
      "        <head> sub-element identifies the <div>'s\x{a}" ~
      "        purpose. This element is modelled on an element in the Text Encoding\x{a}" ~
      "        Initiative (TEI)."
    ]
  ]
  element div { attlist.div, content.div }
attlist.div = att.common, att.facsimile, att.lang, att.typed
content.front =
  model.milestoneLike.text*,
  (model.divLike | model.frontPart)+,
  model.milestoneLike.text*
front =
  [
    a:documentation [
      xml:lang = "eng"
      "front ― Bundles prefatory text found\x{a}" ~
      "        before the start of the musical text. <titlepage> may be\x{a}" ~
      "        used to transcribe the item's title page. Other front matter structures,\x{a}" ~
      "        such as a preface, dedication, or table of contents, may be encoded as\x{a}" ~
      "        textual divisions; that is, as <div>s, with an optional\x{a}" ~
      "        <head> sub-element describing the nature of the division.\x{a}" ~
      "        The <pb> element is allowed here in order to accommodate\x{a}" ~
      "        page images, e.g. cover, endpapers, etc. before and after the actual\x{a}" ~
      "        textual matter. This element is modelled on an element in the Text\x{a}" ~
      "        Encoding Initiative (TEI)."
    ]
  ]
  element front { attlist.front, content.front }
attlist.front = att.common, att.facsimile, att.lang
content.head =
  (text
   | model.textphraseLike
   | model.editLike
   | model.transcriptionLike)*
head =
  [
    a:documentation [
      xml:lang = "eng"
      "heading ― Contains any heading, for\x{a}" ~
      "        example, the title of a section of text, or the heading of a list. When\x{a}" ~
      "        <head> is used, it should be the first sub-element,\x{a}" ~
      "        followed by one or more other elements. This element is modelled on\x{a}" ~
      "        elements in Encoded Archival Description (EAD), Text Encoding Initiative\x{a}" ~
      "        (TEI), and HTML."
    ]
  ]
  element head { attlist.head, content.head }
attlist.head = att.common, att.facsimile, att.lang, att.xy
content.item =
  (text
   | model.textcomponentLike
   | model.textphraseLike
   | model.editLike
   | model.transcriptionLike)*
item =
  [
    a:documentation [
      xml:lang = "eng"
      "item ― Single item in a\x{a}" ~
      "        <list>. This element is modelled on elements in Encoded\x{a}" ~
      "        Archival Description (EAD), Text Encoding Initiative (TEI), and\x{a}" ~
      "        HTML."
    ]
  ]
  element item { attlist.item, content.item }
attlist.item = att.common, att.facsimile
content.l =
  (text
   | model.textphraseLike
   | model.editLike
   | model.transcriptionLike)*
l =
  [
    a:documentation [
      xml:lang = "eng"
      "line of text ― Contains a single line of\x{a}" ~
      "        text within a line group. The n attribute should be used to record a\x{a}" ~
      "        label for the line, i.e., most likely a line number. Do not confuse this\x{a}" ~
      "        element with the <line> element, which is used for\x{a}" ~
      "        graphical lines that occur in music notation. This element is modelled on\x{a}" ~
      "        elements in the Text Encoding Initiative (TEI)."
    ]
  ]
  element l { attlist.l, content.l }
attlist.l = att.common, att.facsimile, att.lang
content.lg = model.headLike?, model.lLike+
lg =
  [
    a:documentation [
      xml:lang = "eng"
      "line group ― Usually contains a lyric\x{a}" ~
      "        verse although it may be used for any section of text that is organized\x{a}" ~
      "        as a group of lines. This element is modelled on an element in the Text\x{a}" ~
      "        Encoding Initiative (TEI)."
    ]
  ]
  element lg { attlist.lg, content.lg }
attlist.lg = att.common, att.facsimile, att.lang, att.xy
content.list = model.headLike?, item+
\list =
  [
    a:documentation [
      xml:lang = "eng"
      "list ― A formatting element that contains\x{a}" ~
      "        as series of items separated from one another and arranged in a linear,\x{a}" ~
      "        of vertical sequence. This element is modelled on elements in Encoded\x{a}" ~
      "        Archival Description (EAD), Text Encoding Initiative (TEI), and\x{a}" ~
      "        HTML."
    ]
  ]
  element list { attlist.list, content.list }
attlist.list =
  att.common,
  att.facsimile,
  att.lang,
  att.xy,
  [
    a:documentation [
      xml:lang = "eng"
      "used to identify and format a list. In a\x{a}" ~
      '          "simple" list, <item>s are not numbered or bulleted. In\x{a}' ~
      '          a "marked" list, the sequence of the list items is not critical, and a\x{a}' ~
      "          bullet, box, dash, or other character is displayed at the start of\x{a}" ~
      '          each <item>. In an "ordered" list, the sequence of the\x{a}' ~
      "          items is important, and each <item> is lettered or\x{a}" ~
      "          numbered. Style sheet functions should be used to specify the mark or\x{a}" ~
      "          numeration system for each <item>."
    ]
  ]
  attribute form { "simple" | "marked" | "ordered" }?

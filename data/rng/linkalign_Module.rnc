# **************************************************************

# NAME:     Music Encoding Initiative (MEI) schema component:
#           linkalign_Module.rng
# 
# NOTICE:   Copyright (c) 2010 by the Music Encoding Initiative (MEI)
#           Council.
# 
#           Licensed under the Educational Community License, Version
#           2.0 (the "License"); you may not use this file except in
#           compliance with the License. You may obtain a copy of the
#           License at http://www.osedu.org/licenses/ECL-2.0.
# 
#           Unless required by applicable law or agreed to in writing,
#           software distributed under the License is distributed on
#           an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#           KIND, either express or implied. See the License for the
#           specific language governing permissions and limitations
#           under the License.
# 
#           This is a derivative work based on earlier versions of the
#           schema copyright (c) 2001-2006 Perry Roland and the Rector
#           and Visitors of the University of Virginia; licensed under
#           the Educational Community License version 1.0.
# 
# CONTACT:  contact@music-encoding.org 

namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
default namespace mei = "http://www.music-encoding.org/ns/mei"
namespace sch = "http://purl.oclc.org/dsdl/schematron"
namespace tei = "http://www.tei-c.org/ns/1.0"
namespace xhtml = "http://www.w3.org/1999/xhtml"
namespace xlink = "http://www.w3.org/1999/xlink"

# LinkAlign Module

# Declare module attr classes
[
  a:documentation [
    xml:lang = "eng"
    "Temporal alignment attributes. This class of\x{a}" ~
    "      attributes is unavailable unless the meiLinkAlign module is\x{a}" ~
    "      included."
  ]
]
att.alignment &=
  [
    a:documentation [
      xml:lang = "eng"
      "indicates the point of occurrence of\x{a}" ~
      "          this feature along a timeline. Its value must be the ID of a\x{a}" ~
      "          <when> element."
    ]
  ]
  attribute when { xsd:IDREF }?
# Declare module model classes
[
  a:documentation [
    xml:lang = "eng"
    "groups elements that are used for temporal\x{a}" ~
    "      alignment."
  ]
]
model.alignLike &= timeline
# Declare module elements
content.timeline = when*
timeline =
  [
    a:documentation [
      xml:lang = "eng"
      "timeline ― Provides a set of ordered\x{a}" ~
      "        points in time to which musical elements can be linked in order to\x{a}" ~
      "        create a temporal alignment of those elements. The origin attribute\x{a}" ~
      "        designates the origin of the timeline, i.e., the time at which it\x{a}" ~
      "        begins. It must point to one of the when elements in its content. Units\x{a}" ~
      "        specifies the unit of time corresponding to the value of the interval\x{a}" ~
      "        attribute of the timeline or of its constituent points in time. The\x{a}" ~
      "        mediacontent attribute is provided in order to link the timeline to a\x{a}" ~
      "        particular external media file, such as an audio file. The medialength\x{a}" ~
      "        attribute specifies the length of the external media file in terms of\x{a}" ~
      "        the unit attribute. This element is modelled on an element in the Text\x{a}" ~
      "        Encoding Initiative (TEI)."
    ]
  ]
  element timeline { attlist.timeline, content.timeline }
attlist.timeline =
  att.common,
  att.measurement,
  [
    a:documentation [
      xml:lang = "eng"
      "holds the web-addressable location of\x{a}" ~
      "          the external digital media."
    ]
  ]
  attribute mediacontent { data.URI }?,
  [
    a:documentation [
      xml:lang = "eng"
      "indicates the length of the external\x{a}" ~
      "          digital file."
    ]
  ]
  attribute medialength { xsd:positiveInteger }?,
  [
    a:documentation [
      xml:lang = "eng"
      "designates the origin of the timeline,\x{a}" ~
      "        i.e. the time at which it begins."
    ]
  ]
  attribute origin { xsd:IDREF }
content.when = empty
when =
  [
    a:documentation [
      xml:lang = "eng"
      "when ― Indicates a point in time either\x{a}" ~
      "        absolutely (using the absolute attribute), or relative to other elements\x{a}" ~
      "        in the same timeline element (using the interval and since attributes).\x{a}" ~
      "        The data attribute may be used to reference one or more features that\x{a}" ~
      "        occur at this point in time. This element is modelled on an element in\x{a}" ~
      "        the Text Encoding Initiative (TEI)."
    ]
  ]
  element when { attlist.when, content.when }
attlist.when =
  att.common,
  att.datapointing,
  att.measurement,
  [
    a:documentation [
      xml:lang = "eng"
      "provides an absolute value for the time\x{a}" ~
      "          associated with a point on a timeline. This attribute is required for\x{a}" ~
      "          the element designated as the origin by the parent\x{a}" ~
      "          timeline."
    ]
  ]
  attribute absolute { text }?,
  [
    a:documentation [
      xml:lang = "eng"
      "specifies the (positive) numeric portion\x{a}" ~
      "          of a time interval."
    ]
  ]
  attribute interval {
    xsd:decimal { minInclusive = "1" }
  }?,
  [
    a:documentation [
      xml:lang = "eng"
      "identifies the reference point for\x{a}" ~
      "          determining the time of the current when element, which is obtained by\x{a}" ~
      "          adding the interval to the time of the reference point. The value\x{a}" ~
      "          should be the ID of another when element in the same timeline. If the\x{a}" ~
      "          since attribute is omitted and the absolute attribute is not\x{a}" ~
      "          specified, then the reference point is understood to be the preceding\x{a}" ~
      "          when element."
    ]
  ]
  attribute since { xsd:IDREF }?

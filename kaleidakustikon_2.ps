%!PS-Adobe-1.0
%%Creator: Mup (Version 6.1)
%%Title: music:  from kaleidakustikon_2.mup
%%CreationDate: Mon Feb 18 14:44:14 2013
%%Pages: (atend)
%%DocumentFonts: (atend)
%%BoundingBox: 0 0 612 792
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
% Mup prolog Copyright (c) 1995, 1996, 1997, 1998, 1999, 2000, 2003, 2004,
% 2008, 2009, 2012 by Arkkra Enterprises
% All rights reserved

% Mup PostScript Prolog 6.1 for use with Mup 6.1

% lwid is used as the width of a standard (thin) line in the music
% character definitions.
/lwid 70 def
/halflwid lwid 2 div def

% Define the following for use in do_upshortnote, do_dnshortnote, and
% do_shortrest; it has to be done outside of the music font definition.
/utildict 10 dict def
utildict begin
	/setnumflags	{	/numflags	exch def } def
	/sethooksm1	{	/hooksm1	exch def } def
	/setoffsets	{	/offsets	exch def } def
	/setx		{	/x		exch def } def
	/sety		{	/y		exch def } def
end

% Define a music character font.  Each music character is defined as if it
% were a normal ASCII character in a strange font where "A" looks like a
% treble clef, "B" looks like a bass clef, etc.

/mfont0 100 dict def
mfont0 begin
	/FontType 3 def
	/FontMatrix [ .001 0 0 0.001 0 0 ] def
	/FontBBox [ -2000 -4030 2000 4030 ] def
	/FontName (Mfont0) def

	% set up Encoding vector with standard names
	/Encoding 256 array def
	StandardEncoding Encoding copy
	pop

	% the following definitions are used for quarter rests
	/topx -170 def /topy 950 def
	/cor1x 250 def /cor1y 450 def
	/cor2x -300 def /cor2y 200 def
	/cor3x 250 def /cor3y -400 def

	% the following definitions are used for double sharps
	/limit 300 halflwid add def
	/off 70 def
	/inbendsmall limit 200 sub def
	/inbendbig limit 20 sub def
	/outbendsmall 100 def
	/outbendbig outbendsmall off add def

	%%%%% define routines that will be used by multiple characters %%%%%
	/do_1n {
		gsave
		newpath -10 rotate 1.6 1 scale
		0 0 325 0 360 arc		%outer ellipse
		1 1.6 div 1 scale 10 rotate	%back to original
		35 rotate 0.85 1.1 scale
		0 0 275 0 360 arc		%inner ellipse
		eofill
		grestore
	} def
	/do_upflag {
		-315 0 moveto
		-300 100 -100 480 0 600 curveto
		300 960 350 1500 200 1700 curveto
		130 1700 lineto
		350 1200 50 650 -315 600 curveto
		fill
	} def
	/do_flat {
		-250 -400 moveto	%outer edge of loop
		500 0 350 650 -250 160 curveto
		-250 160 lwid sub lineto %inner edge of loop
		100 400 300 0 -250 -400 lwid add curveto
		fill

		lwid setlinewidth	%stem
		-250 1100 moveto -250 -400 lineto stroke
	} def
	/do_diamond {
		newpath
		420 0 moveto 0 300 lineto -420 0 lineto
		0 -300 lineto closepath
		259 -29 moveto -41 185 lineto -259 29 lineto
		41 -185 lineto closepath
		eofill
	} def
	/do_2n {
		gsave
		newpath 25 rotate 1.4 1 scale
		0 0 315 0 360 arc		%outer ellipse
		1 1.4 div 1 scale		%back to original
		1.3 0.5 scale
		0 0 310 0 360 arc		%inner ellipse
		eofill
		grestore
	} def
	/do_4n {
		gsave
		newpath 25 rotate 1.35 1 scale
		0 0 310 0 360 arc fill
		grestore
	} def
	/do_com {
		newpath
		330 250 150 0 360 arc fill	%knob at upper right
		465 300 moveto			%outer boundary
		410 500 200 635 0 635 curveto
		-750 635 -750 -635 0 -635 curveto
		350 -635 480 -300 500 -100 curveto
		430 -100 lineto			%inner boundary
		380 -300 250 -565 0 -565 curveto
		-450 -565 -450 565 0 565 curveto
		200 565 370 350 395 300 curveto
		fill
	} def
	/do_ferm {
		0 0 800 lwid sub 0 180 arc	%inner arc
		-800 0 lineto
		0 270 lwid sub 800 180 0 arcn	%outer arc
		800 0 lineto fill
		0 120 120 0 360 arc fill	%the dot
	} def
	/do_mor {
		gsave
		0.7 1 scale	%scrunch the following horizontally
		45 rotate	%to pretend all lines horz or vertical
		0 1 1 {
			pop	%we don't need the loop variable
			%one half of the mordent
			0 40 moveto 350 40 lineto 350 -460 lineto
			750 -460 lineto 750 -540 lineto
			150 -540 lineto 150 -40 lineto
			0 -40 lineto fill
			180 rotate	%to do the other half
		} for
		grestore
	} def
	/do_turn {
		gsave
		0 1 1 {
			pop	%we don't need the loop variable
			0 -100 moveto	%outer boundary
			200 -400 625 -400 625 0 curveto
			625 200 500 325 300 325 curveto
			300 185 lineto	%inner boundary
			450 255 555 150 555 0 curveto
			555 -350 250 -250 0 100 curveto
			fill
			300 255 70 0 360 arc fill %knob on end
			180 rotate	%to do the other half
		} for
		grestore
	} def

	/do_upshortnote {
		utildict begin
		setnumflags		%set numflags from the stack
		gsave
		-330 0 translate	%half a flag width
		do_4n			%do a quarter note head
		lwid setlinewidth
		370 0 moveto
		370 2100 numflags 2 sub flagsep mul add lineto stroke
		670 2100 numflags 2 sub flagsep mul add translate
		1 -1 scale		%reflect across X axis
		0 1 numflags 1 sub {
			do_upflag	%do an upflag
			pop		%we don't need the loop variable
			0 flagsep translate
		} for
		grestore
		end
	} def

	/do_dnshortnote {
		utildict begin
		setnumflags		%set numflags from the stack
		do_4n			%do a quarter note head
		lwid setlinewidth
		-370 0 moveto
		-370 -2100 numflags 2 sub flagsep mul sub lineto stroke
		gsave
		-70 -2100 numflags 2 sub flagsep mul sub translate
		0 1 numflags 1 sub {
			do_upflag	%do an upflag
			pop		%we don't need the loop variable
			0 flagsep translate
		} for
		grestore
		end
	} def

	/do_shortrest {
		utildict begin
		sety setx setoffsets sethooksm1	%set variable from the stack
		gsave
		-105.8 offsets mul -600 offsets mul translate
		0 1 hooksm1 {		%loop once per hook
			newpath
			1 setlinewidth
			gsave
			1 1.2 scale
			-150 300 1.2 div 140 0 360 arc fill 	%the dot
			grestore
			lwid setlinewidth
			-50 700 550 255 315 arc		%rest of the hook
			hooksm1 lt { stroke 105.8 600 translate } if
		} for
		x y lineto stroke
		grestore
		end
	} def


	% subsidiary dictionary of character definitions
	/CharStrings 128 dict def
	CharStrings begin

		/.notdef {} def

		% Here are the definitions of the characters.  A stepsize here
		% is 300 units (assuming the character is drawn at its default
		% size).

		% gclef
		/A {
			newpath
			%start with inner curl, inside boundary
			-50 -300 moveto
			-450 600 700 700 750 0 curveto
			750 -800 -700 -800 -700 200 curveto
			-700 900 500 1400 520 2250 curveto
			520 2900 300 3000 200 3000 curveto
			100 3000 -400 2500 -200 1800 curveto
			350 -600 lineto
			720 -1600 0 -1650 -400 -1400 curveto

			%go back to start, drawing the other boundary
			-400 -1480 lineto
			0 -1700 800 -1700 430 -600 curveto
			-120 1800 lineto
			-300 2400 200 2800 250 2800 curveto
			400 2800 430 2700 430 2450 curveto
			430 1800 -900 1200 -900 300 curveto
			-750 -900 800 -900 850 0 curveto
			900 1100 -750 900 -120 -300 curveto fill

			%circle at the bottom
			-300 -1250 250 0 360 arc fill
		} def

		% fclef
		/B {
			newpath
			%start with outside boundary, at bottom
			-1000 -1700 moveto
			100 -1100 500 -600 450 0 curveto
			450 850 -1100 850 -950 0 curveto

			%go back to start, drawing the other boundary
			-880 0 lineto
			-920 400 -600 560 -300 560 curveto
			0 560 150 400 150 0 curveto
			150 -400 100 -900 -1000 -1620 curveto fill

			%circle at the left
			newpath
			-700 0 250 0 360 arc fill

			%do the two dots after the main curve
			700 -300 100 0 360 arc fill
			700 300 100 0 360 arc fill
		} def

		% cclef
		/C {
			gsave
			%do upper curved part, then scale to do mirror image
			0 1 1 {
				pop	%we don't need the loop variable
				%outer boundary of curve
				-170 0 moveto 100 300 lineto
				400 -200 750 300 750 650 curveto
				750 1100 450 1235 250 1235 curveto
				0 1235 -143 1100 -143 950 curveto

				%inner boundary of curve
				0 950 lineto
				0 1100 30 1165 250 1165 curveto
				300 1165 450 1100 450 650 curveto
				450 400 400 -100 100 400 curveto
				-270 0 lineto fill
				%stroke
				%-270 0 moveto 100 400 lineto
				%400 -100 450 400 450 650 curveto
				%450 1100 300 1165 250 1165 curveto
				%30 1165 0 1100 0 950 curveto
				%stroke

				%elliptical ball at end of curve
				gsave
				1.3 1 scale
				10 950 120 0 360 arc fill
				grestore
				1 -1 scale	%reflect across X axis
			} for
			grestore

			% two vertical lines on the left
			300 setlinewidth -600 -1200 halflwid sub moveto
			-600 1200 halflwid add lineto stroke
			lwid setlinewidth -300 -1200 halflwid sub moveto
			-300 1200 halflwid add lineto stroke
		} def

		% dblwhole
		/D {
			do_1n		%do a whole note
			lwid setlinewidth
			-490 -600 moveto -490 600 lineto stroke
			490 -600 moveto 490 600 lineto stroke
		} def

		% 1n
		/E {
			do_1n		%do a whole note
		} def

		% 2n
		/F {
			do_2n		%do a half note
		} def

		% 4n
		/G {
			do_4n		%do a quarter note head
		} def

		% upflag
		/H {
			do_upflag		%do an upflag
		} def

		% dnflag
		/I {
			gsave
			1 -1 scale	%reflect across X axis
			do_upflag		%do an upflag
			grestore
		} def

		% dwhrest
		/J {
			300 setlinewidth
			0 0 moveto 0 600 lineto stroke
		} def

		% 1rest
		/K {
			lwid setlinewidth
			-750 600 moveto 750 600 lineto stroke
			300 setlinewidth
			-400 450 moveto 400 450 lineto stroke
		} def

		% 2rest
		/L {
			lwid setlinewidth
			-750 0 moveto 750 0 lineto stroke
			300 setlinewidth
			-400 150 moveto 400 150 lineto stroke
		} def

		% 4rest
		/M {
			newpath
			cor3x cor3y halflwid add moveto
			%-400 -200 -450 -650 50 -950 lwid add curveto
			-450 -50 -450 -650 50 -950 lwid add curveto
			-150 -650 -100 -250 cor3x cor3y halflwid sub curveto
			fill

			cor1x cor1y moveto cor1x 200 sub cor1y 200 add lineto
			cor2x cor2y lineto cor2x 200 add cor2y 200 sub lineto
			fill

			lwid setlinewidth
			topx topy moveto cor1x cor1y lineto stroke
			cor2x cor2y moveto cor3x cor3y lineto stroke
		} def

		% 8rest
		/N {
			0 0 0 -600 do_shortrest
		} def

		% 16rest
		/O {
			1 1 100 -1200 do_shortrest
		} def

		% 32rest
		/P {
			2 1 0 -1800 do_shortrest
		} def

		% 64rest
		/Q {
			3 2 -80 -2100 do_shortrest
		} def

		% 128rest
		/R {
			4 2 -150 -2700 do_shortrest
		} def

		% 256rest
		/S {
			5 3 -280 -3300 do_shortrest
		} def

		% dot
		/T {
			newpath
			0 0 120 0 360 arc fill
		} def

		% nat
		/U {
			% fill crossbars so that we can do parallelograms
			-235 -470 moveto -235 -270 lineto
			235 -130 lineto 235 -330 lineto fill
			-235 130 moveto -235 330 lineto
			235 470 lineto 235 270 lineto fill

			% vertical strokes
			lwid setlinewidth
			-200 -380 moveto -200 850 lineto stroke
			200 -850 moveto 200 380 lineto stroke
		} def

		% sharp
		/V {
			% fill crossbars so that we can do parallelograms
			-325 -480 moveto -325 -280 lineto
			325 -120 lineto 325 -320 lineto fill
			-325 120 moveto -325 320 lineto
			325 480 lineto 325 280 lineto fill

			% vertical strokes
			lwid setlinewidth
			-150 -930 moveto -150 880 lineto stroke
			150 -880 moveto 150 930 lineto stroke
		} def

		% flat
		/W {
			do_flat		%do a flat
		} def

		% dblsharp
		/X {
			gsave
			0 1 3 {		%loop once for each of 4 sticks
				pop	%we don't need the loop variable
				0 off neg moveto
				outbendbig outbendsmall lineto
				inbendbig inbendsmall lineto
				limit limit lineto
				inbendsmall inbendbig lineto
				outbendsmall outbendbig lineto
				off neg 0 lineto
				fill
				-90 rotate
			} for
			grestore
		} def

		% dblflat
		/Y {
			-290 580 290 {	%loop once for each flat

				gsave
				1 setlinewidth
				0 translate	%translate left/right (loop var)
				do_flat		%do a flat
				grestore

			} for
		} def

		% xnote
		/Z {
			gsave
			1.15 1 scale 120 setlinewidth 1 setlinecap	%round
			-300 -300 moveto 300 300 lineto stroke
			-300 300 moveto 300 -300 lineto stroke
			grestore
		} def

		% dwhdiamond
		/a {
			do_diamond	%do a diamond
			lwid setlinewidth
			-420 -600 moveto -420 600 lineto stroke
			420 -600 moveto 420 600 lineto stroke
		} def

		% diamond
		/b {
			do_diamond	%do a diamond
		} def

		% filldiamond
		/c {
			420 0 moveto 0 300 lineto
			-420 0 lineto 0 -300 lineto fill
		} def

		% up2n
		/d {
			lwid setlinewidth
			380 0 moveto 380 2100 lineto stroke
			do_2n		%do a half note
		} def

		% dn2n
		/e {
			lwid setlinewidth
			-380 0 moveto -380 -2100 lineto stroke
			do_2n		%do a half note
		} def

		% up4n
		/f {
			do_4n		%do a quarter note head
			lwid setlinewidth
			370 0 moveto 370 2100 lineto stroke
		} def

		% dn4n
		/g {
			do_4n		%do a quarter note head
			lwid setlinewidth
			-370 0 moveto -370 -2100 lineto stroke
		} def

		% up8n
		/h {
			gsave
			-330 0 translate	% half a flag width
			do_4n		%do a quarter note head
			lwid setlinewidth
			370 0 moveto 370 2100 lineto stroke
			670 2100 translate
			1 -1 scale	%reflect across X axis
			do_upflag		%do an upflag
			grestore
		} def

		% dn8n
		/i {
			do_4n		%do a quarter note head
			lwid setlinewidth
			-370 0 moveto -370 -2100 lineto stroke
			gsave
			-70 -2100 translate
			do_upflag		%do an upflag
			grestore
		} def

		% up16n
		/j {
			2 do_upshortnote
		} def

		% dn16n
		/k {
			2 do_dnshortnote
		} def

		% up32n
		/l {
			3 do_upshortnote
		} def

		% dn32n
		/m {
			3 do_dnshortnote
		} def

		% up64n
		/n {
			4 do_upshortnote
		} def

		% dn64n
		/o {
			4 do_dnshortnote
		} def

		% up128n
		/p {
			5 do_upshortnote
		} def

		% dn128n
		/q {
			5 do_dnshortnote
		} def

		% up256n
		/r {
			6 do_upshortnote
		} def

		% dn256n
		/s {
			6 do_dnshortnote
		} def

		% com
		/t {
			do_com		%do a common time symbol
		} def

		% cut
		/u {
			do_com		%do a common time symbol
			lwid setlinewidth
			0 -900 moveto 0 900 lineto stroke
		} def

		% begped
		/v {
			lwid setlinewidth
			-200 600 moveto -200 0 lineto 200 0 lineto stroke
		} def

		% pedal
		/w {
			lwid setlinewidth
			-500 0 moveto -450 0 lineto 0 600 lineto
			450 0 lineto 500 0 lineto stroke
		} def

		% endped
		/x {
			lwid setlinewidth
			200 600 moveto 200 0 lineto -200 0 lineto stroke
		} def

		% dnbow
		/y {
			lwid setlinewidth
			-350 0 moveto -350 900 lineto stroke
			350 0 moveto 350 900 lineto stroke
			200 setlinewidth
			-350 800 moveto 350 800 lineto stroke
		} def

		% upbow
		/z {
			lwid setlinewidth
			-300 900 moveto 0 0 lineto 300 900 lineto stroke
		} def

		% wedge
		/one {
			0 0 moveto -150 500 lineto 150 500 lineto fill
		} def

		% uwedge
		/two {
			-150 0 moveto 150 0 lineto 0 500 lineto fill
		} def

		% ferm
		/three {
			newpath
			do_ferm		%do a right side up fermata
		} def

		% uferm
		/four {
			newpath
			gsave
			0 270 lwid sub 800 add translate %baseline at bottom
			180 rotate			%upside down
			do_ferm		%do a right side up fermata
			grestore
		} def

		% sign
		/five {
			gsave
			%do upper left curved part, upper right dot;
			%then rotate 180 to do other half
			0 1 1 {
				pop	%we don't need the loop variable
				0 100 moveto		%inner boundary
				-1000 300 -400 750 -200 700 curveto
				-200 800 lineto		%outer boundary
				-550 900 -1100 100 0 -100 curveto
				fill
				%dot at end of curve
				-200 700 100 0 360 arc fill
				%dot in upper right quadrant
				500 200 70 0 360 arc fill
				180 rotate
			} for
			grestore

			%slash through middle
			lwid setlinewidth
			-400 -800 moveto 400 800 lineto stroke
		} def

		% coda
		/six {
			newpath
			gsave
			0.6 1 scale
			0 0 550 0 360 arc	%outside boundary
			1 0.6 div 1 scale	%back to original
			0.9 1 scale
			0 0 650 0 360 arc	%inside boundary
			eofill
			grestore
			lwid setlinewidth
			0 -850 moveto 0 850 lineto stroke
			-800 0 moveto 800 0 lineto stroke
		} def

		% mor
		/seven {
			do_mor		%do a mordent
		} def

		% invmor
		/eight {
			do_mor		%do a mordent
			lwid setlinewidth
			0 -450 moveto 0 450 lineto stroke
		} def

		% turn
		/nine {
			do_turn		%do a turn
		} def

		% invturn
		/zero {
			gsave
			1 -1 scale	%reflect across X axis
			do_turn		%do a turn
			grestore
		} def

		% acc_gt
		/numbersign {
			lwid setlinewidth
			-500 300 moveto 500 0 lineto -500 -300 lineto stroke
		} def

		% acc_hat
		/dollar {
			newpath
			-365 0 moveto 0 860 lineto 365 0 lineto
			150 0 lineto -75 530 lineto -300 0 lineto fill
		} def

		% acc_uhat
		/quotedbl {
			newpath
			365 860 moveto 0 0 lineto -365 860 lineto
			-150 860 lineto 75 330 lineto 300 860 lineto fill
		} def

		% tr
		/asterisk {
			%vertical bar of t
			-350 1000 moveto -550 200 lineto
			-612.5 -50 -212.5 -50 -160 200 curveto
			-230 200 lineto
			-300 50 -420 50 -400 200 curveto
			-200 1000 lineto fill

			%crossbar of t and vertical bar of r
			-700 600 moveto -160 600 lineto
			20 600 30 520 60 440 curveto
			-50 0 lineto 70 0 lineto 180 440 lineto
			190 480 100 670 -150 670 curveto
			-690 670 lineto fill

			%horizontal curve of r
			100 480 moveto
			300 630 450 700 650 550 curveto
			560 480 lineto
			450 630 300 560 100 390 curveto
			fill

			%knob at end of r
			600 460 100 0 360 arc fill
		} def

		% leg
		/comma {
			100 setlinewidth
			-400 0 moveto 400 0 lineto stroke
		} def

		% rr
		/hyphen {
			100 setlinewidth
			-400 0 moveto 0 1000 lineto stroke
			0 0 moveto 400 1000 lineto stroke
		} def

		% measrpt
		/period {
			newpath -450 400 150 0 360 arc fill
			newpath 450 -400 150 0 360 arc fill
			200 setlinewidth
			-550 -600 moveto 550 600 lineto stroke
		} def

		% copyright
		/slash {
			lwid setlinewidth
			newpath 0 400 400 0 360 arc stroke
			newpath 0 400 200 45 315 arc stroke
		} def

		% dim
		/quoteleft {
			50 setlinewidth
			newpath 0 640 220 0 360 arc stroke
		} def

		% halfdim
		/quoteright {
			50 setlinewidth
			newpath 0 640 220 0 360 arc stroke
			newpath -340 300 moveto 340 980 lineto stroke
		} def

		% triangle
		/asciicircum {
			50 setlinewidth
			newpath -340 -10 moveto 0 710 lineto
			340 -10 lineto closepath stroke
		} def

		% qwhrest
		/ampersand {
			300 setlinewidth
			0 -600 moveto 0 600 lineto stroke
		} def

		% ll1rest
		/exclam {
			310 setlinewidth
			-400 455 moveto 400 450 lineto stroke
		} def

		% ll2rest
		/at {
			310 setlinewidth
			-400 145 moveto 400 150 lineto stroke
		} def
	end

	/BuildChar {

		exch begin
		Encoding exch get

		dup
		Mcbbox0 exch get
		aload pop setcachedevice

		CharStrings exch get
		exec
		end
	} def
end


% Define another music character font, since there are too many to fit in one
% font.  It works the same way as the first one.

/mfont1 100 dict def
mfont1 begin
	/FontType 3 def
	/FontMatrix [ .001 0 0 0.001 0 0 ] def
	/FontBBox [ -2000 -4030 2000 4030 ] def
	/FontName (Mfont1) def

	% set up Encoding vector with standard names
	/Encoding 256 array def
	StandardEncoding Encoding copy
	pop

	%%%%% define routines that will be used by multiple characters %%%%%

	/do_dwh_bars {
		% the two bars surrounding a double whole note
		lwid setlinewidth
		-420 -600 moveto -420 600 lineto stroke
		420 -600 moveto 420 600 lineto stroke
	} def
	/do_righttriangle {
		newpath
		420 270 moveto -420 270 lineto 350 -300 lineto 420 -300 lineto
		350 150 moveto -140 150 lineto 350 -213 lineto
		eofill
	} def
	/do_fillrighttriangle {
		newpath
		420 270 moveto -420 270 lineto 350 -300 lineto 420 -300 lineto
		fill
	} def
	/do_rectangle {
		newpath
		420 270 moveto -420 270 lineto -420 -270 lineto 420 -270 lineto
		350 150 moveto -350 150 lineto -350 -150 lineto 350 -150 lineto
		eofill
	} def
	/do_isostriangle {
		newpath
		0 300 moveto -420 -270 lineto 420 -270 lineto
		0 182 moveto -245 -150 lineto 245 -150 lineto
		eofill
	} def
	/do_piewedge {
		newpath
		0 -300 moveto 0 -244 514 35 145 arc
		0 -209 moveto 0 -244 394 43 137 arc
		eofill
	} def
	/do_semicircle {
		newpath
		gsave
		1 1.357 scale 420 199 moveto 0 199 420 180 360 arc
		1 1.09 scale 350 111 moveto 0 199 350 194.1 345.9 arc
		eofill
		grestore
	} def
	/do_slashhead {
		newpath
		lwid setlinewidth
		-620 -530 moveto -480 -670 lineto 620 530 lineto 480 670 lineto
		closepath stroke
	} def

	% subsidiary dictionary of character definitions
	/CharStrings 128 dict def
	CharStrings begin

		/.notdef {} def

		% Here are the definitions of the characters.  A stepsize here
		% is 300 units (assuming the character is drawn at its default
		% size).

		% dwhrighttriangle
		/A {
			do_righttriangle
			do_dwh_bars
		} def

		% righttriangle
		/B {
			do_righttriangle
		} def

		% fillrighttriangle
		/C {
			newpath
			420 270 moveto -420 270 lineto 350 -300 lineto
			420 -300 lineto
			fill
		} def

		% udwhrighttriangle
		/D {
			gsave
			180 rotate
			do_righttriangle
			do_dwh_bars
			grestore
		} def

		% urighttriangle
		/E {
			gsave
			180 rotate
			do_righttriangle
			grestore
		} def

		% ufillrighttriangle
		/F {
			gsave
			180 rotate
			do_fillrighttriangle
			grestore
		} def

		% dwhrectangle
		/G {
			do_rectangle
			do_dwh_bars
		} def

		% rectangle
		/H {
			do_rectangle
		} def

		% fillrectangle
		/I {
			newpath
			420 270 moveto -420 270 lineto -420 -270 lineto
			420 -270 lineto
			fill
		} def

		% dwhisostriangle
		/J {
			do_isostriangle
			do_dwh_bars
		} def

		% isostriangle
		/K {
			do_isostriangle
		} def

		% fillisostriangle
		/L {
			newpath
			0 300 moveto -420 -270 lineto 420 -270 lineto
			fill
		} def

		% dwhpiewedge
		/M {
			do_piewedge
			do_dwh_bars
		} def

		% piewedge
		/N {
			do_piewedge
		} def

		% fillpiewedge
		/O {
			newpath
			0 -300 moveto 0 -244 514 35 145 arc
			fill
		} def

		% dwhsemicircle
		/P {
			do_semicircle
			do_dwh_bars
		} def

		% semicircle
		/Q {
			do_semicircle
		} def

		% fillsemicircle
		/R {
			newpath
			gsave
			1 570 420 div scale
			420 199 moveto 0 199 420 180 360 arc
			fill
			grestore
		} def

		% dwhslashhead
		/S {
			do_slashhead
			lwid setlinewidth
			-650 -600 moveto -650 600 lineto stroke
			650 -600 moveto 650 600 lineto stroke
		} def

		% slashhead
		/T {
			do_slashhead
		} def

		% fillslashhead
		/U {
			newpath
			200 setlinewidth
			-550 -600 moveto 550 600 lineto stroke
		} def

		% blankhead
		/V {
			%print nothing
		} def
	end

	/BuildChar {

		exch begin
		Encoding exch get

		dup
		Mcbbox1 exch get
		aload pop setcachedevice

		CharStrings exch get
		exec
		end
	} def
end


% General routines for printing any music character, invoked by each music
% character's specific routine below.  The scaling factor (default 1) needs
% to be multiplied by 10 to get the actual size.  These routines restore the
% preexisting current font when they are done.

/printmchar0 {
	gsave
	/musicchar exch def
	/Mfont0 findfont exch 10 mul scalefont setfont moveto 
	musicchar show
	grestore
} def
/printmchar1 {
	gsave
	/musicchar exch def
	/Mfont1 findfont exch 10 mul scalefont setfont moveto 
	musicchar show
	grestore
} def

% Define each music character name to be a routine that prints the character.
% Each character is to be invoked as in this example:
%	100 200 1 gclef		% at (100, 200), scale to default size & print

/gclef			{ (A) printmchar0 } def
/fclef			{ (B) printmchar0 } def
/cclef			{ (C) printmchar0 } def
/dblwhole		{ (D) printmchar0 } def
/1n			{ (E) printmchar0 } def
/2n			{ (F) printmchar0 } def
/4n			{ (G) printmchar0 } def
/upflag			{ (H) printmchar0 } def
/dnflag			{ (I) printmchar0 } def
/dwhrest		{ (J) printmchar0 } def
/1rest			{ (K) printmchar0 } def
/2rest			{ (L) printmchar0 } def
/4rest			{ (M) printmchar0 } def
/8rest			{ (N) printmchar0 } def
/16rest			{ (O) printmchar0 } def
/32rest			{ (P) printmchar0 } def
/64rest			{ (Q) printmchar0 } def
/128rest		{ (R) printmchar0 } def
/256rest		{ (S) printmchar0 } def
/dot			{ (T) printmchar0 } def
/nat			{ (U) printmchar0 } def
/sharp			{ (V) printmchar0 } def
/flat			{ (W) printmchar0 } def
/dblsharp		{ (X) printmchar0 } def
/dblflat		{ (Y) printmchar0 } def
/xnote			{ (Z) printmchar0 } def
/dwhdiamond		{ (a) printmchar0 } def
/diamond		{ (b) printmchar0 } def
/filldiamond		{ (c) printmchar0 } def
/up2n			{ (d) printmchar0 } def
/dn2n			{ (e) printmchar0 } def
/up4n			{ (f) printmchar0 } def
/dn4n			{ (g) printmchar0 } def
/up8n			{ (h) printmchar0 } def
/dn8n			{ (i) printmchar0 } def
/up16n			{ (j) printmchar0 } def
/dn16n			{ (k) printmchar0 } def
/up32n			{ (l) printmchar0 } def
/dn32n			{ (m) printmchar0 } def
/up64n			{ (n) printmchar0 } def
/dn64n			{ (o) printmchar0 } def
/up128n			{ (p) printmchar0 } def
/dn128n			{ (q) printmchar0 } def
/up256n			{ (r) printmchar0 } def
/dn256n			{ (s) printmchar0 } def
/com			{ (t) printmchar0 } def
/cut			{ (u) printmchar0 } def
/begped			{ (v) printmchar0 } def
/pedal			{ (w) printmchar0 } def
/endped			{ (x) printmchar0 } def
/dnbow			{ (y) printmchar0 } def
/upbow			{ (z) printmchar0 } def
/wedge			{ (1) printmchar0 } def
/uwedge			{ (2) printmchar0 } def
/ferm			{ (3) printmchar0 } def
/uferm			{ (4) printmchar0 } def
/sign			{ (5) printmchar0 } def
/coda			{ (6) printmchar0 } def
/mor			{ (7) printmchar0 } def
/invmor			{ (8) printmchar0 } def
/turn			{ (9) printmchar0 } def
/invturn		{ (0) printmchar0 } def
/acc_gt			{ (#) printmchar0 } def
/acc_hat		{ ($) printmchar0 } def
/acc_uhat		{ (") printmchar0 } def
/tr			{ (*) printmchar0 } def
/leg			{ (,) printmchar0 } def
/rr			{ (-) printmchar0 } def
/measrpt		{ (.) printmchar0 } def
/copyright		{ (/) printmchar0 } def
/dim			{ (`) printmchar0 } def
/halfdim		{ (') printmchar0 } def
/triangle		{ (^) printmchar0 } def
/qwhrest		{ (&) printmchar0 } def
/ll1rest		{ (!) printmchar0 } def
/ll2rest		{ (@) printmchar0 } def
/dwhrighttriangle	{ (A) printmchar1 } def
/righttriangle		{ (B) printmchar1 } def
/fillrighttriangle	{ (C) printmchar1 } def
/udwhrighttriangle	{ (D) printmchar1 } def
/urighttriangle		{ (E) printmchar1 } def
/ufillrighttriangle	{ (F) printmchar1 } def
/dwhrectangle		{ (G) printmchar1 } def
/rectangle		{ (H) printmchar1 } def
/fillrectangle		{ (I) printmchar1 } def
/dwhisostriangle	{ (J) printmchar1 } def
/isostriangle		{ (K) printmchar1 } def
/fillisostriangle	{ (L) printmchar1 } def
/dwhpiewedge		{ (M) printmchar1 } def
/piewedge		{ (N) printmchar1 } def
/fillpiewedge		{ (O) printmchar1 } def
/dwhsemicircle		{ (P) printmchar1 } def
/semicircle		{ (Q) printmchar1 } def
/fillsemicircle		{ (R) printmchar1 } def
/dwhslashhead		{ (S) printmchar1 } def
/slashhead		{ (T) printmchar1 } def
/fillslashhead		{ (U) printmchar1 } def
/blankhead		{ (V) printmchar1 } def


% Define routines for Mup output other than music characters.

/stepsize 3 def	   % define a step size as 3 points (at default magnification)

% x1 y1 x2 lines dist staffscale staff
%		draw a staff starting at x1, y1 and extending to x2 with "lines"
%		lines, 2*dist*stepsize apart, scaled by staffscale
/staff {
	/staffscale exch def
	/dist exch def
	/lines exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	0.7 staffscale mul setlinewidth
	1 lines sub  2  lines 1 sub {	% loop from bottom line to top line
		dup stepsize mul staffscale mul dist mul y1 add x1 exch moveto
		stepsize mul staffscale mul dist mul y1 add x2 exch lineto stroke
	} for
} def

% x y1 y2 bracket	draw a bracket; y1 is the top
/bracket {
	/y2 exch def
	/y1 exch def
	/x exch def
	gsave
	3 setlinewidth
	x 2 sub y1 1 add moveto
	x 2 sub y2 1 sub lineto
	stroke
	x 2 sub y1 1 add moveto
	x 1 sub y1 1 add   x 3 add y1 1 add   x 5 add y1 6 add   curveto
	x 6 add y1 5 add lineto
	x 5 add y1 2 add   x 1 add y1 2 sub   x 2 sub y1 2 sub   curveto
	fill
	x 2 sub y2 1 sub moveto
	x 1 sub y2 1 sub   x 3 add y2 1 sub   x 5 add y2 6 sub   curveto
	x 6 add y2 5 sub lineto
	x 5 add y2 2 sub   x 1 add y2 2 add   x 2 sub y2 2 add   curveto
	fill
	grestore
} def

% x y1 y2 right repeatbracket	draw a bracket for a repeat; y1 is the top,
%				right==1 means facing to the right
/repeatbracket {
	/right exch def
	/y2 exch def
	/y1 exch def
	/x exch def
	gsave
	right 0 eq {
		x y1 y2 add 2 div translate
		180 rotate
		0 x sub 0 y1 y2 add 2 div sub translate
	} if
	x 4.5 sub y1 1 add moveto
	x 0 sub y1 1 add   x 2 add y1 1 add   x 6 add y1 5 add   curveto
	x 6 add y1 4 add lineto
	x 6 add y1 2 add   x 1 add y1 2 sub   x 4.5 sub y1 1.5 sub   curveto
	fill
	x 4.5 sub y2 1 sub moveto
	x 0 sub y2 1 sub   x 2 add y2 1 sub   x 6 add y2 5 sub   curveto
	x 6 add y2 4 sub lineto
	x 6 add y2 2 sub   x 1 add y2 2 add   x 4.5 sub y2 1.5 add   curveto
	fill
	grestore
} def

% x y1 y2 brace		draw a brace; y1 is the top
/brace {
	/y2 exch def
	/y1 exch def
	/x exch def
	gsave
	x 6 sub y1 y2 add 2 div translate
	/topy y1 y2 sub 2 div 1 sub def
	0.667 1 scale
	0 1 1 {
		pop
		%0 topy moveto 0 0 lineto stroke
		0 0 moveto
		16 topy 0.2 mul   -11 topy 0.6 mul   8 topy   curveto
		8.7 topy lineto
		-7 topy 0.7 mul   20 topy 0.3 mul   1 0   curveto
		fill
		1 -1 scale	% flip to do bottom half
	} for
	grestore
} def

% endx endy wavy staffscale	draw a wavy line from current point to here,
%				scaled by staffscale
/wavy {
	/staffscale exch def
	/endy exch def		% define the end point of the line
	/endx exch def
	currentpoint		% line starts at current point
	/begy exch def		% define the beginning point of the line
	/begx exch def
	gsave
	/dx endx begx sub def	% find delta x and delta y
	/dy endy begy sub def
	/r dx dx mul dy dy mul add sqrt def	% hypotenuse
	/theta dy dx atan def			% angle with positive x axis
	begx begy translate	% change axes so that we can draw the line
	theta rotate		%   from (0, 0) to (r, 0)
	staffscale staffscale scale	% scale everything by staffscale
	/scaledr r staffscale div def	% but scale r in reverse to keep length

	% Each outer loop draws one cycle of the squiggle.  It continues until
	% we are at or beyond the desired end point.
	0 0 moveto
	0 6 scaledr {
		gsave
		% first loop draws left half of squiggle; second draws right
		0 1 1 {
			0.0 0.4 moveto
			2.0 1.9 3.4 2.3 3.9 0.0 curveto
			2.1 0.0 lineto
			1.9 0.8 1.4 0.7 0.0 -0.4 curveto
			fill
			pop 180 rotate -6 0 translate
		} for
		grestore

		pop 6 0 translate	% shift axes right one squiggle
	} for

	grestore
} def

% x y space frets fretno numvert curvel curver [ f1 f2 f3 ... ] grid
%				print a guitar grid diagram
/grid {
	/grid_positions exch def % 0="o", -1="x", -2=nothing, positive=dot
	/curver exch def	% right string for curve, 0 if none
	/curvel exch def	% left string for curve, 0 if none
	/numvert exch def	% vertical position to print fretno, 0 if none
	/fretno exch def	% fret no. to print at right, 0 if none
	/frets exch def		% number of fret lines
	/space exch def		% points between two neighboring lines
	/y exch def		% y coord of top fret line
	/x exch def		% x coord of left strings

	gsave
	/strings grid_positions length def	% number of strings
	/lmarky 0.4 space mul y add def		% lowest Y of a "o" or "x"
	space 10 div setlinewidth
	2 setlinecap

	% draw the lines of the grid
	0  1  strings 1 sub {	% loop from left string to right string
		dup space mul x add y moveto
		space mul x add frets 1 sub space mul y exch sub lineto stroke
	} for
	0  -1  1 frets sub {	% loop from top fret (nut) to bottom fret
		dup space mul y add x exch moveto
		space mul y add strings 1 sub space mul x add exch lineto stroke
	} for

	% draw the curved line if there is one
	curvel 0 gt {
		% within strings curvel to curver, find smallest positive fret
		/minfret 1000 def
		curvel 1 curver {
			/strno exch def
			/grid_p grid_positions strno 1 sub get def
			grid_p 0 gt grid_p minfret lt and {
				/minfret grid_p def
			} if
		} for

		% if curve goes above top fret, other marks must be higher
		minfret 1 eq {
			/hmarky 1.2 space mul y add def
		} {
			/hmarky lmarky def
		} ifelse

		/strdiff curver curvel sub def
		space 8 div setlinewidth

		% set endpoint coords of curve; higher if curve is short
		/curvex1 curvel 1 sub space mul x add def
		/curvex2 curver 1 sub space mul x add def
		/curvey 1 minfret sub space mul y add def
		strdiff 3 lt {
			/curvey 0.2 strdiff div space mul curvey add def
		} if

		% move to left end, set other points, draw curve
		curvex1 curvey moveto

		curvex1 curvex2 curvex1 sub 3 div add
		curvey space 0.4 strdiff sqrt mul mul add

		curvex2 curvex2 curvex1 sub 3 div sub
		curvey space 0.4 strdiff sqrt mul mul add

		curvex2 curvey curveto stroke
	} if

	space 10 div setlinewidth

	% draw dots and x and o marks
	0  1  strings 1 sub {	% loop from left string to right string
		/strno exch def	% first string is 0
		/grid_p grid_positions strno get def
		/strx strno space mul x add def

		% set Y of mark higher if curved line covers this string
		strno 1 add curvel ge  strno 1 add curver le  and {
			/marky hmarky def
		} {
			/marky lmarky def
		} ifelse

		grid_p -1 eq {		% draw an X above the string
			/xhwid space 3 div def
			strx xhwid sub marky xhwid sub moveto
			strx xhwid add marky xhwid add lineto stroke
			strx xhwid sub marky xhwid add moveto
			strx xhwid add marky xhwid sub lineto stroke
		} if
		grid_p 0 eq {		% draw a circle above the string
			strx marky space 0.3 mul 0 360 arc stroke
		} if
		grid_p 1 ge {		% draw a dot by the proper fret
			strx y grid_p space mul sub space 3 div add
			space 3 div 0 360 arc fill
		} if
	} for

	% print "X fr" if requested
	fretno 0 gt {
		/Palatino-Roman findfont space 1.9 mul scalefont setfont
		x strings 0.5 sub space mul add
		y space numvert 0.3 add mul sub moveto
		fretno 2 string cvs show ( fr) show
	} if
	grestore
} def

% x1 y1 x2 y2 whitebox		draw a white rectangle with opposite
%				corners of (x1,y1) and (x2,y2)
/whitebox {
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	1.0 setgray
	newpath
	x1 y1 moveto
	x1 y2 lineto
	x2 y2 lineto
	x2 y1 lineto
	closepath
	fill
	stroke
	0.0 setgray
} def


/LineNum 0 def
/InputFile (unknown) def

% n linenum
/linenum {
	/LineNum exch def
} def

% (inputfilename) inputfile
/inputfile {
	/InputFile exch def
} def

% find size of Encoding and make a dictionary
% that size for bounding box information
mfont0 begin
/dictsize Encoding length def
mfont0 /Mcbbox0 dictsize dict put

% temporarily redefine printmchar0 to get code
5 dict begin
/printmchar0 { {} forall } def

Mcbbox0 Encoding gclef get [ 1790.0 0 -915.0 -1605.0 865.0 3015.0 ] put
Mcbbox0 Encoding fclef get [ 1840.0 0 -1015.0 -1705.0 815.0 655.0 ] put
Mcbbox0 Encoding cclef get [ 1540.0 0 -765.0 -1245.0 765.0 1255.0 ] put
Mcbbox0 Encoding dblwhole get [ 1090.0 0 -535.0 -605.0 545.0 615.0 ] put
Mcbbox0 Encoding 1n get [ 1080.0 0 -535.0 -335.0 535.0 345.0 ] put
Mcbbox0 Encoding 2n get [ 880.0 0 -435.0 -345.0 435.0 355.0 ] put
Mcbbox0 Encoding 4n get [ 840.0 0 -415.0 -335.0 415.0 345.0 ] put
Mcbbox0 Encoding upflag get [ 640.0 0 -335.0 -5.0 295.0 1715.0 ] put
Mcbbox0 Encoding dnflag get [ 640.0 0 -335.0 -1705.0 295.0 15.0 ] put
Mcbbox0 Encoding qwhrest get [ 340.0 0 -165.0 -605.0 165.0 615.0 ] put
Mcbbox0 Encoding dwhrest get [ 340.0 0 -165.0 -5.0 165.0 615.0 ] put
Mcbbox0 Encoding 1rest get [ 1540.0 0 -765.0 -15.0 765.0 645.0 ] put
Mcbbox0 Encoding 2rest get [ 1540.0 0 -765.0 -45.0 765.0 315.0 ] put
Mcbbox0 Encoding 4rest get [ 650.0 0 -345.0 -885.0 295.0 995.0 ] put
Mcbbox0 Encoding 8rest get [ 750.0 0 -305.0 -625.0 435.0 485.0 ] put
Mcbbox0 Encoding 16rest get [ 830.0 0 -415.0 -1215.0 405.0 485.0 ] put
Mcbbox0 Encoding 32rest get [ 940.0 0 -415.0 -1215.0 515.0 1085.0 ] put
Mcbbox0 Encoding 64rest get [ 1040.0 0 -515.0 -1515.0 515.0 1085.0 ] put
Mcbbox0 Encoding 128rest get [ 1140.0 0 -515.0 -1515.0 615.0 1685.0 ] put
Mcbbox0 Encoding 256rest get [ 1250.0 0 -625.0 -2115.0 615.0 1685.0 ] put
Mcbbox0 Encoding ll1rest get [ 840.0 0 -415.0 -15.0 415.0 625.0 ] put
Mcbbox0 Encoding ll2rest get [ 840.0 0 -415.0 -15.0 415.0 325.0 ] put
Mcbbox0 Encoding dot get [ 280.0 0 -135.0 -125.0 135.0 135.0 ] put
Mcbbox0 Encoding nat get [ 520.0 0 -255.0 -855.0 255.0 865.0 ] put
Mcbbox0 Encoding sharp get [ 700.0 0 -345.0 -935.0 345.0 945.0 ] put
Mcbbox0 Encoding flat get [ 580.0 0 -295.0 -405.0 275.0 1115.0 ] put
Mcbbox0 Encoding dblsharp get [ 720.0 0 -355.0 -345.0 355.0 355.0 ] put
Mcbbox0 Encoding dblflat get [ 1160.0 0 -585.0 -405.0 565.0 1115.0 ] put
Mcbbox0 Encoding xnote get [ 880.0 0 -435.0 -365.0 435.0 375.0 ] put
Mcbbox0 Encoding dwhdiamond get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox0 Encoding diamond get [ 880.0 0 -435.0 -305.0 435.0 315.0 ] put
Mcbbox0 Encoding filldiamond get [ 880.0 0 -435.0 -305.0 435.0 315.0 ] put
Mcbbox0 Encoding up2n get [ 880.0 0 -435.0 -345.0 435.0 2115.0 ] put
Mcbbox0 Encoding dn2n get [ 880.0 0 -435.0 -2105.0 435.0 355.0 ] put
Mcbbox0 Encoding up4n get [ 850.0 0 -415.0 -335.0 425.0 2115.0 ] put
Mcbbox0 Encoding dn4n get [ 840.0 0 -415.0 -2105.0 415.0 345.0 ] put
Mcbbox0 Encoding com get [ 1110.0 0 -585.0 -645.0 515.0 655.0 ] put
Mcbbox0 Encoding cut get [ 1110.0 0 -585.0 -905.0 515.0 915.0 ] put
Mcbbox0 Encoding begped get [ 470.0 0 -245.0 -45.0 215.0 615.0 ] put
Mcbbox0 Encoding pedal get [ 1040.0 0 -515.0 -45.0 515.0 675.0 ] put
Mcbbox0 Encoding endped get [ 480.0 0 -215.0 -45.0 255.0 615.0 ] put
Mcbbox0 Encoding dnbow get [ 810.0 0 -395.0 -5.0 405.0 915.0 ] put
Mcbbox0 Encoding upbow get [ 720.0 0 -355.0 -115.0 355.0 925.0 ] put
Mcbbox0 Encoding wedge get [ 340.0 0 -165.0 -5.0 165.0 515.0 ] put
Mcbbox0 Encoding uwedge get [ 340.0 0 -165.0 -5.0 165.0 515.0 ] put
Mcbbox0 Encoding ferm get [ 1640.0 0 -815.0 -5.0 815.0 1015.0 ] put
Mcbbox0 Encoding uferm get [ 1640.0 0 -815.0 -5.0 815.0 1015.0 ] put
Mcbbox0 Encoding sign get [ 1340.0 0 -665.0 -825.0 665.0 835.0 ] put
Mcbbox0 Encoding coda get [ 1640.0 0 -815.0 -855.0 815.0 865.0 ] put
Mcbbox0 Encoding mor get [ 1320.0 0 -655.0 -285.0 655.0 295.0 ] put
Mcbbox0 Encoding invmor get [ 1320.0 0 -655.0 -455.0 655.0 465.0 ] put
Mcbbox0 Encoding turn get [ 1300.0 0 -645.0 -335.0 645.0 345.0 ] put
Mcbbox0 Encoding invturn get [ 1300.0 0 -645.0 -335.0 645.0 345.0 ] put
Mcbbox0 Encoding acc_gt get [ 1170.0 0 -525.0 -345.0 635.0 355.0 ] put
Mcbbox0 Encoding acc_hat get [ 780.0 0 -385.0 -5.0 385.0 875.0 ] put
Mcbbox0 Encoding acc_uhat get [ 780.0 0 -385.0 -5.0 385.0 875.0 ] put
Mcbbox0 Encoding tr get [ 1440.0 0 -715.0 -5.0 715.0 1015.0 ] put
Mcbbox0 Encoding leg get [ 840.0 0 -415.0 -55.0 415.0 65.0 ] put
Mcbbox0 Encoding rr get [ 940.0 0 -465.0 -25.0 465.0 1035.0 ] put
Mcbbox0 Encoding dim get [ 540.0 0 -265.0 -15.0 265.0 905.0 ] put
Mcbbox0 Encoding halfdim get [ 760.0 0 -375.0 -15.0 375.0 1015.0 ] put
Mcbbox0 Encoding triangle get [ 800.0 0 -395.0 -45.0 395.0 785.0 ] put
Mcbbox0 Encoding measrpt get [ 1300.0 0 -645.0 -675.0 645.0 685.0 ] put
Mcbbox0 Encoding copyright get [ 920.0 0 -455.0 -45.0 455.0 855.0 ] put
Mcbbox0 Encoding up8n get [ 1390.0 0 -745.0 -335.0 635.0 2115.0 ] put
Mcbbox0 Encoding dn8n get [ 840.0 0 -415.0 -2105.0 415.0 345.0 ] put
Mcbbox0 Encoding up16n get [ 1390.0 0 -745.0 -335.0 635.0 2115.0 ] put
Mcbbox0 Encoding dn16n get [ 840.0 0 -415.0 -2105.0 415.0 345.0 ] put
Mcbbox0 Encoding up32n get [ 1390.0 0 -745.0 -335.0 635.0 2595.0 ] put
Mcbbox0 Encoding dn32n get [ 840.0 0 -415.0 -2585.0 415.0 345.0 ] put
Mcbbox0 Encoding up64n get [ 1390.0 0 -745.0 -335.0 635.0 3075.0 ] put
Mcbbox0 Encoding dn64n get [ 840.0 0 -415.0 -3065.0 415.0 345.0 ] put
Mcbbox0 Encoding up128n get [ 1390.0 0 -745.0 -335.0 635.0 3555.0 ] put
Mcbbox0 Encoding dn128n get [ 840.0 0 -415.0 -3545.0 415.0 345.0 ] put
Mcbbox0 Encoding up256n get [ 1390.0 0 -745.0 -335.0 635.0 3975.0 ] put
Mcbbox0 Encoding dn256n get [ 840.0 0 -415.0 -3965.0 415.0 345.0 ] put

end
end

/Mfont0 mfont0 definefont


% find size of Encoding and make a dictionary
% that size for bounding box information
mfont1 begin
/dictsize Encoding length def
mfont1 /Mcbbox1 dictsize dict put

% temporarily redefine printmchar1 to get code
5 dict begin
/printmchar1 { {} forall } def

Mcbbox1 Encoding dwhrighttriangle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding righttriangle get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding fillrighttriangle get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding udwhrighttriangle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding urighttriangle get [ 880.0 0 -435.0 -275.0 435.0 315.0 ] put
Mcbbox1 Encoding ufillrighttriangle get [ 880.0 0 -435.0 -275.0 435.0 315.0 ] put
Mcbbox1 Encoding dwhrectangle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding rectangle get [ 880.0 0 -435.0 -275.0 435.0 285.0 ] put
Mcbbox1 Encoding fillrectangle get [ 880.0 0 -435.0 -275.0 435.0 285.0 ] put
Mcbbox1 Encoding dwhisostriangle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding isostriangle get [ 880.0 0 -435.0 -275.0 435.0 315.0 ] put
Mcbbox1 Encoding fillisostriangle get [ 880.0 0 -435.0 -275.0 435.0 315.0 ] put
Mcbbox1 Encoding dwhpiewedge get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding piewedge get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding fillpiewedge get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding dwhsemicircle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding semicircle get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding fillsemicircle get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding dwhslashhead get [ 1410.0 0 -695.0 -725.0 705.0 735.0 ] put
Mcbbox1 Encoding slashhead get [ 1380.0 0 -685.0 -725.0 685.0 735.0 ] put
Mcbbox1 Encoding fillslashhead get [ 1300.0 0 -645.0 -675.0 645.0 685.0 ] put
Mcbbox1 Encoding blankhead get [ 880.0 0 -435.0 -275.0 435.0 285.0 ] put

end
end

/Mfont1 mfont1 definefont

/flagsep 1.60 300 mul def	 % 1.60 stepsizes
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] >> setpagedevice
%%EndFeature
%%EndProlog
%%Page: 1 1
save
0.750000 0.750000 scale
%  S_SSV
(kaleidakustikon_2.mup) inputfile
7 linenum
%  S_SSV
15 linenum
%  S_SSV
18 linenum
%  S_SSV
21 linenum
%  S_FEED
27 linenum
88.79 941.83 768.00 5 1.000000 1.000000 staff
88.79 875.36 768.00 5 1.000000 1.000000 staff
87.79 953.83 863.36 brace
0.70 setlinewidth
88.79 953.83 moveto
88.79 863.36 lineto stroke
%  S_CLEFSIG
27 linenum
100.58 935.83 1.000000 gclef
100.83 881.36 1.000000 fclef
116.62 941.83 1.000000 flat
116.62 869.36 1.000000 flat
/NewCenturySchlbk-Bold findfont
16 scalefont
setfont
122.36 941.83 moveto
(3) show
/NewCenturySchlbk-Bold findfont
16 scalefont
setfont
122.36 929.91 moveto
(4) show
/NewCenturySchlbk-Bold findfont
16 scalefont
setfont
122.36 875.36 moveto
(3) show
/NewCenturySchlbk-Bold findfont
16 scalefont
setfont
122.36 863.44 moveto
(4) show
%  S_CHHEAD
27 linenum
%  S_STAFF
% staff 1
save
145.61 944.83 1.000000 4n
141.93 944.08 moveto
141.93 925.77 lineto stroke
156.52 938.83 1.000000 4n
152.83 938.08 moveto
152.83 922.39 lineto stroke
newpath
141.58 927.27 moveto
153.18 923.89 lineto
153.18 920.89 lineto
141.58 924.27 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
145.61 875.36 1.000000 4rest
restore
%  S_BAR
29 linenum
0.70 setlinewidth
169.24 953.83 moveto
169.24 929.83 lineto stroke
169.24 887.36 moveto
169.24 863.36 lineto stroke
%  S_CHHEAD
32 linenum
%  S_STAFF
% staff 1
save
177.77 953.83 1.000000 4n
174.09 953.08 moveto
174.09 932.83 lineto stroke
186.16 956.83 0.583333 4n
188.16 957.32 moveto
188.16 968.53 lineto stroke
189.92 968.53 0.583333 dnflag
newpath
184.91 958.78 moveto
191.41 965.78 lineto
191.41 964.28 lineto
184.91 957.28 lineto
closepath
fill
197.86 953.83 1.000000 4n
194.18 953.08 moveto
194.18 934.07 lineto stroke
207.93 950.83 1.000000 4n
204.24 950.08 moveto
204.24 932.43 lineto stroke
217.99 953.83 1.000000 4n
214.31 953.08 moveto
214.31 930.78 lineto stroke
228.89 944.83 1.000000 4n
225.21 944.08 moveto
225.21 928.99 lineto stroke
newpath
193.83 935.58 moveto
225.56 930.49 lineto
225.56 927.49 lineto
193.83 932.58 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
177.77 860.36 1.000000 4n
0.70 setlinewidth
181.45 861.11 moveto
181.45 881.36 lineto stroke
197.86 893.36 1.000000 4n
191.63 893.36 moveto
204.09 893.36 lineto stroke
197.86 887.36 1.000000 4n
197.86 881.36 1.000000 4n
194.18 892.61 moveto
194.18 860.36 lineto stroke
217.99 893.36 1.000000 4n
211.76 893.36 moveto
224.22 893.36 lineto stroke
217.99 887.36 1.000000 4n
217.99 881.36 1.000000 4n
214.31 892.61 moveto
214.31 860.36 lineto stroke
restore
%  S_BAR
34 linenum
0.70 setlinewidth
241.62 953.83 moveto
241.62 929.83 lineto stroke
241.62 887.36 moveto
241.62 863.36 lineto stroke
%  S_CHHEAD
38 linenum
%  S_STAFF
% staff 1
save
250.15 959.83 1.000000 4n
243.92 959.83 moveto
256.38 959.83 lineto stroke
246.47 959.08 moveto
246.47 934.57 lineto stroke
260.22 953.83 1.000000 4n
256.53 953.08 moveto
256.53 934.57 lineto stroke
270.28 965.83 1.000000 4n
264.05 965.83 moveto
276.51 965.83 lineto stroke
264.05 959.83 moveto
274.51 959.83 lineto stroke
266.60 965.08 moveto
266.60 934.57 lineto stroke
280.34 959.83 1.000000 4n
275.61 959.83 moveto
285.08 959.83 lineto stroke
276.66 959.08 moveto
276.66 934.57 lineto stroke
290.41 974.83 1.000000 4n
284.18 971.83 moveto
296.64 971.83 lineto stroke
284.18 965.83 moveto
296.64 965.83 lineto stroke
286.18 959.83 moveto
296.64 959.83 lineto stroke
286.73 974.08 moveto
286.73 934.57 lineto stroke
301.31 953.83 1.000000 4n
297.63 953.08 moveto
297.63 934.57 lineto stroke
newpath
246.12 936.07 moveto
297.98 936.07 lineto
297.98 933.07 lineto
246.12 933.07 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
250.15 860.36 1.000000 4n
0.70 setlinewidth
253.83 861.11 moveto
253.83 881.36 lineto stroke
270.28 893.36 1.000000 4n
264.05 893.36 moveto
276.51 893.36 lineto stroke
270.28 887.36 1.000000 4n
270.28 881.36 1.000000 4n
266.60 892.61 moveto
266.60 860.36 lineto stroke
290.41 893.36 1.000000 4n
284.18 893.36 moveto
296.64 893.36 lineto stroke
290.41 887.36 1.000000 4n
290.41 881.36 1.000000 4n
286.73 892.61 moveto
286.73 860.36 lineto stroke
restore
%  S_BAR
40 linenum
0.70 setlinewidth
314.04 953.83 moveto
314.04 929.83 lineto stroke
314.04 887.36 moveto
314.04 863.36 lineto stroke
%  S_CHHEAD
44 linenum
%  S_STAFF
% staff 1
save
322.57 950.83 1.000000 4n
318.89 950.08 moveto
318.89 934.33 lineto stroke
332.63 968.83 1.000000 4n
326.40 965.83 moveto
337.37 965.83 lineto stroke
326.40 959.83 moveto
336.87 959.83 lineto stroke
328.95 968.08 moveto
328.95 934.33 lineto stroke
342.70 965.83 1.000000 4n
337.97 965.83 moveto
348.93 965.83 lineto stroke
338.47 959.83 moveto
346.93 959.83 lineto stroke
339.02 965.08 moveto
339.02 934.33 lineto stroke
352.76 962.83 1.000000 4n
348.03 959.83 moveto
359.00 959.83 lineto stroke
349.08 962.08 moveto
349.08 934.33 lineto stroke
362.83 956.83 1.000000 4n
359.15 956.08 moveto
359.15 934.33 lineto stroke
373.73 950.83 1.000000 4n
370.05 950.08 moveto
370.05 934.33 lineto stroke
newpath
318.54 935.83 moveto
370.40 935.83 lineto
370.40 932.83 lineto
318.54 932.83 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
322.57 872.36 1.000000 4n
0.70 setlinewidth
326.25 873.11 moveto
326.25 893.36 lineto stroke
342.70 893.36 1.000000 4n
336.47 893.36 moveto
348.93 893.36 lineto stroke
335.33 890.36 1.000000 4n
342.70 884.36 1.000000 4n
339.02 892.61 moveto
339.02 863.36 lineto stroke
362.83 893.36 1.000000 4n
356.60 893.36 moveto
369.06 893.36 lineto stroke
355.46 890.36 1.000000 4n
362.83 884.36 1.000000 4n
359.15 892.61 moveto
359.15 863.36 lineto stroke
restore
%  S_BAR
46 linenum
0.70 setlinewidth
386.46 953.83 moveto
386.46 929.83 lineto stroke
386.46 887.36 moveto
386.46 863.36 lineto stroke
%  S_CHHEAD
50 linenum
%  S_STAFF
% staff 1
save
396.23 944.83 1.000000 4n
405.50 944.83 1.000000 dot
392.55 944.08 moveto
392.55 923.83 lineto stroke
429.38 944.83 1.000000 4n
420.03 944.83 1.000000 sharp
425.70 944.08 moveto
425.70 924.64 lineto stroke
439.45 947.83 1.000000 4n
435.77 947.08 moveto
435.77 924.64 lineto stroke
450.35 941.83 1.000000 4n
446.67 941.08 moveto
446.67 924.64 lineto stroke
newpath
425.35 926.14 moveto
447.02 926.14 lineto
447.02 923.14 lineto
425.35 923.14 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
396.23 872.36 1.000000 4n
0.70 setlinewidth
399.91 873.11 moveto
399.91 893.36 lineto stroke
412.51 893.36 1.000000 4n
406.28 893.36 moveto
418.74 893.36 lineto stroke
412.51 884.36 1.000000 4n
412.51 878.36 1.000000 4n
408.83 892.61 moveto
408.83 857.36 lineto stroke
439.45 893.36 1.000000 4n
433.22 893.36 moveto
445.68 893.36 lineto stroke
439.45 884.36 1.000000 4n
439.45 878.36 1.000000 4n
435.77 892.61 moveto
435.77 857.36 lineto stroke
restore
%  S_BAR
52 linenum
0.70 setlinewidth
463.08 953.83 moveto
463.08 929.83 lineto stroke
463.08 887.36 moveto
463.08 863.36 lineto stroke
%  S_CHHEAD
56 linenum
%  S_STAFF
% staff 1
save
471.61 938.83 1.000000 4n
467.93 938.08 moveto
467.93 919.80 lineto stroke
481.67 944.83 1.000000 4n
477.99 944.08 moveto
477.99 923.16 lineto stroke
491.74 953.83 1.000000 4n
501.00 956.83 1.000000 dot
488.06 953.08 moveto
488.06 932.83 lineto stroke
521.93 938.83 1.000000 4n
525.61 939.58 moveto
525.61 959.83 lineto stroke
528.64 959.83 1.000000 dnflag
newpath
467.58 921.30 moveto
478.34 924.66 lineto
478.34 921.66 lineto
467.58 918.30 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
471.61 860.36 1.000000 4n
0.70 setlinewidth
475.29 861.11 moveto
475.29 893.01 lineto stroke
481.67 866.36 1.000000 4n
485.36 867.11 moveto
485.36 896.68 lineto stroke
491.74 872.36 1.000000 4n
495.42 873.11 moveto
495.42 900.34 lineto stroke
501.80 881.36 1.000000 4n
505.48 882.11 moveto
505.48 904.00 lineto stroke
511.87 887.36 1.000000 4n
515.55 888.11 moveto
515.55 907.66 lineto stroke
521.93 893.36 1.000000 4n
515.70 893.36 moveto
528.16 893.36 lineto stroke
525.61 894.11 moveto
525.61 911.33 lineto stroke
newpath
474.94 894.51 moveto
525.96 912.83 lineto
525.96 909.83 lineto
474.94 891.51 lineto
closepath
fill
restore
%  S_BAR
58 linenum
0.70 setlinewidth
535.51 953.83 moveto
535.51 929.83 lineto stroke
535.51 887.36 moveto
535.51 863.36 lineto stroke
%  S_CHHEAD
62 linenum
%  S_STAFF
% staff 1
save
544.04 935.83 1.000000 4n
540.36 935.08 moveto
540.36 919.33 lineto stroke
562.75 944.83 1.000000 4n
553.40 944.83 1.000000 sharp
559.07 944.08 moveto
559.07 919.33 lineto stroke
572.81 950.83 1.000000 4n
569.13 950.08 moveto
569.13 919.33 lineto stroke
582.88 947.83 1.000000 4n
579.19 947.08 moveto
579.19 919.33 lineto stroke
592.94 941.83 1.000000 4n
589.26 941.08 moveto
589.26 919.33 lineto stroke
603.84 935.83 1.000000 4n
600.16 935.08 moveto
600.16 919.33 lineto stroke
newpath
540.01 920.83 moveto
600.51 920.83 lineto
600.51 917.83 lineto
540.01 917.83 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
544.04 860.36 1.000000 4n
0.70 setlinewidth
547.73 861.11 moveto
547.73 881.36 lineto stroke
572.81 896.36 1.000000 4n
566.58 893.36 moveto
579.04 893.36 lineto stroke
572.81 890.36 1.000000 4n
569.13 895.61 moveto
569.13 869.36 lineto stroke
592.94 896.36 1.000000 4n
586.71 893.36 moveto
599.17 893.36 lineto stroke
592.94 890.36 1.000000 4n
589.26 895.61 moveto
589.26 869.36 lineto stroke
restore
%  S_BAR
64 linenum
0.70 setlinewidth
616.57 953.83 moveto
616.57 929.83 lineto stroke
616.57 887.36 moveto
616.57 863.36 lineto stroke
%  S_CHHEAD
68 linenum
%  S_STAFF
% staff 1
save
629.00 929.83 1.000000 4n
632.68 930.58 moveto
632.68 950.83 lineto stroke
635.71 950.83 1.000000 dnflag
644.29 944.83 1.000000 4n
647.97 945.58 moveto
647.97 964.83 lineto stroke
664.24 941.83 1.000000 4n
655.79 941.83 1.000000 nat
667.92 942.58 moveto
667.92 959.33 lineto stroke
681.79 941.83 1.000000 4n
673.02 941.83 1.000000 flat
685.47 942.58 moveto
685.47 959.33 lineto stroke
692.70 935.83 1.000000 4n
696.38 936.58 moveto
696.38 959.33 lineto stroke
newpath
667.57 960.83 moveto
696.73 960.83 lineto
696.73 957.83 lineto
667.57 957.83 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
625.10 872.36 1.000000 4n
0.70 setlinewidth
628.78 873.11 moveto
628.78 893.36 lineto stroke
661.72 893.36 1.000000 4n
655.49 893.36 moveto
667.95 893.36 lineto stroke
654.35 890.36 1.000000 4n
654.35 878.36 1.000000 4n
658.04 879.11 moveto
658.04 908.36 lineto stroke
689.16 893.36 1.000000 4n
682.92 893.36 moveto
695.39 893.36 lineto stroke
681.79 890.36 1.000000 4n
681.79 878.36 1.000000 4n
685.47 879.11 moveto
685.47 908.36 lineto stroke
632.90 872.36 1.000000 2n
642.38 872.36 1.000000 dot
629.00 871.61 moveto
629.00 852.36 lineto stroke
restore
%  S_BAR
71 linenum
0.70 setlinewidth
705.42 953.83 moveto
705.42 929.83 lineto stroke
705.42 887.36 moveto
705.42 863.36 lineto stroke
%  S_CHHEAD
74 linenum
%  S_STAFF
% staff 1
save
715.20 932.83 1.000000 4n
718.88 933.58 moveto
718.88 953.83 lineto stroke
733.56 941.83 1.000000 4rest
restore
%  S_STAFF
% staff 2
save
715.20 893.36 1.000000 4n
0.70 setlinewidth
708.96 893.36 moveto
721.43 893.36 lineto stroke
715.20 887.36 1.000000 4n
715.20 881.36 1.000000 4n
711.51 892.61 moveto
711.51 860.36 lineto stroke
733.56 860.36 1.000000 4n
737.24 861.11 moveto
737.24 881.36 lineto stroke
restore
%  S_BAR
76 linenum
758.50 944.83 1.000000 dot
758.50 938.83 1.000000 dot
762.50 953.83 moveto
762.50 929.83 lineto stroke
3.00 setlinewidth
766.50 953.83 moveto
766.50 929.83 lineto stroke
0.70 setlinewidth
758.50 878.36 1.000000 dot
758.50 872.36 1.000000 dot
762.50 887.36 moveto
762.50 863.36 lineto stroke
3.00 setlinewidth
766.50 887.36 moveto
766.50 863.36 lineto stroke
0.70 setlinewidth
%  S_FEED
80 linenum
50.50 791.36 768.00 5 1.000000 1.000000 staff
/Times-Roman findfont
11 scalefont
setfont
55.00 818.42 moveto
(10) show
50.50 737.36 768.00 5 1.000000 1.000000 staff
49.50 803.36 725.36 brace
50.50 803.36 moveto
50.50 725.36 lineto stroke
%  S_CLEFSIG
80 linenum
62.29 785.36 1.000000 gclef
62.54 743.36 1.000000 fclef
78.33 791.36 1.000000 flat
78.33 731.36 1.000000 flat
96.08 794.36 1.000000 dot
96.08 788.36 1.000000 dot
93.08 803.36 moveto
93.08 779.36 lineto stroke
3.00 setlinewidth
89.08 803.36 moveto
89.08 779.36 lineto stroke
0.70 setlinewidth
96.08 740.36 1.000000 dot
96.08 734.36 1.000000 dot
93.08 749.36 moveto
93.08 725.36 lineto stroke
3.00 setlinewidth
89.08 749.36 moveto
89.08 725.36 lineto stroke
0.70 setlinewidth
%  S_CHHEAD
80 linenum
%  S_STAFF
% staff 1
save
112.11 794.36 1.000000 4n
108.43 793.61 moveto
108.43 774.41 lineto stroke
123.01 800.36 1.000000 4n
119.33 799.61 moveto
119.33 778.38 lineto stroke
newpath
108.08 775.91 moveto
119.68 779.88 lineto
119.68 776.88 lineto
108.08 772.91 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
112.11 737.36 1.000000 4rest
restore
%  S_BAR
82 linenum
0.70 setlinewidth
135.73 803.36 moveto
135.73 779.36 lineto stroke
135.73 749.36 moveto
135.73 725.36 lineto stroke
%  S_CHHEAD
85 linenum
%  S_STAFF
% staff 1
save
144.26 806.36 1.000000 4n
140.58 805.61 moveto
140.58 785.36 lineto stroke
152.69 809.36 0.583333 4n
148.13 809.36 moveto
157.24 809.36 lineto stroke
154.69 809.85 moveto
154.69 821.06 lineto stroke
156.45 821.06 0.583333 dnflag
newpath
151.44 811.31 moveto
157.94 818.31 lineto
157.94 816.81 lineto
151.44 809.81 lineto
closepath
fill
164.39 806.36 1.000000 4n
160.71 805.61 moveto
160.71 785.53 lineto stroke
183.09 803.36 1.000000 4n
173.74 803.36 1.000000 sharp
179.41 802.61 moveto
179.41 785.53 lineto stroke
193.16 806.36 1.000000 4n
189.48 805.61 moveto
189.48 785.53 lineto stroke
204.06 809.36 1.000000 4n
197.83 809.36 moveto
210.29 809.36 lineto stroke
200.38 808.61 moveto
200.38 785.53 lineto stroke
newpath
160.36 787.03 moveto
200.73 787.03 lineto
200.73 784.03 lineto
160.36 784.03 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
144.26 734.36 1.000000 4n
0.70 setlinewidth
140.58 733.61 moveto
140.58 716.39 lineto stroke
154.33 755.36 1.000000 4n
148.09 755.36 moveto
160.56 755.36 lineto stroke
150.64 754.61 moveto
150.64 720.06 lineto stroke
164.39 752.36 1.000000 4n
164.39 740.36 1.000000 4n
160.71 751.61 moveto
160.71 723.86 lineto stroke
183.09 755.36 1.000000 4n
176.86 755.36 moveto
189.33 755.36 lineto stroke
179.41 754.61 moveto
179.41 723.86 lineto stroke
193.16 752.36 1.000000 4n
193.16 740.36 1.000000 4n
189.48 751.61 moveto
189.48 723.86 lineto stroke
204.06 755.36 1.000000 4n
197.83 755.36 moveto
210.29 755.36 lineto stroke
200.38 754.61 moveto
200.38 723.86 lineto stroke
newpath
140.23 717.89 moveto
150.99 721.56 lineto
150.99 718.56 lineto
140.23 714.89 lineto
closepath
fill
newpath
160.36 725.36 moveto
200.73 725.36 lineto
200.73 722.36 lineto
160.36 722.36 lineto
closepath
fill
restore
%  S_BAR
87 linenum
0.70 setlinewidth
216.78 803.36 moveto
216.78 779.36 lineto stroke
216.78 749.36 moveto
216.78 725.36 lineto stroke
%  S_CHHEAD
91 linenum
%  S_STAFF
% staff 1
save
225.31 815.36 1.000000 4n
234.58 818.36 1.000000 dot
219.08 815.36 moveto
231.55 815.36 lineto stroke
219.08 809.36 moveto
231.55 809.36 lineto stroke
221.63 814.61 moveto
221.63 791.36 lineto stroke
255.51 812.36 1.000000 4n
247.05 812.36 1.000000 nat
249.27 809.36 moveto
261.74 809.36 lineto stroke
251.82 811.61 moveto
251.82 792.86 lineto stroke
273.06 812.36 1.000000 4n
264.28 812.36 1.000000 flat
266.83 809.36 moveto
279.29 809.36 lineto stroke
269.38 811.61 moveto
269.38 790.88 lineto stroke
283.96 806.36 1.000000 4n
280.28 805.61 moveto
280.28 789.65 lineto stroke
newpath
251.47 794.36 moveto
280.63 791.15 lineto
280.63 788.15 lineto
251.47 791.36 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
225.31 734.36 1.000000 4n
0.70 setlinewidth
221.63 733.61 moveto
221.63 716.39 lineto stroke
235.38 755.36 1.000000 4n
229.15 755.36 moveto
241.61 755.36 lineto stroke
231.70 754.61 moveto
231.70 720.06 lineto stroke
245.44 752.36 1.000000 4n
245.44 740.36 1.000000 4n
241.76 751.61 moveto
241.76 723.86 lineto stroke
255.51 755.36 1.000000 4n
249.27 755.36 moveto
261.74 755.36 lineto stroke
251.82 754.61 moveto
251.82 723.86 lineto stroke
273.06 752.36 1.000000 4n
273.06 740.36 1.000000 4n
269.38 751.61 moveto
269.38 723.86 lineto stroke
283.96 755.36 1.000000 4n
277.73 755.36 moveto
290.19 755.36 lineto stroke
280.28 754.61 moveto
280.28 723.86 lineto stroke
newpath
221.28 717.89 moveto
232.05 721.56 lineto
232.05 718.56 lineto
221.28 714.89 lineto
closepath
fill
newpath
241.41 725.36 moveto
280.63 725.36 lineto
280.63 722.36 lineto
241.41 722.36 lineto
closepath
fill
restore
%  S_BAR
93 linenum
0.70 setlinewidth
296.68 803.36 moveto
296.68 779.36 lineto stroke
296.68 749.36 moveto
296.68 725.36 lineto stroke
%  S_CHHEAD
97 linenum
%  S_STAFF
% staff 1
save
305.21 803.36 1.000000 4n
301.53 802.61 moveto
301.53 783.86 lineto stroke
315.28 809.36 1.000000 4n
309.04 809.36 moveto
321.51 809.36 lineto stroke
311.59 808.61 moveto
311.59 783.86 lineto stroke
325.34 806.36 1.000000 4n
321.66 805.61 moveto
321.66 783.86 lineto stroke
335.40 803.36 1.000000 4n
331.72 802.61 moveto
331.72 783.86 lineto stroke
345.47 800.36 1.000000 4n
341.79 799.61 moveto
341.79 783.86 lineto stroke
356.37 803.36 1.000000 4n
352.69 802.61 moveto
352.69 783.86 lineto stroke
newpath
301.18 785.36 moveto
353.04 785.36 lineto
353.04 782.36 lineto
301.18 782.36 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
305.21 734.36 1.000000 4n
0.70 setlinewidth
301.53 733.61 moveto
301.53 716.39 lineto stroke
315.28 755.36 1.000000 4n
309.04 755.36 moveto
321.51 755.36 lineto stroke
311.59 754.61 moveto
311.59 720.06 lineto stroke
325.34 749.36 1.000000 4n
325.34 743.36 1.000000 4n
321.66 748.61 moveto
321.66 726.86 lineto stroke
335.40 755.36 1.000000 4n
329.17 755.36 moveto
341.64 755.36 lineto stroke
331.72 754.61 moveto
331.72 726.86 lineto stroke
345.47 749.36 1.000000 4n
345.47 743.36 1.000000 4n
341.79 748.61 moveto
341.79 726.86 lineto stroke
356.37 755.36 1.000000 4n
350.14 755.36 moveto
362.60 755.36 lineto stroke
352.69 754.61 moveto
352.69 726.86 lineto stroke
newpath
301.18 717.89 moveto
311.94 721.56 lineto
311.94 718.56 lineto
301.18 714.89 lineto
closepath
fill
newpath
321.31 728.36 moveto
353.04 728.36 lineto
353.04 725.36 lineto
321.31 725.36 lineto
closepath
fill
restore
%  S_BAR
99 linenum
0.70 setlinewidth
369.09 803.36 moveto
369.09 779.36 lineto stroke
369.09 749.36 moveto
369.09 725.36 lineto stroke
%  S_CHHEAD
103 linenum
%  S_STAFF
% staff 1
save
377.62 794.36 1.000000 4n
373.94 793.61 moveto
373.94 773.36 lineto stroke
397.75 794.36 1.000000 4n
394.07 793.61 moveto
394.07 773.36 lineto stroke
417.88 794.36 1.000000 4n
414.20 793.61 moveto
414.20 773.36 lineto stroke
restore
%  S_STAFF
% staff 2
save
377.62 734.36 1.000000 4n
0.70 setlinewidth
373.94 733.61 moveto
373.94 716.39 lineto stroke
387.69 755.36 1.000000 4n
381.45 755.36 moveto
393.92 755.36 lineto stroke
384.00 754.61 moveto
384.00 720.06 lineto stroke
397.75 749.36 1.000000 4n
397.75 743.36 1.000000 4n
394.07 748.61 moveto
394.07 726.86 lineto stroke
407.81 755.36 1.000000 4n
401.58 755.36 moveto
414.05 755.36 lineto stroke
404.13 754.61 moveto
404.13 726.86 lineto stroke
417.88 749.36 1.000000 4n
417.88 743.36 1.000000 4n
414.20 748.61 moveto
414.20 726.86 lineto stroke
428.78 755.36 1.000000 4n
422.55 755.36 moveto
435.01 755.36 lineto stroke
425.10 754.61 moveto
425.10 726.86 lineto stroke
newpath
373.59 717.89 moveto
384.35 721.56 lineto
384.35 718.56 lineto
373.59 714.89 lineto
closepath
fill
newpath
393.72 728.36 moveto
425.45 728.36 lineto
425.45 725.36 lineto
393.72 725.36 lineto
closepath
fill
restore
%  S_BAR
105 linenum
0.70 setlinewidth
441.50 803.36 moveto
441.50 779.36 lineto stroke
441.50 749.36 moveto
441.50 725.36 lineto stroke
%  S_CHHEAD
109 linenum
%  S_STAFF
% staff 1
save
450.03 779.36 1.000000 4n
453.71 780.11 moveto
453.71 813.86 lineto stroke
460.10 785.36 1.000000 4n
463.78 786.11 moveto
463.78 813.86 lineto stroke
470.16 791.36 1.000000 4n
473.84 792.11 moveto
473.84 813.86 lineto stroke
480.22 797.36 1.000000 4n
483.91 798.11 moveto
483.91 813.86 lineto stroke
490.29 794.36 1.000000 4n
493.97 795.11 moveto
493.97 813.86 lineto stroke
501.19 779.36 1.000000 4n
504.87 780.11 moveto
504.87 813.86 lineto stroke
newpath
453.36 815.36 moveto
505.22 815.36 lineto
505.22 812.36 lineto
453.36 812.36 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
450.03 734.36 1.000000 4n
0.70 setlinewidth
446.35 733.61 moveto
446.35 716.39 lineto stroke
460.10 755.36 1.000000 4n
453.86 755.36 moveto
466.33 755.36 lineto stroke
456.41 754.61 moveto
456.41 720.06 lineto stroke
470.16 752.36 1.000000 4n
470.16 746.36 1.000000 4n
466.48 751.61 moveto
466.48 729.86 lineto stroke
480.22 755.36 1.000000 4n
473.99 755.36 moveto
486.46 755.36 lineto stroke
476.54 754.61 moveto
476.54 729.86 lineto stroke
490.29 752.36 1.000000 4n
490.29 746.36 1.000000 4n
486.61 751.61 moveto
486.61 729.86 lineto stroke
501.19 755.36 1.000000 4n
494.96 755.36 moveto
507.42 755.36 lineto stroke
497.51 754.61 moveto
497.51 729.86 lineto stroke
newpath
446.00 717.89 moveto
456.76 721.56 lineto
456.76 718.56 lineto
446.00 714.89 lineto
closepath
fill
newpath
466.13 731.36 moveto
497.86 731.36 lineto
497.86 728.36 lineto
466.13 728.36 lineto
closepath
fill
restore
%  S_BAR
111 linenum
0.70 setlinewidth
513.91 803.36 moveto
513.91 779.36 lineto stroke
513.91 749.36 moveto
513.91 725.36 lineto stroke
%  S_CHHEAD
115 linenum
%  S_STAFF
% staff 1
save
522.44 782.36 1.000000 4n
518.76 781.61 moveto
518.76 764.54 lineto stroke
532.51 788.36 1.000000 4n
528.83 787.61 moveto
528.83 767.84 lineto stroke
542.57 794.36 1.000000 4n
538.89 793.61 moveto
538.89 771.14 lineto stroke
552.64 803.36 1.000000 4n
548.95 802.61 moveto
548.95 774.44 lineto stroke
562.70 809.36 1.000000 4n
556.47 809.36 moveto
568.93 809.36 lineto stroke
559.02 808.61 moveto
559.02 777.74 lineto stroke
573.60 806.36 1.000000 4n
569.92 805.61 moveto
569.92 781.31 lineto stroke
newpath
518.41 766.04 moveto
570.27 782.81 lineto
570.27 779.81 lineto
518.41 763.04 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
522.44 734.36 1.000000 4n
0.70 setlinewidth
518.76 733.61 moveto
518.76 716.39 lineto stroke
532.51 755.36 1.000000 4n
526.28 755.36 moveto
538.74 755.36 lineto stroke
528.83 754.61 moveto
528.83 720.06 lineto stroke
542.57 749.36 1.000000 4n
542.57 743.36 1.000000 4n
538.89 748.61 moveto
538.89 726.86 lineto stroke
552.64 755.36 1.000000 4n
546.40 755.36 moveto
558.87 755.36 lineto stroke
548.95 754.61 moveto
548.95 726.86 lineto stroke
562.70 749.36 1.000000 4n
562.70 743.36 1.000000 4n
559.02 748.61 moveto
559.02 726.86 lineto stroke
573.60 755.36 1.000000 4n
567.37 755.36 moveto
579.83 755.36 lineto stroke
569.92 754.61 moveto
569.92 726.86 lineto stroke
newpath
518.41 717.89 moveto
529.18 721.56 lineto
529.18 718.56 lineto
518.41 714.89 lineto
closepath
fill
newpath
538.54 728.36 moveto
570.27 728.36 lineto
570.27 725.36 lineto
538.54 725.36 lineto
closepath
fill
restore
%  S_BAR
117 linenum
0.70 setlinewidth
586.32 803.36 moveto
586.32 779.36 lineto stroke
586.32 749.36 moveto
586.32 725.36 lineto stroke
%  S_CHHEAD
121 linenum
%  S_STAFF
% staff 1
save
594.85 803.36 1.000000 4n
591.17 802.61 moveto
591.17 775.90 lineto stroke
604.92 794.36 1.000000 4n
601.24 793.61 moveto
601.24 775.90 lineto stroke
624.64 815.36 1.000000 4n
618.41 815.36 moveto
630.87 815.36 lineto stroke
618.41 809.36 moveto
630.87 809.36 lineto stroke
620.96 814.61 moveto
620.96 775.90 lineto stroke
634.70 794.36 1.000000 4n
631.02 793.61 moveto
631.02 775.90 lineto stroke
644.77 815.36 1.000000 4n
638.53 815.36 moveto
651.00 815.36 lineto stroke
638.53 809.36 moveto
651.00 809.36 lineto stroke
644.77 803.36 1.000000 4n
641.08 814.61 moveto
641.08 775.90 lineto stroke
655.67 794.36 1.000000 4n
651.99 793.61 moveto
651.99 775.90 lineto stroke
newpath
590.82 777.40 moveto
652.34 777.40 lineto
652.34 774.40 lineto
590.82 774.40 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
594.85 734.36 1.000000 4n
0.70 setlinewidth
598.54 735.11 moveto
598.54 755.36 lineto stroke
612.26 731.36 0.750000 gclef
624.64 728.36 1.000000 4n
624.64 713.36 1.000000 4n
618.41 713.36 moveto
630.87 713.36 lineto stroke
618.41 719.36 moveto
630.87 719.36 lineto stroke
628.32 714.11 moveto
628.32 749.36 lineto stroke
644.77 734.36 1.000000 4n
644.77 728.36 1.000000 4n
648.45 729.11 moveto
648.45 755.36 lineto stroke
restore
%  S_BAR
123 linenum
0.70 setlinewidth
668.39 803.36 moveto
668.39 779.36 lineto stroke
668.39 749.36 moveto
668.39 725.36 lineto stroke
%  S_CHHEAD
126 linenum
%  S_STAFF
% staff 1
save
681.34 815.36 1.000000 2n
674.90 815.36 moveto
687.79 815.36 lineto stroke
674.90 809.36 moveto
687.79 809.36 lineto stroke
681.34 800.36 1.000000 2n
681.34 794.36 1.000000 2n
677.45 814.61 moveto
677.45 773.36 lineto stroke
restore
%  S_STAFF
% staff 2
save
681.34 731.36 1.000000 2n
681.34 719.36 1.000000 2n
0.70 setlinewidth
674.90 719.36 moveto
687.79 719.36 lineto stroke
685.24 720.11 moveto
685.24 752.36 lineto stroke
restore
%  S_BAR
128 linenum
724.13 794.36 1.000000 dot
724.13 788.36 1.000000 dot
710.13 794.36 1.000000 dot
710.13 788.36 1.000000 dot
3.00 setlinewidth
714.63 803.36 moveto
714.63 779.36 lineto stroke
719.63 803.36 moveto
719.63 779.36 lineto stroke
0.70 setlinewidth
724.13 740.36 1.000000 dot
724.13 734.36 1.000000 dot
710.13 740.36 1.000000 dot
710.13 734.36 1.000000 dot
3.00 setlinewidth
714.63 749.36 moveto
714.63 725.36 lineto stroke
719.63 749.36 moveto
719.63 725.36 lineto stroke
0.70 setlinewidth
%  S_SSV
130 linenum
%  S_SSV
134 linenum
%  S_CLEFSIG
140 linenum
702.10 743.36 0.750000 fclef
730.37 791.36 1.000000 flat
735.86 800.36 1.000000 flat
730.37 731.36 1.000000 flat
735.86 740.36 1.000000 flat
%  S_CHHEAD
140 linenum
%  S_STAFF
% staff 1
save
748.72 803.36 1.000000 4n
745.04 802.61 moveto
745.04 782.36 lineto stroke
restore
%  S_STAFF
% staff 2
save
748.72 737.36 1.000000 4rest
restore
%  S_BAR
142 linenum
0.70 setlinewidth
767.65 803.36 moveto
767.65 779.36 lineto stroke
767.65 749.36 moveto
767.65 725.36 lineto stroke
%  S_FEED
145 linenum
50.50 639.85 768.00 5 1.000000 1.000000 staff
/Times-Roman findfont
11 scalefont
setfont
55.00 666.91 moveto
(20) show
50.50 565.30 768.00 5 1.000000 1.000000 staff
49.50 651.85 553.30 brace
50.50 651.85 moveto
50.50 553.30 lineto stroke
%  S_CLEFSIG
145 linenum
62.29 633.85 1.000000 gclef
62.54 571.30 1.000000 fclef
78.33 639.85 1.000000 flat
83.82 648.85 1.000000 flat
78.33 559.30 1.000000 flat
83.82 568.30 1.000000 flat
%  S_CHHEAD
145 linenum
%  S_STAFF
% staff 1
save
101.90 651.85 1.000000 4n
98.21 651.10 moveto
98.21 635.34 lineto stroke
113.76 666.85 1.000000 4n
107.53 663.85 moveto
119.99 663.85 lineto stroke
107.53 657.85 moveto
118.19 657.85 lineto stroke
110.08 666.10 moveto
110.08 635.34 lineto stroke
125.62 657.85 1.000000 4n
120.69 657.85 moveto
130.55 657.85 lineto stroke
121.94 657.10 moveto
121.94 635.34 lineto stroke
137.48 663.85 1.000000 4n
131.25 663.85 moveto
143.71 663.85 lineto stroke
133.05 657.85 moveto
141.91 657.85 lineto stroke
133.80 663.10 moveto
133.80 635.34 lineto stroke
149.34 660.85 1.000000 4n
144.41 657.85 moveto
155.58 657.85 lineto stroke
145.66 660.10 moveto
145.66 635.34 lineto stroke
162.04 654.85 1.000000 4n
158.36 654.10 moveto
158.36 635.34 lineto stroke
newpath
97.86 636.84 moveto
158.71 636.84 lineto
158.71 633.84 lineto
97.86 633.84 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
101.90 559.30 1.000000 4n
0.70 setlinewidth
105.58 560.05 moveto
105.58 580.30 lineto stroke
125.62 586.30 1.000000 4n
119.39 583.30 moveto
131.85 583.30 lineto stroke
125.62 580.30 1.000000 4n
125.62 571.30 1.000000 4n
129.30 572.05 moveto
129.30 601.30 lineto stroke
149.34 586.30 1.000000 4n
143.11 583.30 moveto
155.58 583.30 lineto stroke
149.34 580.30 1.000000 4n
149.34 571.30 1.000000 4n
153.03 572.05 moveto
153.03 601.30 lineto stroke
restore
%  S_CURVE
188 linenum
94.70 658.60 moveto
94.69 658.88 lineto
95.89 659.40 97.14 659.53 98.42 659.28 curveto
99.81 659.01 101.01 658.37 102.01 657.36 curveto
101.79 656.85 lineto
100.63 657.41 99.43 657.82 98.17 658.07 curveto
97.02 658.30 95.87 658.39 94.70 658.33 curveto
fill
%  S_BAR
147 linenum
0.70 setlinewidth
176.27 651.85 moveto
176.27 627.85 lineto stroke
176.27 577.30 moveto
176.27 553.30 lineto stroke
%  S_CHHEAD
151 linenum
%  S_STAFF
% staff 1
save
186.56 651.85 1.000000 4n
195.83 654.85 1.000000 dot
182.88 651.10 moveto
182.88 630.85 lineto stroke
217.61 651.85 1.000000 4n
213.93 651.10 moveto
213.93 632.35 lineto stroke
229.48 651.85 1.000000 4n
225.79 651.10 moveto
225.79 632.35 lineto stroke
242.18 651.85 1.000000 4n
238.49 651.10 moveto
238.49 632.35 lineto stroke
newpath
213.58 633.85 moveto
238.84 633.85 lineto
238.84 630.85 lineto
213.58 630.85 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
186.56 559.30 1.000000 4n
0.70 setlinewidth
190.25 560.05 moveto
190.25 580.30 lineto stroke
205.93 586.30 1.000000 4n
199.70 583.30 moveto
212.16 583.30 lineto stroke
205.93 580.30 1.000000 4n
205.93 571.30 1.000000 4n
209.61 572.05 moveto
209.61 601.30 lineto stroke
229.48 586.30 1.000000 4n
223.24 583.30 moveto
235.71 583.30 lineto stroke
229.48 580.30 1.000000 4n
229.48 571.30 1.000000 4n
233.16 572.05 moveto
233.16 601.30 lineto stroke
restore
%  S_BAR
153 linenum
0.70 setlinewidth
256.40 651.85 moveto
256.40 627.85 lineto stroke
256.40 577.30 moveto
256.40 553.30 lineto stroke
%  S_CHHEAD
157 linenum
%  S_STAFF
% staff 1
save
265.23 651.85 1.000000 4n
268.91 652.60 moveto
268.91 699.08 lineto stroke
277.09 660.85 1.000000 4n
270.86 657.85 moveto
282.02 657.85 lineto stroke
280.78 661.60 moveto
280.78 699.08 lineto stroke
288.96 666.85 1.000000 4n
282.72 663.85 moveto
293.89 663.85 lineto stroke
284.52 657.85 moveto
293.39 657.85 lineto stroke
292.64 667.60 moveto
292.64 699.08 lineto stroke
300.82 672.85 1.000000 4n
294.59 669.85 moveto
305.75 669.85 lineto stroke
296.39 663.85 moveto
305.25 663.85 lineto stroke
296.39 657.85 moveto
305.25 657.85 lineto stroke
304.50 673.60 moveto
304.50 699.08 lineto stroke
312.68 681.85 1.000000 4n
306.45 681.85 moveto
318.91 681.85 lineto stroke
306.45 675.85 moveto
318.91 675.85 lineto stroke
308.25 669.85 moveto
318.91 669.85 lineto stroke
308.25 663.85 moveto
318.91 663.85 lineto stroke
308.25 657.85 moveto
318.91 657.85 lineto stroke
316.36 682.60 moveto
316.36 699.08 lineto stroke
325.38 639.85 1.000000 4n
329.06 640.60 moveto
329.06 699.08 lineto stroke
newpath
268.56 700.58 moveto
329.41 700.58 lineto
329.41 697.58 lineto
268.56 697.58 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
265.23 559.30 1.000000 4n
0.70 setlinewidth
268.91 560.05 moveto
268.91 580.30 lineto stroke
288.96 586.30 1.000000 4n
282.72 583.30 moveto
295.19 583.30 lineto stroke
288.96 580.30 1.000000 4n
288.96 571.30 1.000000 4n
292.64 572.05 moveto
292.64 601.30 lineto stroke
312.68 586.30 1.000000 4n
306.45 583.30 moveto
318.91 583.30 lineto stroke
312.68 580.30 1.000000 4n
312.68 571.30 1.000000 4n
316.36 572.05 moveto
316.36 601.30 lineto stroke
restore
%  S_BAR
159 linenum
0.70 setlinewidth
339.60 651.85 moveto
339.60 627.85 lineto stroke
339.60 577.30 moveto
339.60 553.30 lineto stroke
%  S_CHHEAD
163 linenum
%  S_STAFF
% staff 1
save
355.28 639.85 1.000000 4n
346.82 639.85 1.000000 nat
351.59 639.10 moveto
351.59 620.11 lineto stroke
367.21 642.85 1.000000 4n
363.53 642.10 moveto
363.53 622.19 lineto stroke
379.08 639.85 1.000000 8rest
390.86 630.85 1.000000 4n
394.54 631.60 moveto
394.54 650.35 lineto stroke
402.72 630.85 1.000000 4n
406.41 631.60 moveto
406.41 650.35 lineto stroke
415.42 630.85 1.000000 4n
419.11 631.60 moveto
419.11 650.35 lineto stroke
newpath
351.24 621.61 moveto
363.88 623.69 lineto
363.88 620.69 lineto
351.24 618.61 lineto
closepath
fill
newpath
394.19 651.85 moveto
419.46 651.85 lineto
419.46 648.85 lineto
394.19 648.85 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
355.28 550.30 1.000000 4n
0.70 setlinewidth
358.96 551.05 moveto
358.96 571.30 lineto stroke
379.08 589.30 1.000000 4n
372.84 589.30 moveto
385.31 589.30 lineto stroke
372.84 583.30 moveto
385.31 583.30 lineto stroke
379.08 577.30 1.000000 4n
379.08 571.30 1.000000 4n
375.39 588.55 moveto
375.39 550.30 lineto stroke
402.72 589.30 1.000000 4n
396.49 589.30 moveto
408.96 589.30 lineto stroke
396.49 583.30 moveto
408.96 583.30 lineto stroke
402.72 577.30 1.000000 4n
402.72 571.30 1.000000 4n
399.04 588.55 moveto
399.04 550.30 lineto stroke
restore
%  S_BAR
165 linenum
0.70 setlinewidth
429.65 651.85 moveto
429.65 627.85 lineto stroke
429.65 577.30 moveto
429.65 553.30 lineto stroke
%  S_CHHEAD
169 linenum
%  S_STAFF
% staff 1
save
438.48 630.85 1.000000 4n
442.16 631.60 moveto
442.16 652.71 lineto stroke
450.34 636.85 1.000000 4n
454.02 637.60 moveto
454.02 656.74 lineto stroke
462.20 636.85 1.000000 4n
458.52 636.10 moveto
458.52 618.00 lineto stroke
474.06 642.85 1.000000 4n
470.38 642.10 moveto
470.38 621.40 lineto stroke
485.93 642.85 1.000000 4n
482.24 642.10 moveto
482.24 623.04 lineto stroke
498.63 648.85 1.000000 4n
494.95 648.10 moveto
494.95 627.09 lineto stroke
newpath
441.81 654.21 moveto
454.37 658.24 lineto
454.37 655.24 lineto
441.81 651.21 lineto
closepath
fill
newpath
458.17 619.50 moveto
470.73 622.90 lineto
470.73 619.90 lineto
458.17 616.50 lineto
closepath
fill
newpath
481.89 624.54 moveto
495.30 628.59 lineto
495.30 625.59 lineto
481.89 621.54 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
438.48 550.30 1.000000 4n
0.70 setlinewidth
442.16 551.05 moveto
442.16 571.30 lineto stroke
462.20 589.30 1.000000 4n
455.97 589.30 moveto
468.44 589.30 lineto stroke
455.97 583.30 moveto
468.44 583.30 lineto stroke
462.20 583.30 1.000000 4n
455.97 583.30 moveto
468.44 583.30 lineto stroke
462.20 571.30 1.000000 4n
465.88 572.05 moveto
465.88 604.30 lineto stroke
485.93 589.30 1.000000 4n
479.69 589.30 moveto
492.16 589.30 lineto stroke
479.69 583.30 moveto
492.16 583.30 lineto stroke
485.93 583.30 1.000000 4n
479.69 583.30 moveto
492.16 583.30 lineto stroke
485.93 571.30 1.000000 4n
489.61 572.05 moveto
489.61 604.30 lineto stroke
restore
%  S_BAR
171 linenum
0.70 setlinewidth
512.85 651.85 moveto
512.85 627.85 lineto stroke
512.85 577.30 moveto
512.85 553.30 lineto stroke
%  S_CHHEAD
175 linenum
%  S_STAFF
% staff 1
save
529.17 648.85 1.000000 4n
520.39 648.85 1.000000 flat
525.49 648.10 moveto
525.49 627.85 lineto stroke
528.51 627.85 1.000000 upflag
541.21 663.85 1.000000 4n
534.98 663.85 moveto
547.44 663.85 lineto stroke
534.98 657.85 moveto
547.44 657.85 lineto stroke
537.53 663.10 moveto
537.53 639.85 lineto stroke
564.76 657.85 1.000000 4n
558.52 657.85 moveto
570.99 657.85 lineto stroke
561.07 657.10 moveto
561.07 637.40 lineto stroke
576.62 651.85 1.000000 4n
572.94 651.10 moveto
572.94 634.43 lineto stroke
589.32 648.85 1.000000 4n
585.64 648.10 moveto
585.64 631.26 lineto stroke
newpath
560.72 638.90 moveto
585.99 632.76 lineto
585.99 629.76 lineto
560.72 635.90 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
529.17 550.30 1.000000 4n
0.70 setlinewidth
532.85 551.05 moveto
532.85 571.30 lineto stroke
553.07 583.30 1.000000 4n
546.84 583.30 moveto
559.30 583.30 lineto stroke
553.07 577.30 1.000000 4n
553.07 571.30 1.000000 4n
556.75 572.05 moveto
556.75 598.30 lineto stroke
576.62 583.30 1.000000 4n
570.39 583.30 moveto
582.85 583.30 lineto stroke
576.62 577.30 1.000000 4n
576.62 571.30 1.000000 4n
580.30 572.05 moveto
580.30 598.30 lineto stroke
restore
%  S_BAR
177 linenum
0.70 setlinewidth
603.54 651.85 moveto
603.54 627.85 lineto stroke
603.54 577.30 moveto
603.54 553.30 lineto stroke
%  S_CHHEAD
181 linenum
%  S_STAFF
% staff 1
save
612.07 645.85 1.000000 4n
608.39 645.10 moveto
608.39 627.89 lineto stroke
622.14 666.85 1.000000 4n
615.91 663.85 moveto
628.37 663.85 lineto stroke
615.91 657.85 moveto
626.37 657.85 lineto stroke
618.46 666.10 moveto
618.46 631.55 lineto stroke
632.20 660.85 1.000000 4n
627.47 657.85 moveto
638.43 657.85 lineto stroke
628.52 660.10 moveto
628.52 635.21 lineto stroke
642.27 651.85 1.000000 4n
638.58 651.10 moveto
638.58 631.48 lineto stroke
652.33 645.85 1.000000 4n
648.65 645.10 moveto
648.65 627.82 lineto stroke
662.39 639.85 1.000000 4n
658.71 639.10 moveto
658.71 624.16 lineto stroke
672.46 636.85 1.000000 4n
668.78 636.10 moveto
668.78 618.89 lineto stroke
682.52 654.85 1.000000 4n
678.84 654.10 moveto
678.84 622.55 lineto stroke
693.18 651.85 1.000000 4n
689.50 651.10 moveto
689.50 626.43 lineto stroke
/NewCenturySchlbk-BoldItalic findfont
11 scalefont
setfont
615.29 619.05 moveto
(3) show
/NewCenturySchlbk-BoldItalic findfont
11 scalefont
setfont
645.48 615.32 moveto
(3) show
/NewCenturySchlbk-BoldItalic findfont
11 scalefont
setfont
675.97 610.16 moveto
(3) show
newpath
608.04 629.39 moveto
628.87 636.71 lineto
628.87 633.71 lineto
608.04 626.39 lineto
closepath
fill
newpath
638.23 632.98 moveto
659.06 625.66 lineto
659.06 622.66 lineto
638.23 629.98 lineto
closepath
fill
newpath
668.43 620.39 moveto
689.85 627.93 lineto
689.85 624.93 lineto
668.43 617.39 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
612.07 559.30 1.000000 4n
0.70 setlinewidth
615.76 560.05 moveto
615.76 580.30 lineto stroke
642.27 586.30 1.000000 4n
636.03 583.30 moveto
648.50 583.30 lineto stroke
642.27 580.30 1.000000 4n
638.58 585.55 moveto
638.58 559.30 lineto stroke
672.46 589.30 1.000000 4n
666.23 589.30 moveto
678.69 589.30 lineto stroke
666.23 583.30 moveto
678.69 583.30 lineto stroke
672.46 571.30 1.000000 4n
668.78 588.55 moveto
668.78 550.30 lineto stroke
restore
%  S_BAR
183 linenum
0.70 setlinewidth
704.66 651.85 moveto
704.66 627.85 lineto stroke
704.66 577.30 moveto
704.66 553.30 lineto stroke
%  S_CHHEAD
186 linenum
%  S_STAFF
% staff 1
save
714.96 639.85 1.000000 4n
711.28 639.10 moveto
711.28 618.85 lineto stroke
736.45 639.85 1.000000 4rest
restore
%  S_STAFF
% staff 2
save
714.96 586.30 1.000000 4n
0.70 setlinewidth
708.73 583.30 moveto
721.19 583.30 lineto stroke
714.96 580.30 1.000000 4n
711.28 585.55 moveto
711.28 559.30 lineto stroke
736.45 559.30 1.000000 4n
740.13 560.05 moveto
740.13 580.30 lineto stroke
restore
%  S_CURVE
188 linenum
748.72 808.61 moveto
748.67 808.84 lineto
752.82 811.02 757.23 812.11 761.92 812.12 curveto
764.50 812.12 766.92 811.53 769.21 810.34 curveto
769.11 809.88 lineto
766.82 810.74 764.44 811.15 762.00 811.11 curveto
757.42 811.03 753.01 810.12 748.77 808.38 curveto
fill
%  S_BAR
189 linenum
758.50 642.85 1.000000 dot
758.50 636.85 1.000000 dot
762.50 651.85 moveto
762.50 627.85 lineto stroke
3.00 setlinewidth
766.50 651.85 moveto
766.50 627.85 lineto stroke
0.70 setlinewidth
758.50 568.30 1.000000 dot
758.50 562.30 1.000000 dot
762.50 577.30 moveto
762.50 553.30 lineto stroke
3.00 setlinewidth
766.50 577.30 moveto
766.50 553.30 lineto stroke
0.70 setlinewidth
%  Printing header/footer
/Times-Roman findfont
12 scalefont
setfont
348.82 998.35 moveto
(Kaleidakustikon Layer 2) show
/Times-Roman findfont
12 scalefont
setfont
408.00 985.61 moveto
showpage
restore
%%Trailer
%%DocumentFonts: /Times-Roman /NewCenturySchlbk-Bold /NewCenturySchlbk-BoldItalic /Mfont0 
%%Pages: 1

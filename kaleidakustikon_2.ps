%!PS-Adobe-1.0
%%Creator: Mup (Version 6.1)
%%Title: music:  from kaleidakustikon_2.mup
%%CreationDate: Wed Jan 30 12:11:20 2013
%%Pages: (atend)
%%DocumentFonts: (atend)
%%BoundingBox: 0 0 612 792
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
% Mup prolog Copyright (c) 1995, 1996, 1997, 1998, 1999, 2000, 2003, 2004,
% 2008, 2009, 2012 by Arkkra Enterprises
% All rights reserved

% Mup PostScript Prolog 6.1 for use with Mup 6.1

% lwid is used as the width of a standard (thin) line in the music
% character definitions.
/lwid 70 def
/halflwid lwid 2 div def

% Define the following for use in do_upshortnote, do_dnshortnote, and
% do_shortrest; it has to be done outside of the music font definition.
/utildict 10 dict def
utildict begin
	/setnumflags	{	/numflags	exch def } def
	/sethooksm1	{	/hooksm1	exch def } def
	/setoffsets	{	/offsets	exch def } def
	/setx		{	/x		exch def } def
	/sety		{	/y		exch def } def
end

% Define a music character font.  Each music character is defined as if it
% were a normal ASCII character in a strange font where "A" looks like a
% treble clef, "B" looks like a bass clef, etc.

/mfont0 100 dict def
mfont0 begin
	/FontType 3 def
	/FontMatrix [ .001 0 0 0.001 0 0 ] def
	/FontBBox [ -2000 -4030 2000 4030 ] def
	/FontName (Mfont0) def

	% set up Encoding vector with standard names
	/Encoding 256 array def
	StandardEncoding Encoding copy
	pop

	% the following definitions are used for quarter rests
	/topx -170 def /topy 950 def
	/cor1x 250 def /cor1y 450 def
	/cor2x -300 def /cor2y 200 def
	/cor3x 250 def /cor3y -400 def

	% the following definitions are used for double sharps
	/limit 300 halflwid add def
	/off 70 def
	/inbendsmall limit 200 sub def
	/inbendbig limit 20 sub def
	/outbendsmall 100 def
	/outbendbig outbendsmall off add def

	%%%%% define routines that will be used by multiple characters %%%%%
	/do_1n {
		gsave
		newpath -10 rotate 1.6 1 scale
		0 0 325 0 360 arc		%outer ellipse
		1 1.6 div 1 scale 10 rotate	%back to original
		35 rotate 0.85 1.1 scale
		0 0 275 0 360 arc		%inner ellipse
		eofill
		grestore
	} def
	/do_upflag {
		-315 0 moveto
		-300 100 -100 480 0 600 curveto
		300 960 350 1500 200 1700 curveto
		130 1700 lineto
		350 1200 50 650 -315 600 curveto
		fill
	} def
	/do_flat {
		-250 -400 moveto	%outer edge of loop
		500 0 350 650 -250 160 curveto
		-250 160 lwid sub lineto %inner edge of loop
		100 400 300 0 -250 -400 lwid add curveto
		fill

		lwid setlinewidth	%stem
		-250 1100 moveto -250 -400 lineto stroke
	} def
	/do_diamond {
		newpath
		420 0 moveto 0 300 lineto -420 0 lineto
		0 -300 lineto closepath
		259 -29 moveto -41 185 lineto -259 29 lineto
		41 -185 lineto closepath
		eofill
	} def
	/do_2n {
		gsave
		newpath 25 rotate 1.4 1 scale
		0 0 315 0 360 arc		%outer ellipse
		1 1.4 div 1 scale		%back to original
		1.3 0.5 scale
		0 0 310 0 360 arc		%inner ellipse
		eofill
		grestore
	} def
	/do_4n {
		gsave
		newpath 25 rotate 1.35 1 scale
		0 0 310 0 360 arc fill
		grestore
	} def
	/do_com {
		newpath
		330 250 150 0 360 arc fill	%knob at upper right
		465 300 moveto			%outer boundary
		410 500 200 635 0 635 curveto
		-750 635 -750 -635 0 -635 curveto
		350 -635 480 -300 500 -100 curveto
		430 -100 lineto			%inner boundary
		380 -300 250 -565 0 -565 curveto
		-450 -565 -450 565 0 565 curveto
		200 565 370 350 395 300 curveto
		fill
	} def
	/do_ferm {
		0 0 800 lwid sub 0 180 arc	%inner arc
		-800 0 lineto
		0 270 lwid sub 800 180 0 arcn	%outer arc
		800 0 lineto fill
		0 120 120 0 360 arc fill	%the dot
	} def
	/do_mor {
		gsave
		0.7 1 scale	%scrunch the following horizontally
		45 rotate	%to pretend all lines horz or vertical
		0 1 1 {
			pop	%we don't need the loop variable
			%one half of the mordent
			0 40 moveto 350 40 lineto 350 -460 lineto
			750 -460 lineto 750 -540 lineto
			150 -540 lineto 150 -40 lineto
			0 -40 lineto fill
			180 rotate	%to do the other half
		} for
		grestore
	} def
	/do_turn {
		gsave
		0 1 1 {
			pop	%we don't need the loop variable
			0 -100 moveto	%outer boundary
			200 -400 625 -400 625 0 curveto
			625 200 500 325 300 325 curveto
			300 185 lineto	%inner boundary
			450 255 555 150 555 0 curveto
			555 -350 250 -250 0 100 curveto
			fill
			300 255 70 0 360 arc fill %knob on end
			180 rotate	%to do the other half
		} for
		grestore
	} def

	/do_upshortnote {
		utildict begin
		setnumflags		%set numflags from the stack
		gsave
		-330 0 translate	%half a flag width
		do_4n			%do a quarter note head
		lwid setlinewidth
		370 0 moveto
		370 2100 numflags 2 sub flagsep mul add lineto stroke
		670 2100 numflags 2 sub flagsep mul add translate
		1 -1 scale		%reflect across X axis
		0 1 numflags 1 sub {
			do_upflag	%do an upflag
			pop		%we don't need the loop variable
			0 flagsep translate
		} for
		grestore
		end
	} def

	/do_dnshortnote {
		utildict begin
		setnumflags		%set numflags from the stack
		do_4n			%do a quarter note head
		lwid setlinewidth
		-370 0 moveto
		-370 -2100 numflags 2 sub flagsep mul sub lineto stroke
		gsave
		-70 -2100 numflags 2 sub flagsep mul sub translate
		0 1 numflags 1 sub {
			do_upflag	%do an upflag
			pop		%we don't need the loop variable
			0 flagsep translate
		} for
		grestore
		end
	} def

	/do_shortrest {
		utildict begin
		sety setx setoffsets sethooksm1	%set variable from the stack
		gsave
		-105.8 offsets mul -600 offsets mul translate
		0 1 hooksm1 {		%loop once per hook
			newpath
			1 setlinewidth
			gsave
			1 1.2 scale
			-150 300 1.2 div 140 0 360 arc fill 	%the dot
			grestore
			lwid setlinewidth
			-50 700 550 255 315 arc		%rest of the hook
			hooksm1 lt { stroke 105.8 600 translate } if
		} for
		x y lineto stroke
		grestore
		end
	} def


	% subsidiary dictionary of character definitions
	/CharStrings 128 dict def
	CharStrings begin

		/.notdef {} def

		% Here are the definitions of the characters.  A stepsize here
		% is 300 units (assuming the character is drawn at its default
		% size).

		% gclef
		/A {
			newpath
			%start with inner curl, inside boundary
			-50 -300 moveto
			-450 600 700 700 750 0 curveto
			750 -800 -700 -800 -700 200 curveto
			-700 900 500 1400 520 2250 curveto
			520 2900 300 3000 200 3000 curveto
			100 3000 -400 2500 -200 1800 curveto
			350 -600 lineto
			720 -1600 0 -1650 -400 -1400 curveto

			%go back to start, drawing the other boundary
			-400 -1480 lineto
			0 -1700 800 -1700 430 -600 curveto
			-120 1800 lineto
			-300 2400 200 2800 250 2800 curveto
			400 2800 430 2700 430 2450 curveto
			430 1800 -900 1200 -900 300 curveto
			-750 -900 800 -900 850 0 curveto
			900 1100 -750 900 -120 -300 curveto fill

			%circle at the bottom
			-300 -1250 250 0 360 arc fill
		} def

		% fclef
		/B {
			newpath
			%start with outside boundary, at bottom
			-1000 -1700 moveto
			100 -1100 500 -600 450 0 curveto
			450 850 -1100 850 -950 0 curveto

			%go back to start, drawing the other boundary
			-880 0 lineto
			-920 400 -600 560 -300 560 curveto
			0 560 150 400 150 0 curveto
			150 -400 100 -900 -1000 -1620 curveto fill

			%circle at the left
			newpath
			-700 0 250 0 360 arc fill

			%do the two dots after the main curve
			700 -300 100 0 360 arc fill
			700 300 100 0 360 arc fill
		} def

		% cclef
		/C {
			gsave
			%do upper curved part, then scale to do mirror image
			0 1 1 {
				pop	%we don't need the loop variable
				%outer boundary of curve
				-170 0 moveto 100 300 lineto
				400 -200 750 300 750 650 curveto
				750 1100 450 1235 250 1235 curveto
				0 1235 -143 1100 -143 950 curveto

				%inner boundary of curve
				0 950 lineto
				0 1100 30 1165 250 1165 curveto
				300 1165 450 1100 450 650 curveto
				450 400 400 -100 100 400 curveto
				-270 0 lineto fill
				%stroke
				%-270 0 moveto 100 400 lineto
				%400 -100 450 400 450 650 curveto
				%450 1100 300 1165 250 1165 curveto
				%30 1165 0 1100 0 950 curveto
				%stroke

				%elliptical ball at end of curve
				gsave
				1.3 1 scale
				10 950 120 0 360 arc fill
				grestore
				1 -1 scale	%reflect across X axis
			} for
			grestore

			% two vertical lines on the left
			300 setlinewidth -600 -1200 halflwid sub moveto
			-600 1200 halflwid add lineto stroke
			lwid setlinewidth -300 -1200 halflwid sub moveto
			-300 1200 halflwid add lineto stroke
		} def

		% dblwhole
		/D {
			do_1n		%do a whole note
			lwid setlinewidth
			-490 -600 moveto -490 600 lineto stroke
			490 -600 moveto 490 600 lineto stroke
		} def

		% 1n
		/E {
			do_1n		%do a whole note
		} def

		% 2n
		/F {
			do_2n		%do a half note
		} def

		% 4n
		/G {
			do_4n		%do a quarter note head
		} def

		% upflag
		/H {
			do_upflag		%do an upflag
		} def

		% dnflag
		/I {
			gsave
			1 -1 scale	%reflect across X axis
			do_upflag		%do an upflag
			grestore
		} def

		% dwhrest
		/J {
			300 setlinewidth
			0 0 moveto 0 600 lineto stroke
		} def

		% 1rest
		/K {
			lwid setlinewidth
			-750 600 moveto 750 600 lineto stroke
			300 setlinewidth
			-400 450 moveto 400 450 lineto stroke
		} def

		% 2rest
		/L {
			lwid setlinewidth
			-750 0 moveto 750 0 lineto stroke
			300 setlinewidth
			-400 150 moveto 400 150 lineto stroke
		} def

		% 4rest
		/M {
			newpath
			cor3x cor3y halflwid add moveto
			%-400 -200 -450 -650 50 -950 lwid add curveto
			-450 -50 -450 -650 50 -950 lwid add curveto
			-150 -650 -100 -250 cor3x cor3y halflwid sub curveto
			fill

			cor1x cor1y moveto cor1x 200 sub cor1y 200 add lineto
			cor2x cor2y lineto cor2x 200 add cor2y 200 sub lineto
			fill

			lwid setlinewidth
			topx topy moveto cor1x cor1y lineto stroke
			cor2x cor2y moveto cor3x cor3y lineto stroke
		} def

		% 8rest
		/N {
			0 0 0 -600 do_shortrest
		} def

		% 16rest
		/O {
			1 1 100 -1200 do_shortrest
		} def

		% 32rest
		/P {
			2 1 0 -1800 do_shortrest
		} def

		% 64rest
		/Q {
			3 2 -80 -2100 do_shortrest
		} def

		% 128rest
		/R {
			4 2 -150 -2700 do_shortrest
		} def

		% 256rest
		/S {
			5 3 -280 -3300 do_shortrest
		} def

		% dot
		/T {
			newpath
			0 0 120 0 360 arc fill
		} def

		% nat
		/U {
			% fill crossbars so that we can do parallelograms
			-235 -470 moveto -235 -270 lineto
			235 -130 lineto 235 -330 lineto fill
			-235 130 moveto -235 330 lineto
			235 470 lineto 235 270 lineto fill

			% vertical strokes
			lwid setlinewidth
			-200 -380 moveto -200 850 lineto stroke
			200 -850 moveto 200 380 lineto stroke
		} def

		% sharp
		/V {
			% fill crossbars so that we can do parallelograms
			-325 -480 moveto -325 -280 lineto
			325 -120 lineto 325 -320 lineto fill
			-325 120 moveto -325 320 lineto
			325 480 lineto 325 280 lineto fill

			% vertical strokes
			lwid setlinewidth
			-150 -930 moveto -150 880 lineto stroke
			150 -880 moveto 150 930 lineto stroke
		} def

		% flat
		/W {
			do_flat		%do a flat
		} def

		% dblsharp
		/X {
			gsave
			0 1 3 {		%loop once for each of 4 sticks
				pop	%we don't need the loop variable
				0 off neg moveto
				outbendbig outbendsmall lineto
				inbendbig inbendsmall lineto
				limit limit lineto
				inbendsmall inbendbig lineto
				outbendsmall outbendbig lineto
				off neg 0 lineto
				fill
				-90 rotate
			} for
			grestore
		} def

		% dblflat
		/Y {
			-290 580 290 {	%loop once for each flat

				gsave
				1 setlinewidth
				0 translate	%translate left/right (loop var)
				do_flat		%do a flat
				grestore

			} for
		} def

		% xnote
		/Z {
			gsave
			1.15 1 scale 120 setlinewidth 1 setlinecap	%round
			-300 -300 moveto 300 300 lineto stroke
			-300 300 moveto 300 -300 lineto stroke
			grestore
		} def

		% dwhdiamond
		/a {
			do_diamond	%do a diamond
			lwid setlinewidth
			-420 -600 moveto -420 600 lineto stroke
			420 -600 moveto 420 600 lineto stroke
		} def

		% diamond
		/b {
			do_diamond	%do a diamond
		} def

		% filldiamond
		/c {
			420 0 moveto 0 300 lineto
			-420 0 lineto 0 -300 lineto fill
		} def

		% up2n
		/d {
			lwid setlinewidth
			380 0 moveto 380 2100 lineto stroke
			do_2n		%do a half note
		} def

		% dn2n
		/e {
			lwid setlinewidth
			-380 0 moveto -380 -2100 lineto stroke
			do_2n		%do a half note
		} def

		% up4n
		/f {
			do_4n		%do a quarter note head
			lwid setlinewidth
			370 0 moveto 370 2100 lineto stroke
		} def

		% dn4n
		/g {
			do_4n		%do a quarter note head
			lwid setlinewidth
			-370 0 moveto -370 -2100 lineto stroke
		} def

		% up8n
		/h {
			gsave
			-330 0 translate	% half a flag width
			do_4n		%do a quarter note head
			lwid setlinewidth
			370 0 moveto 370 2100 lineto stroke
			670 2100 translate
			1 -1 scale	%reflect across X axis
			do_upflag		%do an upflag
			grestore
		} def

		% dn8n
		/i {
			do_4n		%do a quarter note head
			lwid setlinewidth
			-370 0 moveto -370 -2100 lineto stroke
			gsave
			-70 -2100 translate
			do_upflag		%do an upflag
			grestore
		} def

		% up16n
		/j {
			2 do_upshortnote
		} def

		% dn16n
		/k {
			2 do_dnshortnote
		} def

		% up32n
		/l {
			3 do_upshortnote
		} def

		% dn32n
		/m {
			3 do_dnshortnote
		} def

		% up64n
		/n {
			4 do_upshortnote
		} def

		% dn64n
		/o {
			4 do_dnshortnote
		} def

		% up128n
		/p {
			5 do_upshortnote
		} def

		% dn128n
		/q {
			5 do_dnshortnote
		} def

		% up256n
		/r {
			6 do_upshortnote
		} def

		% dn256n
		/s {
			6 do_dnshortnote
		} def

		% com
		/t {
			do_com		%do a common time symbol
		} def

		% cut
		/u {
			do_com		%do a common time symbol
			lwid setlinewidth
			0 -900 moveto 0 900 lineto stroke
		} def

		% begped
		/v {
			lwid setlinewidth
			-200 600 moveto -200 0 lineto 200 0 lineto stroke
		} def

		% pedal
		/w {
			lwid setlinewidth
			-500 0 moveto -450 0 lineto 0 600 lineto
			450 0 lineto 500 0 lineto stroke
		} def

		% endped
		/x {
			lwid setlinewidth
			200 600 moveto 200 0 lineto -200 0 lineto stroke
		} def

		% dnbow
		/y {
			lwid setlinewidth
			-350 0 moveto -350 900 lineto stroke
			350 0 moveto 350 900 lineto stroke
			200 setlinewidth
			-350 800 moveto 350 800 lineto stroke
		} def

		% upbow
		/z {
			lwid setlinewidth
			-300 900 moveto 0 0 lineto 300 900 lineto stroke
		} def

		% wedge
		/one {
			0 0 moveto -150 500 lineto 150 500 lineto fill
		} def

		% uwedge
		/two {
			-150 0 moveto 150 0 lineto 0 500 lineto fill
		} def

		% ferm
		/three {
			newpath
			do_ferm		%do a right side up fermata
		} def

		% uferm
		/four {
			newpath
			gsave
			0 270 lwid sub 800 add translate %baseline at bottom
			180 rotate			%upside down
			do_ferm		%do a right side up fermata
			grestore
		} def

		% sign
		/five {
			gsave
			%do upper left curved part, upper right dot;
			%then rotate 180 to do other half
			0 1 1 {
				pop	%we don't need the loop variable
				0 100 moveto		%inner boundary
				-1000 300 -400 750 -200 700 curveto
				-200 800 lineto		%outer boundary
				-550 900 -1100 100 0 -100 curveto
				fill
				%dot at end of curve
				-200 700 100 0 360 arc fill
				%dot in upper right quadrant
				500 200 70 0 360 arc fill
				180 rotate
			} for
			grestore

			%slash through middle
			lwid setlinewidth
			-400 -800 moveto 400 800 lineto stroke
		} def

		% coda
		/six {
			newpath
			gsave
			0.6 1 scale
			0 0 550 0 360 arc	%outside boundary
			1 0.6 div 1 scale	%back to original
			0.9 1 scale
			0 0 650 0 360 arc	%inside boundary
			eofill
			grestore
			lwid setlinewidth
			0 -850 moveto 0 850 lineto stroke
			-800 0 moveto 800 0 lineto stroke
		} def

		% mor
		/seven {
			do_mor		%do a mordent
		} def

		% invmor
		/eight {
			do_mor		%do a mordent
			lwid setlinewidth
			0 -450 moveto 0 450 lineto stroke
		} def

		% turn
		/nine {
			do_turn		%do a turn
		} def

		% invturn
		/zero {
			gsave
			1 -1 scale	%reflect across X axis
			do_turn		%do a turn
			grestore
		} def

		% acc_gt
		/numbersign {
			lwid setlinewidth
			-500 300 moveto 500 0 lineto -500 -300 lineto stroke
		} def

		% acc_hat
		/dollar {
			newpath
			-365 0 moveto 0 860 lineto 365 0 lineto
			150 0 lineto -75 530 lineto -300 0 lineto fill
		} def

		% acc_uhat
		/quotedbl {
			newpath
			365 860 moveto 0 0 lineto -365 860 lineto
			-150 860 lineto 75 330 lineto 300 860 lineto fill
		} def

		% tr
		/asterisk {
			%vertical bar of t
			-350 1000 moveto -550 200 lineto
			-612.5 -50 -212.5 -50 -160 200 curveto
			-230 200 lineto
			-300 50 -420 50 -400 200 curveto
			-200 1000 lineto fill

			%crossbar of t and vertical bar of r
			-700 600 moveto -160 600 lineto
			20 600 30 520 60 440 curveto
			-50 0 lineto 70 0 lineto 180 440 lineto
			190 480 100 670 -150 670 curveto
			-690 670 lineto fill

			%horizontal curve of r
			100 480 moveto
			300 630 450 700 650 550 curveto
			560 480 lineto
			450 630 300 560 100 390 curveto
			fill

			%knob at end of r
			600 460 100 0 360 arc fill
		} def

		% leg
		/comma {
			100 setlinewidth
			-400 0 moveto 400 0 lineto stroke
		} def

		% rr
		/hyphen {
			100 setlinewidth
			-400 0 moveto 0 1000 lineto stroke
			0 0 moveto 400 1000 lineto stroke
		} def

		% measrpt
		/period {
			newpath -450 400 150 0 360 arc fill
			newpath 450 -400 150 0 360 arc fill
			200 setlinewidth
			-550 -600 moveto 550 600 lineto stroke
		} def

		% copyright
		/slash {
			lwid setlinewidth
			newpath 0 400 400 0 360 arc stroke
			newpath 0 400 200 45 315 arc stroke
		} def

		% dim
		/quoteleft {
			50 setlinewidth
			newpath 0 640 220 0 360 arc stroke
		} def

		% halfdim
		/quoteright {
			50 setlinewidth
			newpath 0 640 220 0 360 arc stroke
			newpath -340 300 moveto 340 980 lineto stroke
		} def

		% triangle
		/asciicircum {
			50 setlinewidth
			newpath -340 -10 moveto 0 710 lineto
			340 -10 lineto closepath stroke
		} def

		% qwhrest
		/ampersand {
			300 setlinewidth
			0 -600 moveto 0 600 lineto stroke
		} def

		% ll1rest
		/exclam {
			310 setlinewidth
			-400 455 moveto 400 450 lineto stroke
		} def

		% ll2rest
		/at {
			310 setlinewidth
			-400 145 moveto 400 150 lineto stroke
		} def
	end

	/BuildChar {

		exch begin
		Encoding exch get

		dup
		Mcbbox0 exch get
		aload pop setcachedevice

		CharStrings exch get
		exec
		end
	} def
end


% Define another music character font, since there are too many to fit in one
% font.  It works the same way as the first one.

/mfont1 100 dict def
mfont1 begin
	/FontType 3 def
	/FontMatrix [ .001 0 0 0.001 0 0 ] def
	/FontBBox [ -2000 -4030 2000 4030 ] def
	/FontName (Mfont1) def

	% set up Encoding vector with standard names
	/Encoding 256 array def
	StandardEncoding Encoding copy
	pop

	%%%%% define routines that will be used by multiple characters %%%%%

	/do_dwh_bars {
		% the two bars surrounding a double whole note
		lwid setlinewidth
		-420 -600 moveto -420 600 lineto stroke
		420 -600 moveto 420 600 lineto stroke
	} def
	/do_righttriangle {
		newpath
		420 270 moveto -420 270 lineto 350 -300 lineto 420 -300 lineto
		350 150 moveto -140 150 lineto 350 -213 lineto
		eofill
	} def
	/do_fillrighttriangle {
		newpath
		420 270 moveto -420 270 lineto 350 -300 lineto 420 -300 lineto
		fill
	} def
	/do_rectangle {
		newpath
		420 270 moveto -420 270 lineto -420 -270 lineto 420 -270 lineto
		350 150 moveto -350 150 lineto -350 -150 lineto 350 -150 lineto
		eofill
	} def
	/do_isostriangle {
		newpath
		0 300 moveto -420 -270 lineto 420 -270 lineto
		0 182 moveto -245 -150 lineto 245 -150 lineto
		eofill
	} def
	/do_piewedge {
		newpath
		0 -300 moveto 0 -244 514 35 145 arc
		0 -209 moveto 0 -244 394 43 137 arc
		eofill
	} def
	/do_semicircle {
		newpath
		gsave
		1 1.357 scale 420 199 moveto 0 199 420 180 360 arc
		1 1.09 scale 350 111 moveto 0 199 350 194.1 345.9 arc
		eofill
		grestore
	} def
	/do_slashhead {
		newpath
		lwid setlinewidth
		-620 -530 moveto -480 -670 lineto 620 530 lineto 480 670 lineto
		closepath stroke
	} def

	% subsidiary dictionary of character definitions
	/CharStrings 128 dict def
	CharStrings begin

		/.notdef {} def

		% Here are the definitions of the characters.  A stepsize here
		% is 300 units (assuming the character is drawn at its default
		% size).

		% dwhrighttriangle
		/A {
			do_righttriangle
			do_dwh_bars
		} def

		% righttriangle
		/B {
			do_righttriangle
		} def

		% fillrighttriangle
		/C {
			newpath
			420 270 moveto -420 270 lineto 350 -300 lineto
			420 -300 lineto
			fill
		} def

		% udwhrighttriangle
		/D {
			gsave
			180 rotate
			do_righttriangle
			do_dwh_bars
			grestore
		} def

		% urighttriangle
		/E {
			gsave
			180 rotate
			do_righttriangle
			grestore
		} def

		% ufillrighttriangle
		/F {
			gsave
			180 rotate
			do_fillrighttriangle
			grestore
		} def

		% dwhrectangle
		/G {
			do_rectangle
			do_dwh_bars
		} def

		% rectangle
		/H {
			do_rectangle
		} def

		% fillrectangle
		/I {
			newpath
			420 270 moveto -420 270 lineto -420 -270 lineto
			420 -270 lineto
			fill
		} def

		% dwhisostriangle
		/J {
			do_isostriangle
			do_dwh_bars
		} def

		% isostriangle
		/K {
			do_isostriangle
		} def

		% fillisostriangle
		/L {
			newpath
			0 300 moveto -420 -270 lineto 420 -270 lineto
			fill
		} def

		% dwhpiewedge
		/M {
			do_piewedge
			do_dwh_bars
		} def

		% piewedge
		/N {
			do_piewedge
		} def

		% fillpiewedge
		/O {
			newpath
			0 -300 moveto 0 -244 514 35 145 arc
			fill
		} def

		% dwhsemicircle
		/P {
			do_semicircle
			do_dwh_bars
		} def

		% semicircle
		/Q {
			do_semicircle
		} def

		% fillsemicircle
		/R {
			newpath
			gsave
			1 570 420 div scale
			420 199 moveto 0 199 420 180 360 arc
			fill
			grestore
		} def

		% dwhslashhead
		/S {
			do_slashhead
			lwid setlinewidth
			-650 -600 moveto -650 600 lineto stroke
			650 -600 moveto 650 600 lineto stroke
		} def

		% slashhead
		/T {
			do_slashhead
		} def

		% fillslashhead
		/U {
			newpath
			200 setlinewidth
			-550 -600 moveto 550 600 lineto stroke
		} def

		% blankhead
		/V {
			%print nothing
		} def
	end

	/BuildChar {

		exch begin
		Encoding exch get

		dup
		Mcbbox1 exch get
		aload pop setcachedevice

		CharStrings exch get
		exec
		end
	} def
end


% General routines for printing any music character, invoked by each music
% character's specific routine below.  The scaling factor (default 1) needs
% to be multiplied by 10 to get the actual size.  These routines restore the
% preexisting current font when they are done.

/printmchar0 {
	gsave
	/musicchar exch def
	/Mfont0 findfont exch 10 mul scalefont setfont moveto 
	musicchar show
	grestore
} def
/printmchar1 {
	gsave
	/musicchar exch def
	/Mfont1 findfont exch 10 mul scalefont setfont moveto 
	musicchar show
	grestore
} def

% Define each music character name to be a routine that prints the character.
% Each character is to be invoked as in this example:
%	100 200 1 gclef		% at (100, 200), scale to default size & print

/gclef			{ (A) printmchar0 } def
/fclef			{ (B) printmchar0 } def
/cclef			{ (C) printmchar0 } def
/dblwhole		{ (D) printmchar0 } def
/1n			{ (E) printmchar0 } def
/2n			{ (F) printmchar0 } def
/4n			{ (G) printmchar0 } def
/upflag			{ (H) printmchar0 } def
/dnflag			{ (I) printmchar0 } def
/dwhrest		{ (J) printmchar0 } def
/1rest			{ (K) printmchar0 } def
/2rest			{ (L) printmchar0 } def
/4rest			{ (M) printmchar0 } def
/8rest			{ (N) printmchar0 } def
/16rest			{ (O) printmchar0 } def
/32rest			{ (P) printmchar0 } def
/64rest			{ (Q) printmchar0 } def
/128rest		{ (R) printmchar0 } def
/256rest		{ (S) printmchar0 } def
/dot			{ (T) printmchar0 } def
/nat			{ (U) printmchar0 } def
/sharp			{ (V) printmchar0 } def
/flat			{ (W) printmchar0 } def
/dblsharp		{ (X) printmchar0 } def
/dblflat		{ (Y) printmchar0 } def
/xnote			{ (Z) printmchar0 } def
/dwhdiamond		{ (a) printmchar0 } def
/diamond		{ (b) printmchar0 } def
/filldiamond		{ (c) printmchar0 } def
/up2n			{ (d) printmchar0 } def
/dn2n			{ (e) printmchar0 } def
/up4n			{ (f) printmchar0 } def
/dn4n			{ (g) printmchar0 } def
/up8n			{ (h) printmchar0 } def
/dn8n			{ (i) printmchar0 } def
/up16n			{ (j) printmchar0 } def
/dn16n			{ (k) printmchar0 } def
/up32n			{ (l) printmchar0 } def
/dn32n			{ (m) printmchar0 } def
/up64n			{ (n) printmchar0 } def
/dn64n			{ (o) printmchar0 } def
/up128n			{ (p) printmchar0 } def
/dn128n			{ (q) printmchar0 } def
/up256n			{ (r) printmchar0 } def
/dn256n			{ (s) printmchar0 } def
/com			{ (t) printmchar0 } def
/cut			{ (u) printmchar0 } def
/begped			{ (v) printmchar0 } def
/pedal			{ (w) printmchar0 } def
/endped			{ (x) printmchar0 } def
/dnbow			{ (y) printmchar0 } def
/upbow			{ (z) printmchar0 } def
/wedge			{ (1) printmchar0 } def
/uwedge			{ (2) printmchar0 } def
/ferm			{ (3) printmchar0 } def
/uferm			{ (4) printmchar0 } def
/sign			{ (5) printmchar0 } def
/coda			{ (6) printmchar0 } def
/mor			{ (7) printmchar0 } def
/invmor			{ (8) printmchar0 } def
/turn			{ (9) printmchar0 } def
/invturn		{ (0) printmchar0 } def
/acc_gt			{ (#) printmchar0 } def
/acc_hat		{ ($) printmchar0 } def
/acc_uhat		{ (") printmchar0 } def
/tr			{ (*) printmchar0 } def
/leg			{ (,) printmchar0 } def
/rr			{ (-) printmchar0 } def
/measrpt		{ (.) printmchar0 } def
/copyright		{ (/) printmchar0 } def
/dim			{ (`) printmchar0 } def
/halfdim		{ (') printmchar0 } def
/triangle		{ (^) printmchar0 } def
/qwhrest		{ (&) printmchar0 } def
/ll1rest		{ (!) printmchar0 } def
/ll2rest		{ (@) printmchar0 } def
/dwhrighttriangle	{ (A) printmchar1 } def
/righttriangle		{ (B) printmchar1 } def
/fillrighttriangle	{ (C) printmchar1 } def
/udwhrighttriangle	{ (D) printmchar1 } def
/urighttriangle		{ (E) printmchar1 } def
/ufillrighttriangle	{ (F) printmchar1 } def
/dwhrectangle		{ (G) printmchar1 } def
/rectangle		{ (H) printmchar1 } def
/fillrectangle		{ (I) printmchar1 } def
/dwhisostriangle	{ (J) printmchar1 } def
/isostriangle		{ (K) printmchar1 } def
/fillisostriangle	{ (L) printmchar1 } def
/dwhpiewedge		{ (M) printmchar1 } def
/piewedge		{ (N) printmchar1 } def
/fillpiewedge		{ (O) printmchar1 } def
/dwhsemicircle		{ (P) printmchar1 } def
/semicircle		{ (Q) printmchar1 } def
/fillsemicircle		{ (R) printmchar1 } def
/dwhslashhead		{ (S) printmchar1 } def
/slashhead		{ (T) printmchar1 } def
/fillslashhead		{ (U) printmchar1 } def
/blankhead		{ (V) printmchar1 } def


% Define routines for Mup output other than music characters.

/stepsize 3 def	   % define a step size as 3 points (at default magnification)

% x1 y1 x2 lines dist staffscale staff
%		draw a staff starting at x1, y1 and extending to x2 with "lines"
%		lines, 2*dist*stepsize apart, scaled by staffscale
/staff {
	/staffscale exch def
	/dist exch def
	/lines exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	0.7 staffscale mul setlinewidth
	1 lines sub  2  lines 1 sub {	% loop from bottom line to top line
		dup stepsize mul staffscale mul dist mul y1 add x1 exch moveto
		stepsize mul staffscale mul dist mul y1 add x2 exch lineto stroke
	} for
} def

% x y1 y2 bracket	draw a bracket; y1 is the top
/bracket {
	/y2 exch def
	/y1 exch def
	/x exch def
	gsave
	3 setlinewidth
	x 2 sub y1 1 add moveto
	x 2 sub y2 1 sub lineto
	stroke
	x 2 sub y1 1 add moveto
	x 1 sub y1 1 add   x 3 add y1 1 add   x 5 add y1 6 add   curveto
	x 6 add y1 5 add lineto
	x 5 add y1 2 add   x 1 add y1 2 sub   x 2 sub y1 2 sub   curveto
	fill
	x 2 sub y2 1 sub moveto
	x 1 sub y2 1 sub   x 3 add y2 1 sub   x 5 add y2 6 sub   curveto
	x 6 add y2 5 sub lineto
	x 5 add y2 2 sub   x 1 add y2 2 add   x 2 sub y2 2 add   curveto
	fill
	grestore
} def

% x y1 y2 right repeatbracket	draw a bracket for a repeat; y1 is the top,
%				right==1 means facing to the right
/repeatbracket {
	/right exch def
	/y2 exch def
	/y1 exch def
	/x exch def
	gsave
	right 0 eq {
		x y1 y2 add 2 div translate
		180 rotate
		0 x sub 0 y1 y2 add 2 div sub translate
	} if
	x 4.5 sub y1 1 add moveto
	x 0 sub y1 1 add   x 2 add y1 1 add   x 6 add y1 5 add   curveto
	x 6 add y1 4 add lineto
	x 6 add y1 2 add   x 1 add y1 2 sub   x 4.5 sub y1 1.5 sub   curveto
	fill
	x 4.5 sub y2 1 sub moveto
	x 0 sub y2 1 sub   x 2 add y2 1 sub   x 6 add y2 5 sub   curveto
	x 6 add y2 4 sub lineto
	x 6 add y2 2 sub   x 1 add y2 2 add   x 4.5 sub y2 1.5 add   curveto
	fill
	grestore
} def

% x y1 y2 brace		draw a brace; y1 is the top
/brace {
	/y2 exch def
	/y1 exch def
	/x exch def
	gsave
	x 6 sub y1 y2 add 2 div translate
	/topy y1 y2 sub 2 div 1 sub def
	0.667 1 scale
	0 1 1 {
		pop
		%0 topy moveto 0 0 lineto stroke
		0 0 moveto
		16 topy 0.2 mul   -11 topy 0.6 mul   8 topy   curveto
		8.7 topy lineto
		-7 topy 0.7 mul   20 topy 0.3 mul   1 0   curveto
		fill
		1 -1 scale	% flip to do bottom half
	} for
	grestore
} def

% endx endy wavy staffscale	draw a wavy line from current point to here,
%				scaled by staffscale
/wavy {
	/staffscale exch def
	/endy exch def		% define the end point of the line
	/endx exch def
	currentpoint		% line starts at current point
	/begy exch def		% define the beginning point of the line
	/begx exch def
	gsave
	/dx endx begx sub def	% find delta x and delta y
	/dy endy begy sub def
	/r dx dx mul dy dy mul add sqrt def	% hypotenuse
	/theta dy dx atan def			% angle with positive x axis
	begx begy translate	% change axes so that we can draw the line
	theta rotate		%   from (0, 0) to (r, 0)
	staffscale staffscale scale	% scale everything by staffscale
	/scaledr r staffscale div def	% but scale r in reverse to keep length

	% Each outer loop draws one cycle of the squiggle.  It continues until
	% we are at or beyond the desired end point.
	0 0 moveto
	0 6 scaledr {
		gsave
		% first loop draws left half of squiggle; second draws right
		0 1 1 {
			0.0 0.4 moveto
			2.0 1.9 3.4 2.3 3.9 0.0 curveto
			2.1 0.0 lineto
			1.9 0.8 1.4 0.7 0.0 -0.4 curveto
			fill
			pop 180 rotate -6 0 translate
		} for
		grestore

		pop 6 0 translate	% shift axes right one squiggle
	} for

	grestore
} def

% x y space frets fretno numvert curvel curver [ f1 f2 f3 ... ] grid
%				print a guitar grid diagram
/grid {
	/grid_positions exch def % 0="o", -1="x", -2=nothing, positive=dot
	/curver exch def	% right string for curve, 0 if none
	/curvel exch def	% left string for curve, 0 if none
	/numvert exch def	% vertical position to print fretno, 0 if none
	/fretno exch def	% fret no. to print at right, 0 if none
	/frets exch def		% number of fret lines
	/space exch def		% points between two neighboring lines
	/y exch def		% y coord of top fret line
	/x exch def		% x coord of left strings

	gsave
	/strings grid_positions length def	% number of strings
	/lmarky 0.4 space mul y add def		% lowest Y of a "o" or "x"
	space 10 div setlinewidth
	2 setlinecap

	% draw the lines of the grid
	0  1  strings 1 sub {	% loop from left string to right string
		dup space mul x add y moveto
		space mul x add frets 1 sub space mul y exch sub lineto stroke
	} for
	0  -1  1 frets sub {	% loop from top fret (nut) to bottom fret
		dup space mul y add x exch moveto
		space mul y add strings 1 sub space mul x add exch lineto stroke
	} for

	% draw the curved line if there is one
	curvel 0 gt {
		% within strings curvel to curver, find smallest positive fret
		/minfret 1000 def
		curvel 1 curver {
			/strno exch def
			/grid_p grid_positions strno 1 sub get def
			grid_p 0 gt grid_p minfret lt and {
				/minfret grid_p def
			} if
		} for

		% if curve goes above top fret, other marks must be higher
		minfret 1 eq {
			/hmarky 1.2 space mul y add def
		} {
			/hmarky lmarky def
		} ifelse

		/strdiff curver curvel sub def
		space 8 div setlinewidth

		% set endpoint coords of curve; higher if curve is short
		/curvex1 curvel 1 sub space mul x add def
		/curvex2 curver 1 sub space mul x add def
		/curvey 1 minfret sub space mul y add def
		strdiff 3 lt {
			/curvey 0.2 strdiff div space mul curvey add def
		} if

		% move to left end, set other points, draw curve
		curvex1 curvey moveto

		curvex1 curvex2 curvex1 sub 3 div add
		curvey space 0.4 strdiff sqrt mul mul add

		curvex2 curvex2 curvex1 sub 3 div sub
		curvey space 0.4 strdiff sqrt mul mul add

		curvex2 curvey curveto stroke
	} if

	space 10 div setlinewidth

	% draw dots and x and o marks
	0  1  strings 1 sub {	% loop from left string to right string
		/strno exch def	% first string is 0
		/grid_p grid_positions strno get def
		/strx strno space mul x add def

		% set Y of mark higher if curved line covers this string
		strno 1 add curvel ge  strno 1 add curver le  and {
			/marky hmarky def
		} {
			/marky lmarky def
		} ifelse

		grid_p -1 eq {		% draw an X above the string
			/xhwid space 3 div def
			strx xhwid sub marky xhwid sub moveto
			strx xhwid add marky xhwid add lineto stroke
			strx xhwid sub marky xhwid add moveto
			strx xhwid add marky xhwid sub lineto stroke
		} if
		grid_p 0 eq {		% draw a circle above the string
			strx marky space 0.3 mul 0 360 arc stroke
		} if
		grid_p 1 ge {		% draw a dot by the proper fret
			strx y grid_p space mul sub space 3 div add
			space 3 div 0 360 arc fill
		} if
	} for

	% print "X fr" if requested
	fretno 0 gt {
		/Palatino-Roman findfont space 1.9 mul scalefont setfont
		x strings 0.5 sub space mul add
		y space numvert 0.3 add mul sub moveto
		fretno 2 string cvs show ( fr) show
	} if
	grestore
} def

% x1 y1 x2 y2 whitebox		draw a white rectangle with opposite
%				corners of (x1,y1) and (x2,y2)
/whitebox {
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	1.0 setgray
	newpath
	x1 y1 moveto
	x1 y2 lineto
	x2 y2 lineto
	x2 y1 lineto
	closepath
	fill
	stroke
	0.0 setgray
} def


/LineNum 0 def
/InputFile (unknown) def

% n linenum
/linenum {
	/LineNum exch def
} def

% (inputfilename) inputfile
/inputfile {
	/InputFile exch def
} def

% find size of Encoding and make a dictionary
% that size for bounding box information
mfont0 begin
/dictsize Encoding length def
mfont0 /Mcbbox0 dictsize dict put

% temporarily redefine printmchar0 to get code
5 dict begin
/printmchar0 { {} forall } def

Mcbbox0 Encoding gclef get [ 1790.0 0 -915.0 -1605.0 865.0 3015.0 ] put
Mcbbox0 Encoding fclef get [ 1840.0 0 -1015.0 -1705.0 815.0 655.0 ] put
Mcbbox0 Encoding cclef get [ 1540.0 0 -765.0 -1245.0 765.0 1255.0 ] put
Mcbbox0 Encoding dblwhole get [ 1090.0 0 -535.0 -605.0 545.0 615.0 ] put
Mcbbox0 Encoding 1n get [ 1080.0 0 -535.0 -335.0 535.0 345.0 ] put
Mcbbox0 Encoding 2n get [ 880.0 0 -435.0 -345.0 435.0 355.0 ] put
Mcbbox0 Encoding 4n get [ 840.0 0 -415.0 -335.0 415.0 345.0 ] put
Mcbbox0 Encoding upflag get [ 640.0 0 -335.0 -5.0 295.0 1715.0 ] put
Mcbbox0 Encoding dnflag get [ 640.0 0 -335.0 -1705.0 295.0 15.0 ] put
Mcbbox0 Encoding qwhrest get [ 340.0 0 -165.0 -605.0 165.0 615.0 ] put
Mcbbox0 Encoding dwhrest get [ 340.0 0 -165.0 -5.0 165.0 615.0 ] put
Mcbbox0 Encoding 1rest get [ 1540.0 0 -765.0 -15.0 765.0 645.0 ] put
Mcbbox0 Encoding 2rest get [ 1540.0 0 -765.0 -45.0 765.0 315.0 ] put
Mcbbox0 Encoding 4rest get [ 650.0 0 -345.0 -885.0 295.0 995.0 ] put
Mcbbox0 Encoding 8rest get [ 750.0 0 -305.0 -625.0 435.0 485.0 ] put
Mcbbox0 Encoding 16rest get [ 830.0 0 -415.0 -1215.0 405.0 485.0 ] put
Mcbbox0 Encoding 32rest get [ 940.0 0 -415.0 -1215.0 515.0 1085.0 ] put
Mcbbox0 Encoding 64rest get [ 1040.0 0 -515.0 -1515.0 515.0 1085.0 ] put
Mcbbox0 Encoding 128rest get [ 1140.0 0 -515.0 -1515.0 615.0 1685.0 ] put
Mcbbox0 Encoding 256rest get [ 1250.0 0 -625.0 -2115.0 615.0 1685.0 ] put
Mcbbox0 Encoding ll1rest get [ 840.0 0 -415.0 -15.0 415.0 625.0 ] put
Mcbbox0 Encoding ll2rest get [ 840.0 0 -415.0 -15.0 415.0 325.0 ] put
Mcbbox0 Encoding dot get [ 280.0 0 -135.0 -125.0 135.0 135.0 ] put
Mcbbox0 Encoding nat get [ 520.0 0 -255.0 -855.0 255.0 865.0 ] put
Mcbbox0 Encoding sharp get [ 700.0 0 -345.0 -935.0 345.0 945.0 ] put
Mcbbox0 Encoding flat get [ 580.0 0 -295.0 -405.0 275.0 1115.0 ] put
Mcbbox0 Encoding dblsharp get [ 720.0 0 -355.0 -345.0 355.0 355.0 ] put
Mcbbox0 Encoding dblflat get [ 1160.0 0 -585.0 -405.0 565.0 1115.0 ] put
Mcbbox0 Encoding xnote get [ 880.0 0 -435.0 -365.0 435.0 375.0 ] put
Mcbbox0 Encoding dwhdiamond get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox0 Encoding diamond get [ 880.0 0 -435.0 -305.0 435.0 315.0 ] put
Mcbbox0 Encoding filldiamond get [ 880.0 0 -435.0 -305.0 435.0 315.0 ] put
Mcbbox0 Encoding up2n get [ 880.0 0 -435.0 -345.0 435.0 2115.0 ] put
Mcbbox0 Encoding dn2n get [ 880.0 0 -435.0 -2105.0 435.0 355.0 ] put
Mcbbox0 Encoding up4n get [ 850.0 0 -415.0 -335.0 425.0 2115.0 ] put
Mcbbox0 Encoding dn4n get [ 840.0 0 -415.0 -2105.0 415.0 345.0 ] put
Mcbbox0 Encoding com get [ 1110.0 0 -585.0 -645.0 515.0 655.0 ] put
Mcbbox0 Encoding cut get [ 1110.0 0 -585.0 -905.0 515.0 915.0 ] put
Mcbbox0 Encoding begped get [ 470.0 0 -245.0 -45.0 215.0 615.0 ] put
Mcbbox0 Encoding pedal get [ 1040.0 0 -515.0 -45.0 515.0 675.0 ] put
Mcbbox0 Encoding endped get [ 480.0 0 -215.0 -45.0 255.0 615.0 ] put
Mcbbox0 Encoding dnbow get [ 810.0 0 -395.0 -5.0 405.0 915.0 ] put
Mcbbox0 Encoding upbow get [ 720.0 0 -355.0 -115.0 355.0 925.0 ] put
Mcbbox0 Encoding wedge get [ 340.0 0 -165.0 -5.0 165.0 515.0 ] put
Mcbbox0 Encoding uwedge get [ 340.0 0 -165.0 -5.0 165.0 515.0 ] put
Mcbbox0 Encoding ferm get [ 1640.0 0 -815.0 -5.0 815.0 1015.0 ] put
Mcbbox0 Encoding uferm get [ 1640.0 0 -815.0 -5.0 815.0 1015.0 ] put
Mcbbox0 Encoding sign get [ 1340.0 0 -665.0 -825.0 665.0 835.0 ] put
Mcbbox0 Encoding coda get [ 1640.0 0 -815.0 -855.0 815.0 865.0 ] put
Mcbbox0 Encoding mor get [ 1320.0 0 -655.0 -285.0 655.0 295.0 ] put
Mcbbox0 Encoding invmor get [ 1320.0 0 -655.0 -455.0 655.0 465.0 ] put
Mcbbox0 Encoding turn get [ 1300.0 0 -645.0 -335.0 645.0 345.0 ] put
Mcbbox0 Encoding invturn get [ 1300.0 0 -645.0 -335.0 645.0 345.0 ] put
Mcbbox0 Encoding acc_gt get [ 1170.0 0 -525.0 -345.0 635.0 355.0 ] put
Mcbbox0 Encoding acc_hat get [ 780.0 0 -385.0 -5.0 385.0 875.0 ] put
Mcbbox0 Encoding acc_uhat get [ 780.0 0 -385.0 -5.0 385.0 875.0 ] put
Mcbbox0 Encoding tr get [ 1440.0 0 -715.0 -5.0 715.0 1015.0 ] put
Mcbbox0 Encoding leg get [ 840.0 0 -415.0 -55.0 415.0 65.0 ] put
Mcbbox0 Encoding rr get [ 940.0 0 -465.0 -25.0 465.0 1035.0 ] put
Mcbbox0 Encoding dim get [ 540.0 0 -265.0 -15.0 265.0 905.0 ] put
Mcbbox0 Encoding halfdim get [ 760.0 0 -375.0 -15.0 375.0 1015.0 ] put
Mcbbox0 Encoding triangle get [ 800.0 0 -395.0 -45.0 395.0 785.0 ] put
Mcbbox0 Encoding measrpt get [ 1300.0 0 -645.0 -675.0 645.0 685.0 ] put
Mcbbox0 Encoding copyright get [ 920.0 0 -455.0 -45.0 455.0 855.0 ] put
Mcbbox0 Encoding up8n get [ 1390.0 0 -745.0 -335.0 635.0 2115.0 ] put
Mcbbox0 Encoding dn8n get [ 840.0 0 -415.0 -2105.0 415.0 345.0 ] put
Mcbbox0 Encoding up16n get [ 1390.0 0 -745.0 -335.0 635.0 2115.0 ] put
Mcbbox0 Encoding dn16n get [ 840.0 0 -415.0 -2105.0 415.0 345.0 ] put
Mcbbox0 Encoding up32n get [ 1390.0 0 -745.0 -335.0 635.0 2595.0 ] put
Mcbbox0 Encoding dn32n get [ 840.0 0 -415.0 -2585.0 415.0 345.0 ] put
Mcbbox0 Encoding up64n get [ 1390.0 0 -745.0 -335.0 635.0 3075.0 ] put
Mcbbox0 Encoding dn64n get [ 840.0 0 -415.0 -3065.0 415.0 345.0 ] put
Mcbbox0 Encoding up128n get [ 1390.0 0 -745.0 -335.0 635.0 3555.0 ] put
Mcbbox0 Encoding dn128n get [ 840.0 0 -415.0 -3545.0 415.0 345.0 ] put
Mcbbox0 Encoding up256n get [ 1390.0 0 -745.0 -335.0 635.0 3975.0 ] put
Mcbbox0 Encoding dn256n get [ 840.0 0 -415.0 -3965.0 415.0 345.0 ] put

end
end

/Mfont0 mfont0 definefont


% find size of Encoding and make a dictionary
% that size for bounding box information
mfont1 begin
/dictsize Encoding length def
mfont1 /Mcbbox1 dictsize dict put

% temporarily redefine printmchar1 to get code
5 dict begin
/printmchar1 { {} forall } def

Mcbbox1 Encoding dwhrighttriangle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding righttriangle get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding fillrighttriangle get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding udwhrighttriangle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding urighttriangle get [ 880.0 0 -435.0 -275.0 435.0 315.0 ] put
Mcbbox1 Encoding ufillrighttriangle get [ 880.0 0 -435.0 -275.0 435.0 315.0 ] put
Mcbbox1 Encoding dwhrectangle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding rectangle get [ 880.0 0 -435.0 -275.0 435.0 285.0 ] put
Mcbbox1 Encoding fillrectangle get [ 880.0 0 -435.0 -275.0 435.0 285.0 ] put
Mcbbox1 Encoding dwhisostriangle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding isostriangle get [ 880.0 0 -435.0 -275.0 435.0 315.0 ] put
Mcbbox1 Encoding fillisostriangle get [ 880.0 0 -435.0 -275.0 435.0 315.0 ] put
Mcbbox1 Encoding dwhpiewedge get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding piewedge get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding fillpiewedge get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding dwhsemicircle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding semicircle get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding fillsemicircle get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding dwhslashhead get [ 1410.0 0 -695.0 -725.0 705.0 735.0 ] put
Mcbbox1 Encoding slashhead get [ 1380.0 0 -685.0 -725.0 685.0 735.0 ] put
Mcbbox1 Encoding fillslashhead get [ 1300.0 0 -645.0 -675.0 645.0 685.0 ] put
Mcbbox1 Encoding blankhead get [ 880.0 0 -435.0 -275.0 435.0 285.0 ] put

end
end

/Mfont1 mfont1 definefont

/flagsep 1.60 300 mul def	 % 1.60 stepsizes
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] >> setpagedevice
%%EndFeature
%%EndProlog
%%Page: 1 1
save
0.750000 0.750000 scale
%  S_SSV
(kaleidakustikon_2.mup) inputfile
7 linenum
%  S_SSV
15 linenum
%  S_SSV
18 linenum
%  S_SSV
21 linenum
%  S_FEED
27 linenum
88.79 941.83 768.00 5 1.000000 1.000000 staff
88.79 875.54 768.00 5 1.000000 1.000000 staff
87.79 953.83 863.54 brace
0.70 setlinewidth
88.79 953.83 moveto
88.79 863.54 lineto stroke
%  S_CLEFSIG
27 linenum
100.58 935.83 1.000000 gclef
100.83 881.54 1.000000 fclef
116.62 941.83 1.000000 flat
116.62 869.54 1.000000 flat
/NewCenturySchlbk-Bold findfont
16 scalefont
setfont
122.36 941.83 moveto
(3) show
/NewCenturySchlbk-Bold findfont
16 scalefont
setfont
122.36 929.91 moveto
(4) show
/NewCenturySchlbk-Bold findfont
16 scalefont
setfont
122.36 875.54 moveto
(3) show
/NewCenturySchlbk-Bold findfont
16 scalefont
setfont
122.36 863.62 moveto
(4) show
%  S_CHHEAD
27 linenum
%  S_STAFF
% staff 1
save
145.89 944.83 1.000000 4n
142.20 944.08 moveto
142.20 925.63 lineto stroke
158.43 938.83 1.000000 4n
154.75 938.08 moveto
154.75 922.22 lineto stroke
newpath
141.85 927.13 moveto
155.10 923.72 lineto
155.10 920.72 lineto
141.85 924.13 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
145.89 875.54 1.000000 4rest
restore
%  S_BAR
29 linenum
0.70 setlinewidth
172.52 953.83 moveto
172.52 929.83 lineto stroke
172.52 887.54 moveto
172.52 863.54 lineto stroke
%  S_CHHEAD
32 linenum
%  S_STAFF
% staff 1
save
181.10 953.83 1.000000 4n
177.42 953.08 moveto
177.42 932.83 lineto stroke
190.01 956.83 0.583333 4n
192.01 957.32 moveto
192.01 968.53 lineto stroke
193.77 968.53 0.583333 dnflag
newpath
188.76 958.78 moveto
195.26 965.78 lineto
195.26 964.28 lineto
188.76 957.28 lineto
closepath
fill
201.71 953.83 1.000000 4n
198.03 953.08 moveto
198.03 933.98 lineto stroke
213.42 950.83 1.000000 4n
209.73 950.08 moveto
209.73 932.33 lineto stroke
225.12 953.83 1.000000 4n
221.44 953.08 moveto
221.44 930.67 lineto stroke
237.67 944.83 1.000000 4n
233.99 944.08 moveto
233.99 928.90 lineto stroke
newpath
197.68 935.48 moveto
234.34 930.40 lineto
234.34 927.40 lineto
197.68 932.48 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
181.10 860.54 1.000000 4n
0.70 setlinewidth
184.79 861.29 moveto
184.79 881.54 lineto stroke
201.71 893.54 1.000000 4n
195.48 893.54 moveto
207.94 893.54 lineto stroke
201.71 887.54 1.000000 4n
201.71 881.54 1.000000 4n
198.03 892.79 moveto
198.03 860.54 lineto stroke
225.12 893.54 1.000000 4n
218.89 893.54 moveto
231.35 893.54 lineto stroke
225.12 887.54 1.000000 4n
225.12 881.54 1.000000 4n
221.44 892.79 moveto
221.44 860.54 lineto stroke
restore
%  S_BAR
34 linenum
0.70 setlinewidth
251.76 953.83 moveto
251.76 929.83 lineto stroke
251.76 887.54 moveto
251.76 863.54 lineto stroke
%  S_CHHEAD
38 linenum
%  S_STAFF
% staff 1
save
260.57 959.83 1.000000 4n
254.33 959.83 moveto
266.80 959.83 lineto stroke
256.88 959.08 moveto
256.88 934.58 lineto stroke
272.27 953.83 1.000000 4n
268.59 953.08 moveto
268.59 934.58 lineto stroke
283.98 965.83 1.000000 4n
277.75 965.83 moveto
290.21 965.83 lineto stroke
277.75 959.83 moveto
288.33 959.83 lineto stroke
280.30 965.08 moveto
280.30 934.58 lineto stroke
295.68 959.83 1.000000 4n
290.83 959.83 moveto
300.54 959.83 lineto stroke
292.00 959.08 moveto
292.00 934.58 lineto stroke
307.39 974.83 1.000000 4n
301.16 971.83 moveto
313.62 971.83 lineto stroke
301.16 965.83 moveto
313.62 965.83 lineto stroke
303.04 959.83 moveto
313.62 959.83 lineto stroke
303.71 974.08 moveto
303.71 934.58 lineto stroke
319.93 953.83 1.000000 4n
316.25 953.08 moveto
316.25 934.58 lineto stroke
newpath
256.53 936.08 moveto
316.60 936.08 lineto
316.60 933.08 lineto
256.53 933.08 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
260.57 860.54 1.000000 4n
0.70 setlinewidth
264.25 861.29 moveto
264.25 881.54 lineto stroke
283.98 893.54 1.000000 4n
277.75 893.54 moveto
290.21 893.54 lineto stroke
283.98 887.54 1.000000 4n
283.98 881.54 1.000000 4n
280.30 892.79 moveto
280.30 860.54 lineto stroke
307.39 893.54 1.000000 4n
301.16 893.54 moveto
313.62 893.54 lineto stroke
307.39 887.54 1.000000 4n
307.39 881.54 1.000000 4n
303.71 892.79 moveto
303.71 860.54 lineto stroke
restore
%  S_BAR
40 linenum
0.70 setlinewidth
334.03 953.83 moveto
334.03 929.83 lineto stroke
334.03 887.54 moveto
334.03 863.54 lineto stroke
%  S_CHHEAD
44 linenum
%  S_STAFF
% staff 1
save
342.83 950.83 1.000000 4n
339.15 950.08 moveto
339.15 934.33 lineto stroke
354.54 968.83 1.000000 4n
348.31 965.83 moveto
359.39 965.83 lineto stroke
348.31 959.83 moveto
358.89 959.83 lineto stroke
350.86 968.08 moveto
350.86 934.33 lineto stroke
366.25 965.83 1.000000 4n
361.39 965.83 moveto
372.48 965.83 lineto stroke
361.89 959.83 moveto
370.60 959.83 lineto stroke
362.56 965.08 moveto
362.56 934.33 lineto stroke
377.95 962.83 1.000000 4n
373.10 959.83 moveto
384.18 959.83 lineto stroke
374.27 962.08 moveto
374.27 934.33 lineto stroke
389.66 956.83 1.000000 4n
385.98 956.08 moveto
385.98 934.33 lineto stroke
402.20 950.83 1.000000 4n
398.52 950.08 moveto
398.52 934.33 lineto stroke
newpath
338.80 935.83 moveto
398.87 935.83 lineto
398.87 932.83 lineto
338.80 932.83 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
342.83 872.54 1.000000 4n
0.70 setlinewidth
346.52 873.29 moveto
346.52 893.54 lineto stroke
366.25 893.54 1.000000 4n
360.01 893.54 moveto
372.48 893.54 lineto stroke
358.88 890.54 1.000000 4n
366.25 884.54 1.000000 4n
362.56 892.79 moveto
362.56 863.54 lineto stroke
389.66 893.54 1.000000 4n
383.43 893.54 moveto
395.89 893.54 lineto stroke
382.29 890.54 1.000000 4n
389.66 884.54 1.000000 4n
385.98 892.79 moveto
385.98 863.54 lineto stroke
restore
%  S_BAR
46 linenum
0.70 setlinewidth
416.30 953.83 moveto
416.30 929.83 lineto stroke
416.30 887.54 moveto
416.30 863.54 lineto stroke
%  S_CHHEAD
50 linenum
%  S_STAFF
% staff 1
save
426.55 944.83 1.000000 4n
435.81 944.83 1.000000 dot
422.87 944.08 moveto
422.87 923.83 lineto stroke
462.35 944.83 1.000000 4n
453.00 944.83 1.000000 sharp
458.67 944.08 moveto
458.67 924.59 lineto stroke
474.06 947.83 1.000000 4n
470.38 947.08 moveto
470.38 924.59 lineto stroke
486.61 941.83 1.000000 4n
482.92 941.08 moveto
482.92 924.59 lineto stroke
newpath
458.32 926.09 moveto
483.27 926.09 lineto
483.27 923.09 lineto
458.32 923.09 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
426.55 872.54 1.000000 4n
0.70 setlinewidth
430.23 873.29 moveto
430.23 893.54 lineto stroke
445.21 893.54 1.000000 4n
438.98 893.54 moveto
451.44 893.54 lineto stroke
445.21 884.54 1.000000 4n
445.21 878.54 1.000000 4n
441.53 892.79 moveto
441.53 857.54 lineto stroke
474.06 893.54 1.000000 4n
467.83 893.54 moveto
480.29 893.54 lineto stroke
474.06 884.54 1.000000 4n
474.06 878.54 1.000000 4n
470.38 892.79 moveto
470.38 857.54 lineto stroke
restore
%  S_BAR
52 linenum
0.70 setlinewidth
500.70 953.83 moveto
500.70 929.83 lineto stroke
500.70 887.54 moveto
500.70 863.54 lineto stroke
%  S_CHHEAD
56 linenum
%  S_STAFF
% staff 1
save
509.50 938.83 1.000000 4n
505.82 938.08 moveto
505.82 919.96 lineto stroke
521.21 944.83 1.000000 4n
517.53 944.08 moveto
517.53 923.36 lineto stroke
532.92 953.83 1.000000 4n
542.18 956.83 1.000000 dot
529.23 953.08 moveto
529.23 932.83 lineto stroke
568.03 938.83 1.000000 4n
571.71 939.58 moveto
571.71 959.83 lineto stroke
574.74 959.83 1.000000 dnflag
newpath
505.47 921.46 moveto
517.88 924.86 lineto
517.88 921.86 lineto
505.47 918.46 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
509.50 860.54 1.000000 4n
0.70 setlinewidth
513.19 861.29 moveto
513.19 892.70 lineto stroke
521.21 866.54 1.000000 4n
524.89 867.29 moveto
524.89 896.42 lineto stroke
532.92 872.54 1.000000 4n
536.60 873.29 moveto
536.60 900.15 lineto stroke
544.62 881.54 1.000000 4n
548.30 882.29 moveto
548.30 903.88 lineto stroke
556.33 887.54 1.000000 4n
560.01 888.29 moveto
560.01 907.60 lineto stroke
568.03 893.54 1.000000 4n
561.80 893.54 moveto
574.26 893.54 lineto stroke
571.71 894.29 moveto
571.71 911.33 lineto stroke
newpath
512.84 894.20 moveto
572.06 912.83 lineto
572.06 909.83 lineto
512.84 891.20 lineto
closepath
fill
restore
%  S_BAR
58 linenum
0.70 setlinewidth
582.97 953.83 moveto
582.97 929.83 lineto stroke
582.97 887.54 moveto
582.97 863.54 lineto stroke
%  S_CHHEAD
62 linenum
%  S_STAFF
% staff 1
save
591.50 935.83 1.000000 4n
587.82 935.08 moveto
587.82 919.33 lineto stroke
610.48 944.83 1.000000 4n
601.12 944.83 1.000000 sharp
606.79 944.08 moveto
606.79 919.33 lineto stroke
622.18 950.83 1.000000 4n
618.50 950.08 moveto
618.50 919.33 lineto stroke
633.89 947.83 1.000000 4n
630.21 947.08 moveto
630.21 919.33 lineto stroke
645.59 941.83 1.000000 4n
641.91 941.08 moveto
641.91 919.33 lineto stroke
658.14 935.83 1.000000 4n
654.46 935.08 moveto
654.46 919.33 lineto stroke
newpath
587.47 920.83 moveto
654.81 920.83 lineto
654.81 917.83 lineto
587.47 917.83 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
591.50 860.54 1.000000 4n
0.70 setlinewidth
595.18 861.29 moveto
595.18 881.54 lineto stroke
622.18 896.54 1.000000 4n
615.95 893.54 moveto
628.41 893.54 lineto stroke
622.18 890.54 1.000000 4n
618.50 895.79 moveto
618.50 869.54 lineto stroke
645.59 896.54 1.000000 4n
639.36 893.54 moveto
651.83 893.54 lineto stroke
645.59 890.54 1.000000 4n
641.91 895.79 moveto
641.91 869.54 lineto stroke
restore
%  S_BAR
64 linenum
0.70 setlinewidth
672.23 953.83 moveto
672.23 929.83 lineto stroke
672.23 887.54 moveto
672.23 863.54 lineto stroke
%  S_CHHEAD
68 linenum
%  S_STAFF
% staff 1
save
684.66 929.83 1.000000 4n
688.34 930.58 moveto
688.34 950.83 lineto stroke
691.37 950.83 1.000000 dnflag
700.23 944.83 1.000000 4n
703.91 945.58 moveto
703.91 964.83 lineto stroke
723.19 941.83 1.000000 4n
714.73 941.83 1.000000 nat
726.87 942.58 moveto
726.87 959.33 lineto stroke
741.01 941.83 1.000000 4n
732.24 941.83 1.000000 flat
744.69 942.58 moveto
744.69 959.33 lineto stroke
753.56 935.83 1.000000 4n
757.24 936.58 moveto
757.24 959.33 lineto stroke
newpath
726.52 960.83 moveto
757.59 960.83 lineto
757.59 957.83 lineto
726.52 957.83 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
680.76 872.54 1.000000 4n
0.70 setlinewidth
684.45 873.29 moveto
684.45 893.54 lineto stroke
719.30 893.54 1.000000 4n
713.06 893.54 moveto
725.53 893.54 lineto stroke
711.93 890.54 1.000000 4n
711.93 878.54 1.000000 4n
715.61 879.29 moveto
715.61 908.54 lineto stroke
748.38 893.54 1.000000 4n
742.14 893.54 moveto
754.61 893.54 lineto stroke
741.01 890.54 1.000000 4n
741.01 878.54 1.000000 4n
744.69 879.29 moveto
744.69 908.54 lineto stroke
688.56 872.54 1.000000 2n
698.04 872.54 1.000000 dot
684.66 871.79 moveto
684.66 852.54 lineto stroke
restore
%  S_BAR
71 linenum
0.70 setlinewidth
767.65 953.83 moveto
767.65 929.83 lineto stroke
767.65 887.54 moveto
767.65 863.54 lineto stroke
%  S_FEED
74 linenum
50.50 791.54 768.00 5 1.000000 1.000000 staff
/Times-Roman findfont
11 scalefont
setfont
55.00 818.67 moveto
(9) show
50.50 737.54 768.00 5 1.000000 1.000000 staff
49.50 803.54 725.54 brace
50.50 803.54 moveto
50.50 725.54 lineto stroke
%  S_CLEFSIG
74 linenum
62.29 785.54 1.000000 gclef
62.54 743.54 1.000000 fclef
78.33 791.54 1.000000 flat
78.33 731.54 1.000000 flat
%  S_CHHEAD
74 linenum
%  S_STAFF
% staff 1
save
97.12 782.54 1.000000 4n
100.80 783.29 moveto
100.80 803.54 lineto stroke
114.07 791.54 1.000000 4rest
restore
%  S_STAFF
% staff 2
save
97.12 755.54 1.000000 4n
0.70 setlinewidth
90.88 755.54 moveto
103.35 755.54 lineto stroke
97.12 749.54 1.000000 4n
97.12 743.54 1.000000 4n
93.43 754.79 moveto
93.43 722.54 lineto stroke
114.07 722.54 1.000000 4n
117.75 723.29 moveto
117.75 743.54 lineto stroke
restore
%  S_BAR
76 linenum
144.84 794.54 1.000000 dot
144.84 788.54 1.000000 dot
130.84 794.54 1.000000 dot
130.84 788.54 1.000000 dot
3.00 setlinewidth
135.34 803.54 moveto
135.34 779.54 lineto stroke
140.34 803.54 moveto
140.34 779.54 lineto stroke
0.70 setlinewidth
144.84 740.54 1.000000 dot
144.84 734.54 1.000000 dot
130.84 740.54 1.000000 dot
130.84 734.54 1.000000 dot
3.00 setlinewidth
135.34 749.54 moveto
135.34 725.54 lineto stroke
140.34 749.54 moveto
140.34 725.54 lineto stroke
0.70 setlinewidth
%  S_CHHEAD
80 linenum
%  S_STAFF
% staff 1
save
152.37 794.54 1.000000 4n
148.69 793.79 moveto
148.69 774.62 lineto stroke
163.14 800.54 1.000000 4n
159.45 799.79 moveto
159.45 778.54 lineto stroke
newpath
148.34 776.12 moveto
159.80 780.04 lineto
159.80 777.04 lineto
148.34 773.12 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
152.37 737.54 1.000000 4rest
restore
%  S_BAR
82 linenum
0.70 setlinewidth
175.19 803.54 moveto
175.19 779.54 lineto stroke
175.19 749.54 moveto
175.19 725.54 lineto stroke
%  S_CHHEAD
85 linenum
%  S_STAFF
% staff 1
save
183.72 806.54 1.000000 4n
180.04 805.79 moveto
180.04 785.54 lineto stroke
192.14 809.54 0.583333 4n
187.59 809.54 moveto
196.69 809.54 lineto stroke
194.14 810.03 moveto
194.14 821.24 lineto stroke
195.91 821.24 0.583333 dnflag
newpath
190.89 811.49 moveto
197.39 818.49 lineto
197.39 816.99 lineto
190.89 809.99 lineto
closepath
fill
203.85 806.54 1.000000 4n
200.16 805.79 moveto
200.16 785.72 lineto stroke
222.55 803.54 1.000000 4n
213.20 803.54 1.000000 sharp
218.87 802.79 moveto
218.87 785.72 lineto stroke
232.61 806.54 1.000000 4n
228.93 805.79 moveto
228.93 785.72 lineto stroke
243.38 809.54 1.000000 4n
237.15 809.54 moveto
249.61 809.54 lineto stroke
239.70 808.79 moveto
239.70 785.72 lineto stroke
newpath
199.81 787.22 moveto
240.05 787.22 lineto
240.05 784.22 lineto
199.81 784.22 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
183.72 734.54 1.000000 4n
0.70 setlinewidth
180.04 733.79 moveto
180.04 716.58 lineto stroke
193.78 755.54 1.000000 4n
187.55 755.54 moveto
200.01 755.54 lineto stroke
190.10 754.79 moveto
190.10 720.24 lineto stroke
203.85 752.54 1.000000 4n
203.85 740.54 1.000000 4n
200.16 751.79 moveto
200.16 724.04 lineto stroke
222.55 755.54 1.000000 4n
216.32 755.54 moveto
228.78 755.54 lineto stroke
218.87 754.79 moveto
218.87 724.04 lineto stroke
232.61 752.54 1.000000 4n
232.61 740.54 1.000000 4n
228.93 751.79 moveto
228.93 724.04 lineto stroke
243.38 755.54 1.000000 4n
237.15 755.54 moveto
249.61 755.54 lineto stroke
239.70 754.79 moveto
239.70 724.04 lineto stroke
newpath
179.69 718.08 moveto
190.45 721.74 lineto
190.45 718.74 lineto
179.69 715.08 lineto
closepath
fill
newpath
199.81 725.54 moveto
240.05 725.54 lineto
240.05 722.54 lineto
199.81 722.54 lineto
closepath
fill
restore
%  S_BAR
87 linenum
0.70 setlinewidth
255.43 803.54 moveto
255.43 779.54 lineto stroke
255.43 749.54 moveto
255.43 725.54 lineto stroke
%  S_CHHEAD
91 linenum
%  S_STAFF
% staff 1
save
263.97 815.54 1.000000 4n
273.23 818.54 1.000000 dot
257.73 815.54 moveto
270.20 815.54 lineto stroke
257.73 809.54 moveto
270.20 809.54 lineto stroke
260.28 814.79 moveto
260.28 791.54 lineto stroke
294.16 812.54 1.000000 4n
285.71 812.54 1.000000 nat
287.93 809.54 moveto
300.39 809.54 lineto stroke
290.48 811.79 moveto
290.48 793.04 lineto stroke
311.71 812.54 1.000000 4n
302.93 812.54 1.000000 flat
305.48 809.54 moveto
317.94 809.54 lineto stroke
308.03 811.79 moveto
308.03 791.06 lineto stroke
322.48 806.54 1.000000 4n
318.80 805.79 moveto
318.80 789.85 lineto stroke
newpath
290.13 794.54 moveto
319.15 791.35 lineto
319.15 788.35 lineto
290.13 791.54 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
263.97 734.54 1.000000 4n
0.70 setlinewidth
260.28 733.79 moveto
260.28 716.58 lineto stroke
274.03 755.54 1.000000 4n
267.80 755.54 moveto
280.26 755.54 lineto stroke
270.35 754.79 moveto
270.35 720.24 lineto stroke
284.09 752.54 1.000000 4n
284.09 740.54 1.000000 4n
280.41 751.79 moveto
280.41 724.04 lineto stroke
294.16 755.54 1.000000 4n
287.93 755.54 moveto
300.39 755.54 lineto stroke
290.48 754.79 moveto
290.48 724.04 lineto stroke
311.71 752.54 1.000000 4n
311.71 740.54 1.000000 4n
308.03 751.79 moveto
308.03 724.04 lineto stroke
322.48 755.54 1.000000 4n
316.25 755.54 moveto
328.71 755.54 lineto stroke
318.80 754.79 moveto
318.80 724.04 lineto stroke
newpath
259.93 718.08 moveto
270.70 721.74 lineto
270.70 718.74 lineto
259.93 715.08 lineto
closepath
fill
newpath
280.06 725.54 moveto
319.15 725.54 lineto
319.15 722.54 lineto
280.06 722.54 lineto
closepath
fill
restore
%  S_BAR
93 linenum
0.70 setlinewidth
334.53 803.54 moveto
334.53 779.54 lineto stroke
334.53 749.54 moveto
334.53 725.54 lineto stroke
%  S_CHHEAD
97 linenum
%  S_STAFF
% staff 1
save
343.06 803.54 1.000000 4n
339.38 802.79 moveto
339.38 784.04 lineto stroke
353.12 809.54 1.000000 4n
346.89 809.54 moveto
359.36 809.54 lineto stroke
349.44 808.79 moveto
349.44 784.04 lineto stroke
363.19 806.54 1.000000 4n
359.51 805.79 moveto
359.51 784.04 lineto stroke
373.25 803.54 1.000000 4n
369.57 802.79 moveto
369.57 784.04 lineto stroke
383.32 800.54 1.000000 4n
379.63 799.79 moveto
379.63 784.04 lineto stroke
394.08 803.54 1.000000 4n
390.40 802.79 moveto
390.40 784.04 lineto stroke
newpath
339.03 785.54 moveto
390.75 785.54 lineto
390.75 782.54 lineto
339.03 782.54 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
343.06 734.54 1.000000 4n
0.70 setlinewidth
339.38 733.79 moveto
339.38 716.58 lineto stroke
353.12 755.54 1.000000 4n
346.89 755.54 moveto
359.36 755.54 lineto stroke
349.44 754.79 moveto
349.44 720.24 lineto stroke
363.19 749.54 1.000000 4n
363.19 743.54 1.000000 4n
359.51 748.79 moveto
359.51 727.04 lineto stroke
373.25 755.54 1.000000 4n
367.02 755.54 moveto
379.48 755.54 lineto stroke
369.57 754.79 moveto
369.57 727.04 lineto stroke
383.32 749.54 1.000000 4n
383.32 743.54 1.000000 4n
379.63 748.79 moveto
379.63 727.04 lineto stroke
394.08 755.54 1.000000 4n
387.85 755.54 moveto
400.32 755.54 lineto stroke
390.40 754.79 moveto
390.40 727.04 lineto stroke
newpath
339.03 718.08 moveto
349.79 721.74 lineto
349.79 718.74 lineto
339.03 715.08 lineto
closepath
fill
newpath
359.16 728.54 moveto
390.75 728.54 lineto
390.75 725.54 lineto
359.16 725.54 lineto
closepath
fill
restore
%  S_BAR
99 linenum
0.70 setlinewidth
406.14 803.54 moveto
406.14 779.54 lineto stroke
406.14 749.54 moveto
406.14 725.54 lineto stroke
%  S_CHHEAD
103 linenum
%  S_STAFF
% staff 1
save
414.67 794.54 1.000000 4n
410.99 793.79 moveto
410.99 773.54 lineto stroke
434.80 794.54 1.000000 4n
431.11 793.79 moveto
431.11 773.54 lineto stroke
454.92 794.54 1.000000 4n
451.24 793.79 moveto
451.24 773.54 lineto stroke
restore
%  S_STAFF
% staff 2
save
414.67 734.54 1.000000 4n
0.70 setlinewidth
410.99 733.79 moveto
410.99 716.58 lineto stroke
424.73 755.54 1.000000 4n
418.50 755.54 moveto
430.96 755.54 lineto stroke
421.05 754.79 moveto
421.05 720.24 lineto stroke
434.80 749.54 1.000000 4n
434.80 743.54 1.000000 4n
431.11 748.79 moveto
431.11 727.04 lineto stroke
444.86 755.54 1.000000 4n
438.63 755.54 moveto
451.09 755.54 lineto stroke
441.18 754.79 moveto
441.18 727.04 lineto stroke
454.92 749.54 1.000000 4n
454.92 743.54 1.000000 4n
451.24 748.79 moveto
451.24 727.04 lineto stroke
465.69 755.54 1.000000 4n
459.46 755.54 moveto
471.92 755.54 lineto stroke
462.01 754.79 moveto
462.01 727.04 lineto stroke
newpath
410.64 718.08 moveto
421.40 721.74 lineto
421.40 718.74 lineto
410.64 715.08 lineto
closepath
fill
newpath
430.76 728.54 moveto
462.36 728.54 lineto
462.36 725.54 lineto
430.76 725.54 lineto
closepath
fill
restore
%  S_BAR
105 linenum
0.70 setlinewidth
477.74 803.54 moveto
477.74 779.54 lineto stroke
477.74 749.54 moveto
477.74 725.54 lineto stroke
%  S_CHHEAD
109 linenum
%  S_STAFF
% staff 1
save
486.27 779.54 1.000000 4n
489.96 780.29 moveto
489.96 814.04 lineto stroke
496.34 785.54 1.000000 4n
500.02 786.29 moveto
500.02 814.04 lineto stroke
506.40 791.54 1.000000 4n
510.08 792.29 moveto
510.08 814.04 lineto stroke
516.47 797.54 1.000000 4n
520.15 798.29 moveto
520.15 814.04 lineto stroke
526.53 794.54 1.000000 4n
530.21 795.29 moveto
530.21 814.04 lineto stroke
537.30 779.54 1.000000 4n
540.98 780.29 moveto
540.98 814.04 lineto stroke
newpath
489.61 815.54 moveto
541.33 815.54 lineto
541.33 812.54 lineto
489.61 812.54 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
486.27 734.54 1.000000 4n
0.70 setlinewidth
482.59 733.79 moveto
482.59 716.58 lineto stroke
496.34 755.54 1.000000 4n
490.11 755.54 moveto
502.57 755.54 lineto stroke
492.66 754.79 moveto
492.66 720.24 lineto stroke
506.40 752.54 1.000000 4n
506.40 746.54 1.000000 4n
502.72 751.79 moveto
502.72 730.04 lineto stroke
516.47 755.54 1.000000 4n
510.23 755.54 moveto
522.70 755.54 lineto stroke
512.78 754.79 moveto
512.78 730.04 lineto stroke
526.53 752.54 1.000000 4n
526.53 746.54 1.000000 4n
522.85 751.79 moveto
522.85 730.04 lineto stroke
537.30 755.54 1.000000 4n
531.07 755.54 moveto
543.53 755.54 lineto stroke
533.62 754.79 moveto
533.62 730.04 lineto stroke
newpath
482.24 718.08 moveto
493.01 721.74 lineto
493.01 718.74 lineto
482.24 715.08 lineto
closepath
fill
newpath
502.37 731.54 moveto
533.97 731.54 lineto
533.97 728.54 lineto
502.37 728.54 lineto
closepath
fill
restore
%  S_BAR
111 linenum
0.70 setlinewidth
549.35 803.54 moveto
549.35 779.54 lineto stroke
549.35 749.54 moveto
549.35 725.54 lineto stroke
%  S_CHHEAD
115 linenum
%  S_STAFF
% staff 1
save
557.88 782.54 1.000000 4n
554.20 781.79 moveto
554.20 764.72 lineto stroke
567.95 788.54 1.000000 4n
564.26 787.79 moveto
564.26 768.03 lineto stroke
578.01 794.54 1.000000 4n
574.33 793.79 moveto
574.33 771.33 lineto stroke
588.07 803.54 1.000000 4n
584.39 802.79 moveto
584.39 774.64 lineto stroke
598.14 809.54 1.000000 4n
591.91 809.54 moveto
604.37 809.54 lineto stroke
594.46 808.79 moveto
594.46 777.95 lineto stroke
608.91 806.54 1.000000 4n
605.22 805.79 moveto
605.22 781.49 lineto stroke
newpath
553.85 766.22 moveto
605.57 782.99 lineto
605.57 779.99 lineto
553.85 763.22 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
557.88 734.54 1.000000 4n
0.70 setlinewidth
554.20 733.79 moveto
554.20 716.58 lineto stroke
567.95 755.54 1.000000 4n
561.71 755.54 moveto
574.18 755.54 lineto stroke
564.26 754.79 moveto
564.26 720.24 lineto stroke
578.01 749.54 1.000000 4n
578.01 743.54 1.000000 4n
574.33 748.79 moveto
574.33 727.04 lineto stroke
588.07 755.54 1.000000 4n
581.84 755.54 moveto
594.31 755.54 lineto stroke
584.39 754.79 moveto
584.39 727.04 lineto stroke
598.14 749.54 1.000000 4n
598.14 743.54 1.000000 4n
594.46 748.79 moveto
594.46 727.04 lineto stroke
608.91 755.54 1.000000 4n
602.67 755.54 moveto
615.14 755.54 lineto stroke
605.22 754.79 moveto
605.22 727.04 lineto stroke
newpath
553.85 718.08 moveto
564.61 721.74 lineto
564.61 718.74 lineto
553.85 715.08 lineto
closepath
fill
newpath
573.98 728.54 moveto
605.57 728.54 lineto
605.57 725.54 lineto
573.98 725.54 lineto
closepath
fill
restore
%  S_BAR
117 linenum
0.70 setlinewidth
620.96 803.54 moveto
620.96 779.54 lineto stroke
620.96 749.54 moveto
620.96 725.54 lineto stroke
%  S_CHHEAD
121 linenum
%  S_STAFF
% staff 1
save
629.49 803.54 1.000000 4n
625.81 802.79 moveto
625.81 776.10 lineto stroke
639.55 794.54 1.000000 4n
635.87 793.79 moveto
635.87 776.10 lineto stroke
659.27 815.54 1.000000 4n
653.04 815.54 moveto
665.51 815.54 lineto stroke
653.04 809.54 moveto
665.51 809.54 lineto stroke
655.59 814.79 moveto
655.59 776.10 lineto stroke
669.34 794.54 1.000000 4n
665.66 793.79 moveto
665.66 776.10 lineto stroke
679.40 815.54 1.000000 4n
673.17 815.54 moveto
685.63 815.54 lineto stroke
673.17 809.54 moveto
685.63 809.54 lineto stroke
679.40 803.54 1.000000 4n
675.72 814.79 moveto
675.72 776.10 lineto stroke
690.17 794.54 1.000000 4n
686.49 793.79 moveto
686.49 776.10 lineto stroke
newpath
625.46 777.60 moveto
686.84 777.60 lineto
686.84 774.60 lineto
625.46 774.60 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
629.49 734.54 1.000000 4n
0.70 setlinewidth
633.17 735.29 moveto
633.17 755.54 lineto stroke
646.90 731.54 0.750000 gclef
659.27 728.54 1.000000 4n
659.27 713.54 1.000000 4n
653.04 713.54 moveto
665.51 713.54 lineto stroke
653.04 719.54 moveto
665.51 719.54 lineto stroke
662.96 714.29 moveto
662.96 749.54 lineto stroke
679.40 734.54 1.000000 4n
679.40 728.54 1.000000 4n
683.08 729.29 moveto
683.08 755.54 lineto stroke
restore
%  S_BAR
123 linenum
0.70 setlinewidth
702.22 803.54 moveto
702.22 779.54 lineto stroke
702.22 749.54 moveto
702.22 725.54 lineto stroke
%  S_CHHEAD
126 linenum
%  S_STAFF
% staff 1
save
714.77 815.54 1.000000 2n
708.32 815.54 moveto
721.22 815.54 lineto stroke
708.32 809.54 moveto
721.22 809.54 lineto stroke
714.77 800.54 1.000000 2n
714.77 794.54 1.000000 2n
710.87 814.79 moveto
710.87 773.54 lineto stroke
restore
%  S_STAFF
% staff 2
save
714.77 731.54 1.000000 2n
714.77 719.54 1.000000 2n
0.70 setlinewidth
708.32 719.54 moveto
721.22 719.54 lineto stroke
718.67 720.29 moveto
718.67 752.54 lineto stroke
restore
%  S_BAR
128 linenum
743.02 794.54 1.000000 dot
743.02 788.54 1.000000 dot
747.02 803.54 moveto
747.02 779.54 lineto stroke
3.00 setlinewidth
751.02 803.54 moveto
751.02 779.54 lineto stroke
0.70 setlinewidth
743.02 740.54 1.000000 dot
743.02 734.54 1.000000 dot
747.02 749.54 moveto
747.02 725.54 lineto stroke
3.00 setlinewidth
751.02 749.54 moveto
751.02 725.54 lineto stroke
0.70 setlinewidth
%  S_SSV
130 linenum
%  S_SSV
134 linenum
%  S_CLEFSIG
140 linenum
733.49 743.54 0.750000 fclef
758.77 791.54 1.000000 flat
764.26 800.54 1.000000 flat
758.77 731.54 1.000000 flat
764.26 740.54 1.000000 flat
%  S_FEED
140 linenum
50.50 640.03 768.00 5 1.000000 1.000000 staff
/Times-Roman findfont
11 scalefont
setfont
55.00 667.15 moveto
(19) show
50.50 565.46 768.00 5 1.000000 1.000000 staff
49.50 652.03 553.46 brace
50.50 652.03 moveto
50.50 553.46 lineto stroke
%  S_CLEFSIG
140 linenum
62.29 634.03 1.000000 gclef
62.54 571.46 1.000000 fclef
78.33 640.03 1.000000 flat
83.82 649.03 1.000000 flat
78.33 559.46 1.000000 flat
83.82 568.46 1.000000 flat
%  S_CHHEAD
140 linenum
%  S_STAFF
% staff 1
save
103.97 652.03 1.000000 4n
100.29 651.28 moveto
100.29 631.03 lineto stroke
restore
%  S_STAFF
% staff 2
save
103.97 565.46 1.000000 4rest
restore
%  S_BAR
142 linenum
0.70 setlinewidth
124.38 652.03 moveto
124.38 628.03 lineto stroke
124.38 577.46 moveto
124.38 553.46 lineto stroke
%  S_CHHEAD
145 linenum
%  S_STAFF
% staff 1
save
133.08 652.03 1.000000 4n
129.40 651.28 moveto
129.40 635.51 lineto stroke
144.16 667.03 1.000000 4n
137.93 664.03 moveto
150.39 664.03 lineto stroke
137.93 658.03 moveto
148.39 658.03 lineto stroke
140.48 666.28 moveto
140.48 635.51 lineto stroke
155.24 658.03 1.000000 4n
150.51 658.03 moveto
159.97 658.03 lineto stroke
151.56 657.28 moveto
151.56 635.51 lineto stroke
166.32 664.03 1.000000 4n
160.09 664.03 moveto
172.55 664.03 lineto stroke
162.09 658.03 moveto
170.55 658.03 lineto stroke
162.64 663.28 moveto
162.64 635.51 lineto stroke
177.40 661.03 1.000000 4n
172.66 658.03 moveto
183.63 658.03 lineto stroke
173.71 660.28 moveto
173.71 635.51 lineto stroke
189.31 655.03 1.000000 4n
185.63 654.28 moveto
185.63 635.51 lineto stroke
newpath
129.05 637.01 moveto
185.98 637.01 lineto
185.98 634.01 lineto
129.05 634.01 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
133.08 559.46 1.000000 4n
0.70 setlinewidth
136.77 560.21 moveto
136.77 580.46 lineto stroke
155.24 586.46 1.000000 4n
149.01 583.46 moveto
161.47 583.46 lineto stroke
155.24 580.46 1.000000 4n
155.24 571.46 1.000000 4n
158.92 572.21 moveto
158.92 601.46 lineto stroke
177.40 586.46 1.000000 4n
171.16 583.46 moveto
183.63 583.46 lineto stroke
177.40 580.46 1.000000 4n
177.40 571.46 1.000000 4n
181.08 572.21 moveto
181.08 601.46 lineto stroke
restore
%  S_BAR
147 linenum
0.70 setlinewidth
202.88 652.03 moveto
202.88 628.03 lineto stroke
202.88 577.46 moveto
202.88 553.46 lineto stroke
%  S_CHHEAD
151 linenum
%  S_STAFF
% staff 1
save
212.95 652.03 1.000000 4n
222.22 655.03 1.000000 dot
209.27 651.28 moveto
209.27 631.03 lineto stroke
241.95 652.03 1.000000 4n
238.27 651.28 moveto
238.27 632.53 lineto stroke
253.03 652.03 1.000000 4n
249.35 651.28 moveto
249.35 632.53 lineto stroke
264.94 652.03 1.000000 4n
261.26 651.28 moveto
261.26 632.53 lineto stroke
newpath
237.92 634.03 moveto
261.61 634.03 lineto
261.61 631.03 lineto
237.92 631.03 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
212.95 559.46 1.000000 4n
0.70 setlinewidth
216.63 560.21 moveto
216.63 580.46 lineto stroke
231.05 586.46 1.000000 4n
224.82 583.46 moveto
237.28 583.46 lineto stroke
231.05 580.46 1.000000 4n
231.05 571.46 1.000000 4n
234.73 572.21 moveto
234.73 601.46 lineto stroke
253.03 586.46 1.000000 4n
246.80 583.46 moveto
259.26 583.46 lineto stroke
253.03 580.46 1.000000 4n
253.03 571.46 1.000000 4n
256.71 572.21 moveto
256.71 601.46 lineto stroke
restore
%  S_BAR
153 linenum
0.70 setlinewidth
278.51 652.03 moveto
278.51 628.03 lineto stroke
278.51 577.46 moveto
278.51 553.46 lineto stroke
%  S_CHHEAD
157 linenum
%  S_STAFF
% staff 1
save
287.22 652.03 1.000000 4n
290.90 652.78 moveto
290.90 699.27 lineto stroke
298.29 661.03 1.000000 4n
292.06 658.03 moveto
303.03 658.03 lineto stroke
301.98 661.78 moveto
301.98 699.27 lineto stroke
309.37 667.03 1.000000 4n
303.14 664.03 moveto
314.10 664.03 lineto stroke
305.14 658.03 moveto
313.60 658.03 lineto stroke
313.05 667.78 moveto
313.05 699.27 lineto stroke
320.45 673.03 1.000000 4n
314.22 670.03 moveto
325.18 670.03 lineto stroke
316.22 664.03 moveto
324.68 664.03 lineto stroke
316.22 658.03 moveto
324.68 658.03 lineto stroke
324.13 673.78 moveto
324.13 699.27 lineto stroke
331.53 682.03 1.000000 4n
325.29 682.03 moveto
337.76 682.03 lineto stroke
325.29 676.03 moveto
337.76 676.03 lineto stroke
327.29 670.03 moveto
337.76 670.03 lineto stroke
327.29 664.03 moveto
337.76 664.03 lineto stroke
327.29 658.03 moveto
337.76 658.03 lineto stroke
335.21 682.78 moveto
335.21 699.27 lineto stroke
343.44 640.03 1.000000 4n
347.13 640.78 moveto
347.13 699.27 lineto stroke
newpath
290.55 700.77 moveto
347.48 700.77 lineto
347.48 697.77 lineto
290.55 697.77 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
287.22 559.46 1.000000 4n
0.70 setlinewidth
290.90 560.21 moveto
290.90 580.46 lineto stroke
309.37 586.46 1.000000 4n
303.14 583.46 moveto
315.60 583.46 lineto stroke
309.37 580.46 1.000000 4n
309.37 571.46 1.000000 4n
313.05 572.21 moveto
313.05 601.46 lineto stroke
331.53 586.46 1.000000 4n
325.29 583.46 moveto
337.76 583.46 lineto stroke
331.53 580.46 1.000000 4n
331.53 571.46 1.000000 4n
335.21 572.21 moveto
335.21 601.46 lineto stroke
restore
%  S_BAR
159 linenum
0.70 setlinewidth
357.01 652.03 moveto
357.01 628.03 lineto stroke
357.01 577.46 moveto
357.01 553.46 lineto stroke
%  S_CHHEAD
163 linenum
%  S_STAFF
% staff 1
save
372.55 640.03 1.000000 4n
364.10 640.03 1.000000 nat
368.87 639.28 moveto
368.87 620.24 lineto stroke
383.71 643.03 1.000000 4n
380.03 642.28 moveto
380.03 622.32 lineto stroke
394.79 640.03 1.000000 8rest
405.79 631.03 1.000000 4n
409.47 631.78 moveto
409.47 650.53 lineto stroke
416.87 631.03 1.000000 4n
420.55 631.78 moveto
420.55 650.53 lineto stroke
428.78 631.03 1.000000 4n
432.46 631.78 moveto
432.46 650.53 lineto stroke
newpath
368.52 621.74 moveto
380.38 623.82 lineto
380.38 620.82 lineto
368.52 618.74 lineto
closepath
fill
newpath
409.12 652.03 moveto
432.81 652.03 lineto
432.81 649.03 lineto
409.12 649.03 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
372.55 550.46 1.000000 4n
0.70 setlinewidth
376.24 551.21 moveto
376.24 571.46 lineto stroke
394.79 589.46 1.000000 4n
388.56 589.46 moveto
401.02 589.46 lineto stroke
388.56 583.46 moveto
401.02 583.46 lineto stroke
394.79 577.46 1.000000 4n
394.79 571.46 1.000000 4n
398.47 572.21 moveto
398.47 604.46 lineto stroke
416.87 589.46 1.000000 4n
410.63 589.46 moveto
423.10 589.46 lineto stroke
410.63 583.46 moveto
423.10 583.46 lineto stroke
416.87 577.46 1.000000 4n
416.87 571.46 1.000000 4n
420.55 572.21 moveto
420.55 604.46 lineto stroke
restore
%  S_BAR
165 linenum
0.70 setlinewidth
442.35 652.03 moveto
442.35 628.03 lineto stroke
442.35 577.46 moveto
442.35 553.46 lineto stroke
%  S_CHHEAD
169 linenum
%  S_STAFF
% staff 1
save
451.05 631.03 1.000000 4n
454.74 631.78 moveto
454.74 652.98 lineto stroke
462.13 637.03 1.000000 4n
465.81 637.78 moveto
465.81 656.99 lineto stroke
473.21 637.03 1.000000 4n
469.53 636.28 moveto
469.53 618.10 lineto stroke
484.29 643.03 1.000000 4n
480.61 642.28 moveto
480.61 621.49 lineto stroke
495.37 643.03 1.000000 4n
491.68 642.28 moveto
491.68 623.15 lineto stroke
507.28 649.03 1.000000 4n
503.60 648.28 moveto
503.60 627.18 lineto stroke
newpath
454.39 654.48 moveto
466.16 658.49 lineto
466.16 655.49 lineto
454.39 651.48 lineto
closepath
fill
newpath
469.18 619.60 moveto
480.96 622.99 lineto
480.96 619.99 lineto
469.18 616.60 lineto
closepath
fill
newpath
491.33 624.65 moveto
503.95 628.68 lineto
503.95 625.68 lineto
491.33 621.65 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
451.05 550.46 1.000000 4n
0.70 setlinewidth
454.74 551.21 moveto
454.74 571.46 lineto stroke
473.21 589.46 1.000000 4n
466.98 589.46 moveto
479.44 589.46 lineto stroke
466.98 583.46 moveto
479.44 583.46 lineto stroke
473.21 583.46 1.000000 4n
466.98 583.46 moveto
479.44 583.46 lineto stroke
473.21 571.46 1.000000 4n
476.89 572.21 moveto
476.89 604.46 lineto stroke
495.37 589.46 1.000000 4n
489.13 589.46 moveto
501.60 589.46 lineto stroke
489.13 583.46 moveto
501.60 583.46 lineto stroke
495.37 583.46 1.000000 4n
489.13 583.46 moveto
501.60 583.46 lineto stroke
495.37 571.46 1.000000 4n
499.05 572.21 moveto
499.05 604.46 lineto stroke
restore
%  S_BAR
171 linenum
0.70 setlinewidth
520.85 652.03 moveto
520.85 628.03 lineto stroke
520.85 577.46 moveto
520.85 553.46 lineto stroke
%  S_CHHEAD
175 linenum
%  S_STAFF
% staff 1
save
537.04 649.03 1.000000 4n
528.27 649.03 1.000000 flat
533.36 648.28 moveto
533.36 628.03 lineto stroke
536.38 628.03 1.000000 upflag
548.30 664.03 1.000000 4n
542.06 664.03 moveto
554.53 664.03 lineto stroke
542.06 658.03 moveto
554.53 658.03 lineto stroke
544.61 663.28 moveto
544.61 640.03 lineto stroke
570.28 658.03 1.000000 4n
564.04 658.03 moveto
576.51 658.03 lineto stroke
566.59 657.28 moveto
566.59 637.62 lineto stroke
581.35 652.03 1.000000 4n
577.67 651.28 moveto
577.67 634.68 lineto stroke
593.27 649.03 1.000000 4n
589.59 648.28 moveto
589.59 631.50 lineto stroke
newpath
566.24 639.12 moveto
589.94 633.00 lineto
589.94 630.00 lineto
566.24 636.12 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
537.04 550.46 1.000000 4n
0.70 setlinewidth
540.72 551.21 moveto
540.72 571.46 lineto stroke
559.37 583.46 1.000000 4n
553.14 583.46 moveto
565.61 583.46 lineto stroke
559.37 577.46 1.000000 4n
559.37 571.46 1.000000 4n
563.06 572.21 moveto
563.06 598.46 lineto stroke
581.35 583.46 1.000000 4n
575.12 583.46 moveto
587.58 583.46 lineto stroke
581.35 577.46 1.000000 4n
581.35 571.46 1.000000 4n
585.03 572.21 moveto
585.03 598.46 lineto stroke
restore
%  S_BAR
177 linenum
0.70 setlinewidth
606.84 652.03 moveto
606.84 628.03 lineto stroke
606.84 577.46 moveto
606.84 553.46 lineto stroke
%  S_CHHEAD
181 linenum
%  S_STAFF
% staff 1
save
615.37 646.03 1.000000 4n
611.69 645.28 moveto
611.69 628.06 lineto stroke
625.44 667.03 1.000000 4n
619.20 664.03 moveto
631.67 664.03 lineto stroke
619.20 658.03 moveto
629.67 658.03 lineto stroke
621.75 666.28 moveto
621.75 631.72 lineto stroke
635.50 661.03 1.000000 4n
630.77 658.03 moveto
641.73 658.03 lineto stroke
631.82 660.28 moveto
631.82 635.39 lineto stroke
645.56 652.03 1.000000 4n
641.88 651.28 moveto
641.88 631.66 lineto stroke
655.63 646.03 1.000000 4n
651.95 645.28 moveto
651.95 628.00 lineto stroke
665.69 640.03 1.000000 4n
662.01 639.28 moveto
662.01 624.33 lineto stroke
675.76 637.03 1.000000 4n
672.07 636.28 moveto
672.07 619.06 lineto stroke
685.82 655.03 1.000000 4n
682.14 654.28 moveto
682.14 622.72 lineto stroke
696.38 652.03 1.000000 4n
692.70 651.28 moveto
692.70 626.57 lineto stroke
/NewCenturySchlbk-BoldItalic findfont
11 scalefont
setfont
618.59 619.22 moveto
(3) show
/NewCenturySchlbk-BoldItalic findfont
11 scalefont
setfont
648.78 615.50 moveto
(3) show
/NewCenturySchlbk-BoldItalic findfont
11 scalefont
setfont
679.22 610.31 moveto
(3) show
newpath
611.34 629.56 moveto
632.17 636.89 lineto
632.17 633.89 lineto
611.34 626.56 lineto
closepath
fill
newpath
641.53 633.16 moveto
662.36 625.83 lineto
662.36 622.83 lineto
641.53 630.16 lineto
closepath
fill
newpath
671.72 620.56 moveto
693.05 628.07 lineto
693.05 625.07 lineto
671.72 617.56 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
615.37 559.46 1.000000 4n
0.70 setlinewidth
619.05 560.21 moveto
619.05 580.46 lineto stroke
645.56 586.46 1.000000 4n
639.33 583.46 moveto
651.80 583.46 lineto stroke
645.56 580.46 1.000000 4n
641.88 585.71 moveto
641.88 559.46 lineto stroke
675.76 589.46 1.000000 4n
669.52 589.46 moveto
681.99 589.46 lineto stroke
669.52 583.46 moveto
681.99 583.46 lineto stroke
675.76 571.46 1.000000 4n
672.07 588.71 moveto
672.07 550.46 lineto stroke
restore
%  S_BAR
183 linenum
0.70 setlinewidth
707.39 652.03 moveto
707.39 628.03 lineto stroke
707.39 577.46 moveto
707.39 553.46 lineto stroke
%  S_CHHEAD
186 linenum
%  S_STAFF
% staff 1
save
717.46 640.03 1.000000 4n
713.78 639.28 moveto
713.78 619.03 lineto stroke
737.59 640.03 1.000000 4rest
restore
%  S_STAFF
% staff 2
save
717.46 586.46 1.000000 4n
0.70 setlinewidth
711.23 583.46 moveto
723.69 583.46 lineto stroke
717.46 580.46 1.000000 4n
713.78 585.71 moveto
713.78 559.46 lineto stroke
737.59 559.46 1.000000 4n
741.27 560.21 moveto
741.27 580.46 lineto stroke
restore
%  S_CURVE
188 linenum
103.97 657.28 moveto
103.93 657.48 lineto
108.53 659.76 113.40 660.89 118.53 660.89 curveto
123.66 660.89 128.53 659.76 133.13 657.48 curveto
133.04 657.08 lineto
128.36 658.80 123.52 659.66 118.53 659.66 curveto
113.54 659.66 108.70 658.80 104.01 657.08 curveto
fill
%  S_BAR
189 linenum
758.50 643.03 1.000000 dot
758.50 637.03 1.000000 dot
762.50 652.03 moveto
762.50 628.03 lineto stroke
3.00 setlinewidth
766.50 652.03 moveto
766.50 628.03 lineto stroke
0.70 setlinewidth
758.50 568.46 1.000000 dot
758.50 562.46 1.000000 dot
762.50 577.46 moveto
762.50 553.46 lineto stroke
3.00 setlinewidth
766.50 577.46 moveto
766.50 553.46 lineto stroke
0.70 setlinewidth
%  Printing header/footer
/Times-Roman findfont
12 scalefont
setfont
348.82 998.35 moveto
(Kaleidakustikon Layer 2) show
/Times-Roman findfont
12 scalefont
setfont
408.00 985.61 moveto
showpage
restore
%%Trailer
%%DocumentFonts: /Times-Roman /NewCenturySchlbk-Bold /NewCenturySchlbk-BoldItalic /Mfont0 
%%Pages: 1

%!PS-Adobe-1.0
%%Creator: Mup (Version 6.1)
%%Title: music:  from kaleidakustikon_10.mup
%%CreationDate: Thu Jun 6 15:15:55 2013
%%Pages: (atend)
%%DocumentFonts: (atend)
%%BoundingBox: 0 0 612 792
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
% Mup prolog Copyright (c) 1995, 1996, 1997, 1998, 1999, 2000, 2003, 2004,
% 2008, 2009, 2012 by Arkkra Enterprises
% All rights reserved

% Mup PostScript Prolog 6.1 for use with Mup 6.1

% lwid is used as the width of a standard (thin) line in the music
% character definitions.
/lwid 70 def
/halflwid lwid 2 div def

% Define the following for use in do_upshortnote, do_dnshortnote, and
% do_shortrest; it has to be done outside of the music font definition.
/utildict 10 dict def
utildict begin
	/setnumflags	{	/numflags	exch def } def
	/sethooksm1	{	/hooksm1	exch def } def
	/setoffsets	{	/offsets	exch def } def
	/setx		{	/x		exch def } def
	/sety		{	/y		exch def } def
end

% Define a music character font.  Each music character is defined as if it
% were a normal ASCII character in a strange font where "A" looks like a
% treble clef, "B" looks like a bass clef, etc.

/mfont0 100 dict def
mfont0 begin
	/FontType 3 def
	/FontMatrix [ .001 0 0 0.001 0 0 ] def
	/FontBBox [ -2000 -4030 2000 4030 ] def
	/FontName (Mfont0) def

	% set up Encoding vector with standard names
	/Encoding 256 array def
	StandardEncoding Encoding copy
	pop

	% the following definitions are used for quarter rests
	/topx -170 def /topy 950 def
	/cor1x 250 def /cor1y 450 def
	/cor2x -300 def /cor2y 200 def
	/cor3x 250 def /cor3y -400 def

	% the following definitions are used for double sharps
	/limit 300 halflwid add def
	/off 70 def
	/inbendsmall limit 200 sub def
	/inbendbig limit 20 sub def
	/outbendsmall 100 def
	/outbendbig outbendsmall off add def

	%%%%% define routines that will be used by multiple characters %%%%%
	/do_1n {
		gsave
		newpath -10 rotate 1.6 1 scale
		0 0 325 0 360 arc		%outer ellipse
		1 1.6 div 1 scale 10 rotate	%back to original
		35 rotate 0.85 1.1 scale
		0 0 275 0 360 arc		%inner ellipse
		eofill
		grestore
	} def
	/do_upflag {
		-315 0 moveto
		-300 100 -100 480 0 600 curveto
		300 960 350 1500 200 1700 curveto
		130 1700 lineto
		350 1200 50 650 -315 600 curveto
		fill
	} def
	/do_flat {
		-250 -400 moveto	%outer edge of loop
		500 0 350 650 -250 160 curveto
		-250 160 lwid sub lineto %inner edge of loop
		100 400 300 0 -250 -400 lwid add curveto
		fill

		lwid setlinewidth	%stem
		-250 1100 moveto -250 -400 lineto stroke
	} def
	/do_diamond {
		newpath
		420 0 moveto 0 300 lineto -420 0 lineto
		0 -300 lineto closepath
		259 -29 moveto -41 185 lineto -259 29 lineto
		41 -185 lineto closepath
		eofill
	} def
	/do_2n {
		gsave
		newpath 25 rotate 1.4 1 scale
		0 0 315 0 360 arc		%outer ellipse
		1 1.4 div 1 scale		%back to original
		1.3 0.5 scale
		0 0 310 0 360 arc		%inner ellipse
		eofill
		grestore
	} def
	/do_4n {
		gsave
		newpath 25 rotate 1.35 1 scale
		0 0 310 0 360 arc fill
		grestore
	} def
	/do_com {
		newpath
		330 250 150 0 360 arc fill	%knob at upper right
		465 300 moveto			%outer boundary
		410 500 200 635 0 635 curveto
		-750 635 -750 -635 0 -635 curveto
		350 -635 480 -300 500 -100 curveto
		430 -100 lineto			%inner boundary
		380 -300 250 -565 0 -565 curveto
		-450 -565 -450 565 0 565 curveto
		200 565 370 350 395 300 curveto
		fill
	} def
	/do_ferm {
		0 0 800 lwid sub 0 180 arc	%inner arc
		-800 0 lineto
		0 270 lwid sub 800 180 0 arcn	%outer arc
		800 0 lineto fill
		0 120 120 0 360 arc fill	%the dot
	} def
	/do_mor {
		gsave
		0.7 1 scale	%scrunch the following horizontally
		45 rotate	%to pretend all lines horz or vertical
		0 1 1 {
			pop	%we don't need the loop variable
			%one half of the mordent
			0 40 moveto 350 40 lineto 350 -460 lineto
			750 -460 lineto 750 -540 lineto
			150 -540 lineto 150 -40 lineto
			0 -40 lineto fill
			180 rotate	%to do the other half
		} for
		grestore
	} def
	/do_turn {
		gsave
		0 1 1 {
			pop	%we don't need the loop variable
			0 -100 moveto	%outer boundary
			200 -400 625 -400 625 0 curveto
			625 200 500 325 300 325 curveto
			300 185 lineto	%inner boundary
			450 255 555 150 555 0 curveto
			555 -350 250 -250 0 100 curveto
			fill
			300 255 70 0 360 arc fill %knob on end
			180 rotate	%to do the other half
		} for
		grestore
	} def

	/do_upshortnote {
		utildict begin
		setnumflags		%set numflags from the stack
		gsave
		-330 0 translate	%half a flag width
		do_4n			%do a quarter note head
		lwid setlinewidth
		370 0 moveto
		370 2100 numflags 2 sub flagsep mul add lineto stroke
		670 2100 numflags 2 sub flagsep mul add translate
		1 -1 scale		%reflect across X axis
		0 1 numflags 1 sub {
			do_upflag	%do an upflag
			pop		%we don't need the loop variable
			0 flagsep translate
		} for
		grestore
		end
	} def

	/do_dnshortnote {
		utildict begin
		setnumflags		%set numflags from the stack
		do_4n			%do a quarter note head
		lwid setlinewidth
		-370 0 moveto
		-370 -2100 numflags 2 sub flagsep mul sub lineto stroke
		gsave
		-70 -2100 numflags 2 sub flagsep mul sub translate
		0 1 numflags 1 sub {
			do_upflag	%do an upflag
			pop		%we don't need the loop variable
			0 flagsep translate
		} for
		grestore
		end
	} def

	/do_shortrest {
		utildict begin
		sety setx setoffsets sethooksm1	%set variable from the stack
		gsave
		-105.8 offsets mul -600 offsets mul translate
		0 1 hooksm1 {		%loop once per hook
			newpath
			1 setlinewidth
			gsave
			1 1.2 scale
			-150 300 1.2 div 140 0 360 arc fill 	%the dot
			grestore
			lwid setlinewidth
			-50 700 550 255 315 arc		%rest of the hook
			hooksm1 lt { stroke 105.8 600 translate } if
		} for
		x y lineto stroke
		grestore
		end
	} def


	% subsidiary dictionary of character definitions
	/CharStrings 128 dict def
	CharStrings begin

		/.notdef {} def

		% Here are the definitions of the characters.  A stepsize here
		% is 300 units (assuming the character is drawn at its default
		% size).

		% gclef
		/A {
			newpath
			%start with inner curl, inside boundary
			-50 -300 moveto
			-450 600 700 700 750 0 curveto
			750 -800 -700 -800 -700 200 curveto
			-700 900 500 1400 520 2250 curveto
			520 2900 300 3000 200 3000 curveto
			100 3000 -400 2500 -200 1800 curveto
			350 -600 lineto
			720 -1600 0 -1650 -400 -1400 curveto

			%go back to start, drawing the other boundary
			-400 -1480 lineto
			0 -1700 800 -1700 430 -600 curveto
			-120 1800 lineto
			-300 2400 200 2800 250 2800 curveto
			400 2800 430 2700 430 2450 curveto
			430 1800 -900 1200 -900 300 curveto
			-750 -900 800 -900 850 0 curveto
			900 1100 -750 900 -120 -300 curveto fill

			%circle at the bottom
			-300 -1250 250 0 360 arc fill
		} def

		% fclef
		/B {
			newpath
			%start with outside boundary, at bottom
			-1000 -1700 moveto
			100 -1100 500 -600 450 0 curveto
			450 850 -1100 850 -950 0 curveto

			%go back to start, drawing the other boundary
			-880 0 lineto
			-920 400 -600 560 -300 560 curveto
			0 560 150 400 150 0 curveto
			150 -400 100 -900 -1000 -1620 curveto fill

			%circle at the left
			newpath
			-700 0 250 0 360 arc fill

			%do the two dots after the main curve
			700 -300 100 0 360 arc fill
			700 300 100 0 360 arc fill
		} def

		% cclef
		/C {
			gsave
			%do upper curved part, then scale to do mirror image
			0 1 1 {
				pop	%we don't need the loop variable
				%outer boundary of curve
				-170 0 moveto 100 300 lineto
				400 -200 750 300 750 650 curveto
				750 1100 450 1235 250 1235 curveto
				0 1235 -143 1100 -143 950 curveto

				%inner boundary of curve
				0 950 lineto
				0 1100 30 1165 250 1165 curveto
				300 1165 450 1100 450 650 curveto
				450 400 400 -100 100 400 curveto
				-270 0 lineto fill
				%stroke
				%-270 0 moveto 100 400 lineto
				%400 -100 450 400 450 650 curveto
				%450 1100 300 1165 250 1165 curveto
				%30 1165 0 1100 0 950 curveto
				%stroke

				%elliptical ball at end of curve
				gsave
				1.3 1 scale
				10 950 120 0 360 arc fill
				grestore
				1 -1 scale	%reflect across X axis
			} for
			grestore

			% two vertical lines on the left
			300 setlinewidth -600 -1200 halflwid sub moveto
			-600 1200 halflwid add lineto stroke
			lwid setlinewidth -300 -1200 halflwid sub moveto
			-300 1200 halflwid add lineto stroke
		} def

		% dblwhole
		/D {
			do_1n		%do a whole note
			lwid setlinewidth
			-490 -600 moveto -490 600 lineto stroke
			490 -600 moveto 490 600 lineto stroke
		} def

		% 1n
		/E {
			do_1n		%do a whole note
		} def

		% 2n
		/F {
			do_2n		%do a half note
		} def

		% 4n
		/G {
			do_4n		%do a quarter note head
		} def

		% upflag
		/H {
			do_upflag		%do an upflag
		} def

		% dnflag
		/I {
			gsave
			1 -1 scale	%reflect across X axis
			do_upflag		%do an upflag
			grestore
		} def

		% dwhrest
		/J {
			300 setlinewidth
			0 0 moveto 0 600 lineto stroke
		} def

		% 1rest
		/K {
			lwid setlinewidth
			-750 600 moveto 750 600 lineto stroke
			300 setlinewidth
			-400 450 moveto 400 450 lineto stroke
		} def

		% 2rest
		/L {
			lwid setlinewidth
			-750 0 moveto 750 0 lineto stroke
			300 setlinewidth
			-400 150 moveto 400 150 lineto stroke
		} def

		% 4rest
		/M {
			newpath
			cor3x cor3y halflwid add moveto
			%-400 -200 -450 -650 50 -950 lwid add curveto
			-450 -50 -450 -650 50 -950 lwid add curveto
			-150 -650 -100 -250 cor3x cor3y halflwid sub curveto
			fill

			cor1x cor1y moveto cor1x 200 sub cor1y 200 add lineto
			cor2x cor2y lineto cor2x 200 add cor2y 200 sub lineto
			fill

			lwid setlinewidth
			topx topy moveto cor1x cor1y lineto stroke
			cor2x cor2y moveto cor3x cor3y lineto stroke
		} def

		% 8rest
		/N {
			0 0 0 -600 do_shortrest
		} def

		% 16rest
		/O {
			1 1 100 -1200 do_shortrest
		} def

		% 32rest
		/P {
			2 1 0 -1800 do_shortrest
		} def

		% 64rest
		/Q {
			3 2 -80 -2100 do_shortrest
		} def

		% 128rest
		/R {
			4 2 -150 -2700 do_shortrest
		} def

		% 256rest
		/S {
			5 3 -280 -3300 do_shortrest
		} def

		% dot
		/T {
			newpath
			0 0 120 0 360 arc fill
		} def

		% nat
		/U {
			% fill crossbars so that we can do parallelograms
			-235 -470 moveto -235 -270 lineto
			235 -130 lineto 235 -330 lineto fill
			-235 130 moveto -235 330 lineto
			235 470 lineto 235 270 lineto fill

			% vertical strokes
			lwid setlinewidth
			-200 -380 moveto -200 850 lineto stroke
			200 -850 moveto 200 380 lineto stroke
		} def

		% sharp
		/V {
			% fill crossbars so that we can do parallelograms
			-325 -480 moveto -325 -280 lineto
			325 -120 lineto 325 -320 lineto fill
			-325 120 moveto -325 320 lineto
			325 480 lineto 325 280 lineto fill

			% vertical strokes
			lwid setlinewidth
			-150 -930 moveto -150 880 lineto stroke
			150 -880 moveto 150 930 lineto stroke
		} def

		% flat
		/W {
			do_flat		%do a flat
		} def

		% dblsharp
		/X {
			gsave
			0 1 3 {		%loop once for each of 4 sticks
				pop	%we don't need the loop variable
				0 off neg moveto
				outbendbig outbendsmall lineto
				inbendbig inbendsmall lineto
				limit limit lineto
				inbendsmall inbendbig lineto
				outbendsmall outbendbig lineto
				off neg 0 lineto
				fill
				-90 rotate
			} for
			grestore
		} def

		% dblflat
		/Y {
			-290 580 290 {	%loop once for each flat

				gsave
				1 setlinewidth
				0 translate	%translate left/right (loop var)
				do_flat		%do a flat
				grestore

			} for
		} def

		% xnote
		/Z {
			gsave
			1.15 1 scale 120 setlinewidth 1 setlinecap	%round
			-300 -300 moveto 300 300 lineto stroke
			-300 300 moveto 300 -300 lineto stroke
			grestore
		} def

		% dwhdiamond
		/a {
			do_diamond	%do a diamond
			lwid setlinewidth
			-420 -600 moveto -420 600 lineto stroke
			420 -600 moveto 420 600 lineto stroke
		} def

		% diamond
		/b {
			do_diamond	%do a diamond
		} def

		% filldiamond
		/c {
			420 0 moveto 0 300 lineto
			-420 0 lineto 0 -300 lineto fill
		} def

		% up2n
		/d {
			lwid setlinewidth
			380 0 moveto 380 2100 lineto stroke
			do_2n		%do a half note
		} def

		% dn2n
		/e {
			lwid setlinewidth
			-380 0 moveto -380 -2100 lineto stroke
			do_2n		%do a half note
		} def

		% up4n
		/f {
			do_4n		%do a quarter note head
			lwid setlinewidth
			370 0 moveto 370 2100 lineto stroke
		} def

		% dn4n
		/g {
			do_4n		%do a quarter note head
			lwid setlinewidth
			-370 0 moveto -370 -2100 lineto stroke
		} def

		% up8n
		/h {
			gsave
			-330 0 translate	% half a flag width
			do_4n		%do a quarter note head
			lwid setlinewidth
			370 0 moveto 370 2100 lineto stroke
			670 2100 translate
			1 -1 scale	%reflect across X axis
			do_upflag		%do an upflag
			grestore
		} def

		% dn8n
		/i {
			do_4n		%do a quarter note head
			lwid setlinewidth
			-370 0 moveto -370 -2100 lineto stroke
			gsave
			-70 -2100 translate
			do_upflag		%do an upflag
			grestore
		} def

		% up16n
		/j {
			2 do_upshortnote
		} def

		% dn16n
		/k {
			2 do_dnshortnote
		} def

		% up32n
		/l {
			3 do_upshortnote
		} def

		% dn32n
		/m {
			3 do_dnshortnote
		} def

		% up64n
		/n {
			4 do_upshortnote
		} def

		% dn64n
		/o {
			4 do_dnshortnote
		} def

		% up128n
		/p {
			5 do_upshortnote
		} def

		% dn128n
		/q {
			5 do_dnshortnote
		} def

		% up256n
		/r {
			6 do_upshortnote
		} def

		% dn256n
		/s {
			6 do_dnshortnote
		} def

		% com
		/t {
			do_com		%do a common time symbol
		} def

		% cut
		/u {
			do_com		%do a common time symbol
			lwid setlinewidth
			0 -900 moveto 0 900 lineto stroke
		} def

		% begped
		/v {
			lwid setlinewidth
			-200 600 moveto -200 0 lineto 200 0 lineto stroke
		} def

		% pedal
		/w {
			lwid setlinewidth
			-500 0 moveto -450 0 lineto 0 600 lineto
			450 0 lineto 500 0 lineto stroke
		} def

		% endped
		/x {
			lwid setlinewidth
			200 600 moveto 200 0 lineto -200 0 lineto stroke
		} def

		% dnbow
		/y {
			lwid setlinewidth
			-350 0 moveto -350 900 lineto stroke
			350 0 moveto 350 900 lineto stroke
			200 setlinewidth
			-350 800 moveto 350 800 lineto stroke
		} def

		% upbow
		/z {
			lwid setlinewidth
			-300 900 moveto 0 0 lineto 300 900 lineto stroke
		} def

		% wedge
		/one {
			0 0 moveto -150 500 lineto 150 500 lineto fill
		} def

		% uwedge
		/two {
			-150 0 moveto 150 0 lineto 0 500 lineto fill
		} def

		% ferm
		/three {
			newpath
			do_ferm		%do a right side up fermata
		} def

		% uferm
		/four {
			newpath
			gsave
			0 270 lwid sub 800 add translate %baseline at bottom
			180 rotate			%upside down
			do_ferm		%do a right side up fermata
			grestore
		} def

		% sign
		/five {
			gsave
			%do upper left curved part, upper right dot;
			%then rotate 180 to do other half
			0 1 1 {
				pop	%we don't need the loop variable
				0 100 moveto		%inner boundary
				-1000 300 -400 750 -200 700 curveto
				-200 800 lineto		%outer boundary
				-550 900 -1100 100 0 -100 curveto
				fill
				%dot at end of curve
				-200 700 100 0 360 arc fill
				%dot in upper right quadrant
				500 200 70 0 360 arc fill
				180 rotate
			} for
			grestore

			%slash through middle
			lwid setlinewidth
			-400 -800 moveto 400 800 lineto stroke
		} def

		% coda
		/six {
			newpath
			gsave
			0.6 1 scale
			0 0 550 0 360 arc	%outside boundary
			1 0.6 div 1 scale	%back to original
			0.9 1 scale
			0 0 650 0 360 arc	%inside boundary
			eofill
			grestore
			lwid setlinewidth
			0 -850 moveto 0 850 lineto stroke
			-800 0 moveto 800 0 lineto stroke
		} def

		% mor
		/seven {
			do_mor		%do a mordent
		} def

		% invmor
		/eight {
			do_mor		%do a mordent
			lwid setlinewidth
			0 -450 moveto 0 450 lineto stroke
		} def

		% turn
		/nine {
			do_turn		%do a turn
		} def

		% invturn
		/zero {
			gsave
			1 -1 scale	%reflect across X axis
			do_turn		%do a turn
			grestore
		} def

		% acc_gt
		/numbersign {
			lwid setlinewidth
			-500 300 moveto 500 0 lineto -500 -300 lineto stroke
		} def

		% acc_hat
		/dollar {
			newpath
			-365 0 moveto 0 860 lineto 365 0 lineto
			150 0 lineto -75 530 lineto -300 0 lineto fill
		} def

		% acc_uhat
		/quotedbl {
			newpath
			365 860 moveto 0 0 lineto -365 860 lineto
			-150 860 lineto 75 330 lineto 300 860 lineto fill
		} def

		% tr
		/asterisk {
			%vertical bar of t
			-350 1000 moveto -550 200 lineto
			-612.5 -50 -212.5 -50 -160 200 curveto
			-230 200 lineto
			-300 50 -420 50 -400 200 curveto
			-200 1000 lineto fill

			%crossbar of t and vertical bar of r
			-700 600 moveto -160 600 lineto
			20 600 30 520 60 440 curveto
			-50 0 lineto 70 0 lineto 180 440 lineto
			190 480 100 670 -150 670 curveto
			-690 670 lineto fill

			%horizontal curve of r
			100 480 moveto
			300 630 450 700 650 550 curveto
			560 480 lineto
			450 630 300 560 100 390 curveto
			fill

			%knob at end of r
			600 460 100 0 360 arc fill
		} def

		% leg
		/comma {
			100 setlinewidth
			-400 0 moveto 400 0 lineto stroke
		} def

		% rr
		/hyphen {
			100 setlinewidth
			-400 0 moveto 0 1000 lineto stroke
			0 0 moveto 400 1000 lineto stroke
		} def

		% measrpt
		/period {
			newpath -450 400 150 0 360 arc fill
			newpath 450 -400 150 0 360 arc fill
			200 setlinewidth
			-550 -600 moveto 550 600 lineto stroke
		} def

		% copyright
		/slash {
			lwid setlinewidth
			newpath 0 400 400 0 360 arc stroke
			newpath 0 400 200 45 315 arc stroke
		} def

		% dim
		/quoteleft {
			50 setlinewidth
			newpath 0 640 220 0 360 arc stroke
		} def

		% halfdim
		/quoteright {
			50 setlinewidth
			newpath 0 640 220 0 360 arc stroke
			newpath -340 300 moveto 340 980 lineto stroke
		} def

		% triangle
		/asciicircum {
			50 setlinewidth
			newpath -340 -10 moveto 0 710 lineto
			340 -10 lineto closepath stroke
		} def

		% qwhrest
		/ampersand {
			300 setlinewidth
			0 -600 moveto 0 600 lineto stroke
		} def

		% ll1rest
		/exclam {
			310 setlinewidth
			-400 455 moveto 400 450 lineto stroke
		} def

		% ll2rest
		/at {
			310 setlinewidth
			-400 145 moveto 400 150 lineto stroke
		} def
	end

	/BuildChar {

		exch begin
		Encoding exch get

		dup
		Mcbbox0 exch get
		aload pop setcachedevice

		CharStrings exch get
		exec
		end
	} def
end


% Define another music character font, since there are too many to fit in one
% font.  It works the same way as the first one.

/mfont1 100 dict def
mfont1 begin
	/FontType 3 def
	/FontMatrix [ .001 0 0 0.001 0 0 ] def
	/FontBBox [ -2000 -4030 2000 4030 ] def
	/FontName (Mfont1) def

	% set up Encoding vector with standard names
	/Encoding 256 array def
	StandardEncoding Encoding copy
	pop

	%%%%% define routines that will be used by multiple characters %%%%%

	/do_dwh_bars {
		% the two bars surrounding a double whole note
		lwid setlinewidth
		-420 -600 moveto -420 600 lineto stroke
		420 -600 moveto 420 600 lineto stroke
	} def
	/do_righttriangle {
		newpath
		420 270 moveto -420 270 lineto 350 -300 lineto 420 -300 lineto
		350 150 moveto -140 150 lineto 350 -213 lineto
		eofill
	} def
	/do_fillrighttriangle {
		newpath
		420 270 moveto -420 270 lineto 350 -300 lineto 420 -300 lineto
		fill
	} def
	/do_rectangle {
		newpath
		420 270 moveto -420 270 lineto -420 -270 lineto 420 -270 lineto
		350 150 moveto -350 150 lineto -350 -150 lineto 350 -150 lineto
		eofill
	} def
	/do_isostriangle {
		newpath
		0 300 moveto -420 -270 lineto 420 -270 lineto
		0 182 moveto -245 -150 lineto 245 -150 lineto
		eofill
	} def
	/do_piewedge {
		newpath
		0 -300 moveto 0 -244 514 35 145 arc
		0 -209 moveto 0 -244 394 43 137 arc
		eofill
	} def
	/do_semicircle {
		newpath
		gsave
		1 1.357 scale 420 199 moveto 0 199 420 180 360 arc
		1 1.09 scale 350 111 moveto 0 199 350 194.1 345.9 arc
		eofill
		grestore
	} def
	/do_slashhead {
		newpath
		lwid setlinewidth
		-620 -530 moveto -480 -670 lineto 620 530 lineto 480 670 lineto
		closepath stroke
	} def

	% subsidiary dictionary of character definitions
	/CharStrings 128 dict def
	CharStrings begin

		/.notdef {} def

		% Here are the definitions of the characters.  A stepsize here
		% is 300 units (assuming the character is drawn at its default
		% size).

		% dwhrighttriangle
		/A {
			do_righttriangle
			do_dwh_bars
		} def

		% righttriangle
		/B {
			do_righttriangle
		} def

		% fillrighttriangle
		/C {
			newpath
			420 270 moveto -420 270 lineto 350 -300 lineto
			420 -300 lineto
			fill
		} def

		% udwhrighttriangle
		/D {
			gsave
			180 rotate
			do_righttriangle
			do_dwh_bars
			grestore
		} def

		% urighttriangle
		/E {
			gsave
			180 rotate
			do_righttriangle
			grestore
		} def

		% ufillrighttriangle
		/F {
			gsave
			180 rotate
			do_fillrighttriangle
			grestore
		} def

		% dwhrectangle
		/G {
			do_rectangle
			do_dwh_bars
		} def

		% rectangle
		/H {
			do_rectangle
		} def

		% fillrectangle
		/I {
			newpath
			420 270 moveto -420 270 lineto -420 -270 lineto
			420 -270 lineto
			fill
		} def

		% dwhisostriangle
		/J {
			do_isostriangle
			do_dwh_bars
		} def

		% isostriangle
		/K {
			do_isostriangle
		} def

		% fillisostriangle
		/L {
			newpath
			0 300 moveto -420 -270 lineto 420 -270 lineto
			fill
		} def

		% dwhpiewedge
		/M {
			do_piewedge
			do_dwh_bars
		} def

		% piewedge
		/N {
			do_piewedge
		} def

		% fillpiewedge
		/O {
			newpath
			0 -300 moveto 0 -244 514 35 145 arc
			fill
		} def

		% dwhsemicircle
		/P {
			do_semicircle
			do_dwh_bars
		} def

		% semicircle
		/Q {
			do_semicircle
		} def

		% fillsemicircle
		/R {
			newpath
			gsave
			1 570 420 div scale
			420 199 moveto 0 199 420 180 360 arc
			fill
			grestore
		} def

		% dwhslashhead
		/S {
			do_slashhead
			lwid setlinewidth
			-650 -600 moveto -650 600 lineto stroke
			650 -600 moveto 650 600 lineto stroke
		} def

		% slashhead
		/T {
			do_slashhead
		} def

		% fillslashhead
		/U {
			newpath
			200 setlinewidth
			-550 -600 moveto 550 600 lineto stroke
		} def

		% blankhead
		/V {
			%print nothing
		} def
	end

	/BuildChar {

		exch begin
		Encoding exch get

		dup
		Mcbbox1 exch get
		aload pop setcachedevice

		CharStrings exch get
		exec
		end
	} def
end


% General routines for printing any music character, invoked by each music
% character's specific routine below.  The scaling factor (default 1) needs
% to be multiplied by 10 to get the actual size.  These routines restore the
% preexisting current font when they are done.

/printmchar0 {
	gsave
	/musicchar exch def
	/Mfont0 findfont exch 10 mul scalefont setfont moveto 
	musicchar show
	grestore
} def
/printmchar1 {
	gsave
	/musicchar exch def
	/Mfont1 findfont exch 10 mul scalefont setfont moveto 
	musicchar show
	grestore
} def

% Define each music character name to be a routine that prints the character.
% Each character is to be invoked as in this example:
%	100 200 1 gclef		% at (100, 200), scale to default size & print

/gclef			{ (A) printmchar0 } def
/fclef			{ (B) printmchar0 } def
/cclef			{ (C) printmchar0 } def
/dblwhole		{ (D) printmchar0 } def
/1n			{ (E) printmchar0 } def
/2n			{ (F) printmchar0 } def
/4n			{ (G) printmchar0 } def
/upflag			{ (H) printmchar0 } def
/dnflag			{ (I) printmchar0 } def
/dwhrest		{ (J) printmchar0 } def
/1rest			{ (K) printmchar0 } def
/2rest			{ (L) printmchar0 } def
/4rest			{ (M) printmchar0 } def
/8rest			{ (N) printmchar0 } def
/16rest			{ (O) printmchar0 } def
/32rest			{ (P) printmchar0 } def
/64rest			{ (Q) printmchar0 } def
/128rest		{ (R) printmchar0 } def
/256rest		{ (S) printmchar0 } def
/dot			{ (T) printmchar0 } def
/nat			{ (U) printmchar0 } def
/sharp			{ (V) printmchar0 } def
/flat			{ (W) printmchar0 } def
/dblsharp		{ (X) printmchar0 } def
/dblflat		{ (Y) printmchar0 } def
/xnote			{ (Z) printmchar0 } def
/dwhdiamond		{ (a) printmchar0 } def
/diamond		{ (b) printmchar0 } def
/filldiamond		{ (c) printmchar0 } def
/up2n			{ (d) printmchar0 } def
/dn2n			{ (e) printmchar0 } def
/up4n			{ (f) printmchar0 } def
/dn4n			{ (g) printmchar0 } def
/up8n			{ (h) printmchar0 } def
/dn8n			{ (i) printmchar0 } def
/up16n			{ (j) printmchar0 } def
/dn16n			{ (k) printmchar0 } def
/up32n			{ (l) printmchar0 } def
/dn32n			{ (m) printmchar0 } def
/up64n			{ (n) printmchar0 } def
/dn64n			{ (o) printmchar0 } def
/up128n			{ (p) printmchar0 } def
/dn128n			{ (q) printmchar0 } def
/up256n			{ (r) printmchar0 } def
/dn256n			{ (s) printmchar0 } def
/com			{ (t) printmchar0 } def
/cut			{ (u) printmchar0 } def
/begped			{ (v) printmchar0 } def
/pedal			{ (w) printmchar0 } def
/endped			{ (x) printmchar0 } def
/dnbow			{ (y) printmchar0 } def
/upbow			{ (z) printmchar0 } def
/wedge			{ (1) printmchar0 } def
/uwedge			{ (2) printmchar0 } def
/ferm			{ (3) printmchar0 } def
/uferm			{ (4) printmchar0 } def
/sign			{ (5) printmchar0 } def
/coda			{ (6) printmchar0 } def
/mor			{ (7) printmchar0 } def
/invmor			{ (8) printmchar0 } def
/turn			{ (9) printmchar0 } def
/invturn		{ (0) printmchar0 } def
/acc_gt			{ (#) printmchar0 } def
/acc_hat		{ ($) printmchar0 } def
/acc_uhat		{ (") printmchar0 } def
/tr			{ (*) printmchar0 } def
/leg			{ (,) printmchar0 } def
/rr			{ (-) printmchar0 } def
/measrpt		{ (.) printmchar0 } def
/copyright		{ (/) printmchar0 } def
/dim			{ (`) printmchar0 } def
/halfdim		{ (') printmchar0 } def
/triangle		{ (^) printmchar0 } def
/qwhrest		{ (&) printmchar0 } def
/ll1rest		{ (!) printmchar0 } def
/ll2rest		{ (@) printmchar0 } def
/dwhrighttriangle	{ (A) printmchar1 } def
/righttriangle		{ (B) printmchar1 } def
/fillrighttriangle	{ (C) printmchar1 } def
/udwhrighttriangle	{ (D) printmchar1 } def
/urighttriangle		{ (E) printmchar1 } def
/ufillrighttriangle	{ (F) printmchar1 } def
/dwhrectangle		{ (G) printmchar1 } def
/rectangle		{ (H) printmchar1 } def
/fillrectangle		{ (I) printmchar1 } def
/dwhisostriangle	{ (J) printmchar1 } def
/isostriangle		{ (K) printmchar1 } def
/fillisostriangle	{ (L) printmchar1 } def
/dwhpiewedge		{ (M) printmchar1 } def
/piewedge		{ (N) printmchar1 } def
/fillpiewedge		{ (O) printmchar1 } def
/dwhsemicircle		{ (P) printmchar1 } def
/semicircle		{ (Q) printmchar1 } def
/fillsemicircle		{ (R) printmchar1 } def
/dwhslashhead		{ (S) printmchar1 } def
/slashhead		{ (T) printmchar1 } def
/fillslashhead		{ (U) printmchar1 } def
/blankhead		{ (V) printmchar1 } def


% Define routines for Mup output other than music characters.

/stepsize 3 def	   % define a step size as 3 points (at default magnification)

% x1 y1 x2 lines dist staffscale staff
%		draw a staff starting at x1, y1 and extending to x2 with "lines"
%		lines, 2*dist*stepsize apart, scaled by staffscale
/staff {
	/staffscale exch def
	/dist exch def
	/lines exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	0.7 staffscale mul setlinewidth
	1 lines sub  2  lines 1 sub {	% loop from bottom line to top line
		dup stepsize mul staffscale mul dist mul y1 add x1 exch moveto
		stepsize mul staffscale mul dist mul y1 add x2 exch lineto stroke
	} for
} def

% x y1 y2 bracket	draw a bracket; y1 is the top
/bracket {
	/y2 exch def
	/y1 exch def
	/x exch def
	gsave
	3 setlinewidth
	x 2 sub y1 1 add moveto
	x 2 sub y2 1 sub lineto
	stroke
	x 2 sub y1 1 add moveto
	x 1 sub y1 1 add   x 3 add y1 1 add   x 5 add y1 6 add   curveto
	x 6 add y1 5 add lineto
	x 5 add y1 2 add   x 1 add y1 2 sub   x 2 sub y1 2 sub   curveto
	fill
	x 2 sub y2 1 sub moveto
	x 1 sub y2 1 sub   x 3 add y2 1 sub   x 5 add y2 6 sub   curveto
	x 6 add y2 5 sub lineto
	x 5 add y2 2 sub   x 1 add y2 2 add   x 2 sub y2 2 add   curveto
	fill
	grestore
} def

% x y1 y2 right repeatbracket	draw a bracket for a repeat; y1 is the top,
%				right==1 means facing to the right
/repeatbracket {
	/right exch def
	/y2 exch def
	/y1 exch def
	/x exch def
	gsave
	right 0 eq {
		x y1 y2 add 2 div translate
		180 rotate
		0 x sub 0 y1 y2 add 2 div sub translate
	} if
	x 4.5 sub y1 1 add moveto
	x 0 sub y1 1 add   x 2 add y1 1 add   x 6 add y1 5 add   curveto
	x 6 add y1 4 add lineto
	x 6 add y1 2 add   x 1 add y1 2 sub   x 4.5 sub y1 1.5 sub   curveto
	fill
	x 4.5 sub y2 1 sub moveto
	x 0 sub y2 1 sub   x 2 add y2 1 sub   x 6 add y2 5 sub   curveto
	x 6 add y2 4 sub lineto
	x 6 add y2 2 sub   x 1 add y2 2 add   x 4.5 sub y2 1.5 add   curveto
	fill
	grestore
} def

% x y1 y2 brace		draw a brace; y1 is the top
/brace {
	/y2 exch def
	/y1 exch def
	/x exch def
	gsave
	x 6 sub y1 y2 add 2 div translate
	/topy y1 y2 sub 2 div 1 sub def
	0.667 1 scale
	0 1 1 {
		pop
		%0 topy moveto 0 0 lineto stroke
		0 0 moveto
		16 topy 0.2 mul   -11 topy 0.6 mul   8 topy   curveto
		8.7 topy lineto
		-7 topy 0.7 mul   20 topy 0.3 mul   1 0   curveto
		fill
		1 -1 scale	% flip to do bottom half
	} for
	grestore
} def

% endx endy wavy staffscale	draw a wavy line from current point to here,
%				scaled by staffscale
/wavy {
	/staffscale exch def
	/endy exch def		% define the end point of the line
	/endx exch def
	currentpoint		% line starts at current point
	/begy exch def		% define the beginning point of the line
	/begx exch def
	gsave
	/dx endx begx sub def	% find delta x and delta y
	/dy endy begy sub def
	/r dx dx mul dy dy mul add sqrt def	% hypotenuse
	/theta dy dx atan def			% angle with positive x axis
	begx begy translate	% change axes so that we can draw the line
	theta rotate		%   from (0, 0) to (r, 0)
	staffscale staffscale scale	% scale everything by staffscale
	/scaledr r staffscale div def	% but scale r in reverse to keep length

	% Each outer loop draws one cycle of the squiggle.  It continues until
	% we are at or beyond the desired end point.
	0 0 moveto
	0 6 scaledr {
		gsave
		% first loop draws left half of squiggle; second draws right
		0 1 1 {
			0.0 0.4 moveto
			2.0 1.9 3.4 2.3 3.9 0.0 curveto
			2.1 0.0 lineto
			1.9 0.8 1.4 0.7 0.0 -0.4 curveto
			fill
			pop 180 rotate -6 0 translate
		} for
		grestore

		pop 6 0 translate	% shift axes right one squiggle
	} for

	grestore
} def

% x y space frets fretno numvert curvel curver [ f1 f2 f3 ... ] grid
%				print a guitar grid diagram
/grid {
	/grid_positions exch def % 0="o", -1="x", -2=nothing, positive=dot
	/curver exch def	% right string for curve, 0 if none
	/curvel exch def	% left string for curve, 0 if none
	/numvert exch def	% vertical position to print fretno, 0 if none
	/fretno exch def	% fret no. to print at right, 0 if none
	/frets exch def		% number of fret lines
	/space exch def		% points between two neighboring lines
	/y exch def		% y coord of top fret line
	/x exch def		% x coord of left strings

	gsave
	/strings grid_positions length def	% number of strings
	/lmarky 0.4 space mul y add def		% lowest Y of a "o" or "x"
	space 10 div setlinewidth
	2 setlinecap

	% draw the lines of the grid
	0  1  strings 1 sub {	% loop from left string to right string
		dup space mul x add y moveto
		space mul x add frets 1 sub space mul y exch sub lineto stroke
	} for
	0  -1  1 frets sub {	% loop from top fret (nut) to bottom fret
		dup space mul y add x exch moveto
		space mul y add strings 1 sub space mul x add exch lineto stroke
	} for

	% draw the curved line if there is one
	curvel 0 gt {
		% within strings curvel to curver, find smallest positive fret
		/minfret 1000 def
		curvel 1 curver {
			/strno exch def
			/grid_p grid_positions strno 1 sub get def
			grid_p 0 gt grid_p minfret lt and {
				/minfret grid_p def
			} if
		} for

		% if curve goes above top fret, other marks must be higher
		minfret 1 eq {
			/hmarky 1.2 space mul y add def
		} {
			/hmarky lmarky def
		} ifelse

		/strdiff curver curvel sub def
		space 8 div setlinewidth

		% set endpoint coords of curve; higher if curve is short
		/curvex1 curvel 1 sub space mul x add def
		/curvex2 curver 1 sub space mul x add def
		/curvey 1 minfret sub space mul y add def
		strdiff 3 lt {
			/curvey 0.2 strdiff div space mul curvey add def
		} if

		% move to left end, set other points, draw curve
		curvex1 curvey moveto

		curvex1 curvex2 curvex1 sub 3 div add
		curvey space 0.4 strdiff sqrt mul mul add

		curvex2 curvex2 curvex1 sub 3 div sub
		curvey space 0.4 strdiff sqrt mul mul add

		curvex2 curvey curveto stroke
	} if

	space 10 div setlinewidth

	% draw dots and x and o marks
	0  1  strings 1 sub {	% loop from left string to right string
		/strno exch def	% first string is 0
		/grid_p grid_positions strno get def
		/strx strno space mul x add def

		% set Y of mark higher if curved line covers this string
		strno 1 add curvel ge  strno 1 add curver le  and {
			/marky hmarky def
		} {
			/marky lmarky def
		} ifelse

		grid_p -1 eq {		% draw an X above the string
			/xhwid space 3 div def
			strx xhwid sub marky xhwid sub moveto
			strx xhwid add marky xhwid add lineto stroke
			strx xhwid sub marky xhwid add moveto
			strx xhwid add marky xhwid sub lineto stroke
		} if
		grid_p 0 eq {		% draw a circle above the string
			strx marky space 0.3 mul 0 360 arc stroke
		} if
		grid_p 1 ge {		% draw a dot by the proper fret
			strx y grid_p space mul sub space 3 div add
			space 3 div 0 360 arc fill
		} if
	} for

	% print "X fr" if requested
	fretno 0 gt {
		/Palatino-Roman findfont space 1.9 mul scalefont setfont
		x strings 0.5 sub space mul add
		y space numvert 0.3 add mul sub moveto
		fretno 2 string cvs show ( fr) show
	} if
	grestore
} def

% x1 y1 x2 y2 whitebox		draw a white rectangle with opposite
%				corners of (x1,y1) and (x2,y2)
/whitebox {
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	1.0 setgray
	newpath
	x1 y1 moveto
	x1 y2 lineto
	x2 y2 lineto
	x2 y1 lineto
	closepath
	fill
	stroke
	0.0 setgray
} def


/LineNum 0 def
/InputFile (unknown) def

% n linenum
/linenum {
	/LineNum exch def
} def

% (inputfilename) inputfile
/inputfile {
	/InputFile exch def
} def

% find size of Encoding and make a dictionary
% that size for bounding box information
mfont0 begin
/dictsize Encoding length def
mfont0 /Mcbbox0 dictsize dict put

% temporarily redefine printmchar0 to get code
5 dict begin
/printmchar0 { {} forall } def

Mcbbox0 Encoding gclef get [ 1790.0 0 -915.0 -1605.0 865.0 3015.0 ] put
Mcbbox0 Encoding fclef get [ 1840.0 0 -1015.0 -1705.0 815.0 655.0 ] put
Mcbbox0 Encoding cclef get [ 1540.0 0 -765.0 -1245.0 765.0 1255.0 ] put
Mcbbox0 Encoding dblwhole get [ 1090.0 0 -535.0 -605.0 545.0 615.0 ] put
Mcbbox0 Encoding 1n get [ 1080.0 0 -535.0 -335.0 535.0 345.0 ] put
Mcbbox0 Encoding 2n get [ 880.0 0 -435.0 -345.0 435.0 355.0 ] put
Mcbbox0 Encoding 4n get [ 840.0 0 -415.0 -335.0 415.0 345.0 ] put
Mcbbox0 Encoding upflag get [ 640.0 0 -335.0 -5.0 295.0 1715.0 ] put
Mcbbox0 Encoding dnflag get [ 640.0 0 -335.0 -1705.0 295.0 15.0 ] put
Mcbbox0 Encoding qwhrest get [ 340.0 0 -165.0 -605.0 165.0 615.0 ] put
Mcbbox0 Encoding dwhrest get [ 340.0 0 -165.0 -5.0 165.0 615.0 ] put
Mcbbox0 Encoding 1rest get [ 1540.0 0 -765.0 -15.0 765.0 645.0 ] put
Mcbbox0 Encoding 2rest get [ 1540.0 0 -765.0 -45.0 765.0 315.0 ] put
Mcbbox0 Encoding 4rest get [ 650.0 0 -345.0 -885.0 295.0 995.0 ] put
Mcbbox0 Encoding 8rest get [ 750.0 0 -305.0 -625.0 435.0 485.0 ] put
Mcbbox0 Encoding 16rest get [ 830.0 0 -415.0 -1215.0 405.0 485.0 ] put
Mcbbox0 Encoding 32rest get [ 940.0 0 -415.0 -1215.0 515.0 1085.0 ] put
Mcbbox0 Encoding 64rest get [ 1040.0 0 -515.0 -1515.0 515.0 1085.0 ] put
Mcbbox0 Encoding 128rest get [ 1140.0 0 -515.0 -1515.0 615.0 1685.0 ] put
Mcbbox0 Encoding 256rest get [ 1250.0 0 -625.0 -2115.0 615.0 1685.0 ] put
Mcbbox0 Encoding ll1rest get [ 840.0 0 -415.0 -15.0 415.0 625.0 ] put
Mcbbox0 Encoding ll2rest get [ 840.0 0 -415.0 -15.0 415.0 325.0 ] put
Mcbbox0 Encoding dot get [ 280.0 0 -135.0 -125.0 135.0 135.0 ] put
Mcbbox0 Encoding nat get [ 520.0 0 -255.0 -855.0 255.0 865.0 ] put
Mcbbox0 Encoding sharp get [ 700.0 0 -345.0 -935.0 345.0 945.0 ] put
Mcbbox0 Encoding flat get [ 580.0 0 -295.0 -405.0 275.0 1115.0 ] put
Mcbbox0 Encoding dblsharp get [ 720.0 0 -355.0 -345.0 355.0 355.0 ] put
Mcbbox0 Encoding dblflat get [ 1160.0 0 -585.0 -405.0 565.0 1115.0 ] put
Mcbbox0 Encoding xnote get [ 880.0 0 -435.0 -365.0 435.0 375.0 ] put
Mcbbox0 Encoding dwhdiamond get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox0 Encoding diamond get [ 880.0 0 -435.0 -305.0 435.0 315.0 ] put
Mcbbox0 Encoding filldiamond get [ 880.0 0 -435.0 -305.0 435.0 315.0 ] put
Mcbbox0 Encoding up2n get [ 880.0 0 -435.0 -345.0 435.0 2115.0 ] put
Mcbbox0 Encoding dn2n get [ 880.0 0 -435.0 -2105.0 435.0 355.0 ] put
Mcbbox0 Encoding up4n get [ 850.0 0 -415.0 -335.0 425.0 2115.0 ] put
Mcbbox0 Encoding dn4n get [ 840.0 0 -415.0 -2105.0 415.0 345.0 ] put
Mcbbox0 Encoding com get [ 1110.0 0 -585.0 -645.0 515.0 655.0 ] put
Mcbbox0 Encoding cut get [ 1110.0 0 -585.0 -905.0 515.0 915.0 ] put
Mcbbox0 Encoding begped get [ 470.0 0 -245.0 -45.0 215.0 615.0 ] put
Mcbbox0 Encoding pedal get [ 1040.0 0 -515.0 -45.0 515.0 675.0 ] put
Mcbbox0 Encoding endped get [ 480.0 0 -215.0 -45.0 255.0 615.0 ] put
Mcbbox0 Encoding dnbow get [ 810.0 0 -395.0 -5.0 405.0 915.0 ] put
Mcbbox0 Encoding upbow get [ 720.0 0 -355.0 -115.0 355.0 925.0 ] put
Mcbbox0 Encoding wedge get [ 340.0 0 -165.0 -5.0 165.0 515.0 ] put
Mcbbox0 Encoding uwedge get [ 340.0 0 -165.0 -5.0 165.0 515.0 ] put
Mcbbox0 Encoding ferm get [ 1640.0 0 -815.0 -5.0 815.0 1015.0 ] put
Mcbbox0 Encoding uferm get [ 1640.0 0 -815.0 -5.0 815.0 1015.0 ] put
Mcbbox0 Encoding sign get [ 1340.0 0 -665.0 -825.0 665.0 835.0 ] put
Mcbbox0 Encoding coda get [ 1640.0 0 -815.0 -855.0 815.0 865.0 ] put
Mcbbox0 Encoding mor get [ 1320.0 0 -655.0 -285.0 655.0 295.0 ] put
Mcbbox0 Encoding invmor get [ 1320.0 0 -655.0 -455.0 655.0 465.0 ] put
Mcbbox0 Encoding turn get [ 1300.0 0 -645.0 -335.0 645.0 345.0 ] put
Mcbbox0 Encoding invturn get [ 1300.0 0 -645.0 -335.0 645.0 345.0 ] put
Mcbbox0 Encoding acc_gt get [ 1170.0 0 -525.0 -345.0 635.0 355.0 ] put
Mcbbox0 Encoding acc_hat get [ 780.0 0 -385.0 -5.0 385.0 875.0 ] put
Mcbbox0 Encoding acc_uhat get [ 780.0 0 -385.0 -5.0 385.0 875.0 ] put
Mcbbox0 Encoding tr get [ 1440.0 0 -715.0 -5.0 715.0 1015.0 ] put
Mcbbox0 Encoding leg get [ 840.0 0 -415.0 -55.0 415.0 65.0 ] put
Mcbbox0 Encoding rr get [ 940.0 0 -465.0 -25.0 465.0 1035.0 ] put
Mcbbox0 Encoding dim get [ 540.0 0 -265.0 -15.0 265.0 905.0 ] put
Mcbbox0 Encoding halfdim get [ 760.0 0 -375.0 -15.0 375.0 1015.0 ] put
Mcbbox0 Encoding triangle get [ 800.0 0 -395.0 -45.0 395.0 785.0 ] put
Mcbbox0 Encoding measrpt get [ 1300.0 0 -645.0 -675.0 645.0 685.0 ] put
Mcbbox0 Encoding copyright get [ 920.0 0 -455.0 -45.0 455.0 855.0 ] put
Mcbbox0 Encoding up8n get [ 1390.0 0 -745.0 -335.0 635.0 2115.0 ] put
Mcbbox0 Encoding dn8n get [ 840.0 0 -415.0 -2105.0 415.0 345.0 ] put
Mcbbox0 Encoding up16n get [ 1390.0 0 -745.0 -335.0 635.0 2115.0 ] put
Mcbbox0 Encoding dn16n get [ 840.0 0 -415.0 -2105.0 415.0 345.0 ] put
Mcbbox0 Encoding up32n get [ 1390.0 0 -745.0 -335.0 635.0 2595.0 ] put
Mcbbox0 Encoding dn32n get [ 840.0 0 -415.0 -2585.0 415.0 345.0 ] put
Mcbbox0 Encoding up64n get [ 1390.0 0 -745.0 -335.0 635.0 3075.0 ] put
Mcbbox0 Encoding dn64n get [ 840.0 0 -415.0 -3065.0 415.0 345.0 ] put
Mcbbox0 Encoding up128n get [ 1390.0 0 -745.0 -335.0 635.0 3555.0 ] put
Mcbbox0 Encoding dn128n get [ 840.0 0 -415.0 -3545.0 415.0 345.0 ] put
Mcbbox0 Encoding up256n get [ 1390.0 0 -745.0 -335.0 635.0 3975.0 ] put
Mcbbox0 Encoding dn256n get [ 840.0 0 -415.0 -3965.0 415.0 345.0 ] put

end
end

/Mfont0 mfont0 definefont


% find size of Encoding and make a dictionary
% that size for bounding box information
mfont1 begin
/dictsize Encoding length def
mfont1 /Mcbbox1 dictsize dict put

% temporarily redefine printmchar1 to get code
5 dict begin
/printmchar1 { {} forall } def

Mcbbox1 Encoding dwhrighttriangle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding righttriangle get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding fillrighttriangle get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding udwhrighttriangle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding urighttriangle get [ 880.0 0 -435.0 -275.0 435.0 315.0 ] put
Mcbbox1 Encoding ufillrighttriangle get [ 880.0 0 -435.0 -275.0 435.0 315.0 ] put
Mcbbox1 Encoding dwhrectangle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding rectangle get [ 880.0 0 -435.0 -275.0 435.0 285.0 ] put
Mcbbox1 Encoding fillrectangle get [ 880.0 0 -435.0 -275.0 435.0 285.0 ] put
Mcbbox1 Encoding dwhisostriangle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding isostriangle get [ 880.0 0 -435.0 -275.0 435.0 315.0 ] put
Mcbbox1 Encoding fillisostriangle get [ 880.0 0 -435.0 -275.0 435.0 315.0 ] put
Mcbbox1 Encoding dwhpiewedge get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding piewedge get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding fillpiewedge get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding dwhsemicircle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding semicircle get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding fillsemicircle get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding dwhslashhead get [ 1410.0 0 -695.0 -725.0 705.0 735.0 ] put
Mcbbox1 Encoding slashhead get [ 1380.0 0 -685.0 -725.0 685.0 735.0 ] put
Mcbbox1 Encoding fillslashhead get [ 1300.0 0 -645.0 -675.0 645.0 685.0 ] put
Mcbbox1 Encoding blankhead get [ 880.0 0 -435.0 -275.0 435.0 285.0 ] put

end
end

/Mfont1 mfont1 definefont

/flagsep 1.60 300 mul def	 % 1.60 stepsizes
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] >> setpagedevice
%%EndFeature
%%EndProlog
%%Page: 1 1
save
0.750000 0.750000 scale
%  S_SSV
(kaleidakustikon_10.mup) inputfile
7 linenum
%  S_SSV
15 linenum
%  S_SSV
18 linenum
%  S_SSV
21 linenum
%  S_FEED
27 linenum
88.79 936.10 768.00 5 1.000000 1.000000 staff
88.79 878.10 768.00 5 1.000000 1.000000 staff
87.79 948.10 866.10 brace
0.70 setlinewidth
88.79 948.10 moveto
88.79 866.10 lineto stroke
%  S_CLEFSIG
27 linenum
100.58 930.10 1.000000 gclef
100.83 884.10 1.000000 fclef
116.62 936.10 1.000000 flat
116.62 872.10 1.000000 flat
/NewCenturySchlbk-Bold findfont
16 scalefont
setfont
122.36 936.10 moveto
(3) show
/NewCenturySchlbk-Bold findfont
16 scalefont
setfont
122.36 924.18 moveto
(4) show
/NewCenturySchlbk-Bold findfont
16 scalefont
setfont
122.36 878.10 moveto
(3) show
/NewCenturySchlbk-Bold findfont
16 scalefont
setfont
122.36 866.18 moveto
(4) show
%  S_CHHEAD
27 linenum
%  S_STAFF
% staff 1
save
145.61 939.10 1.000000 4n
154.88 939.10 1.000000 dot
145.61 933.10 1.000000 4n
154.88 933.10 1.000000 dot
145.61 927.10 1.000000 4n
154.88 927.10 1.000000 dot
145.61 918.10 1.000000 4n
154.88 921.10 1.000000 dot
139.38 918.10 moveto
151.84 918.10 lineto stroke
149.29 918.85 moveto
149.29 957.60 lineto stroke
164.19 939.10 1.000000 4n
164.19 933.10 1.000000 4n
164.19 927.10 1.000000 4n
164.19 918.10 1.000000 4n
157.96 918.10 moveto
170.43 918.10 lineto stroke
167.88 918.85 moveto
167.88 957.60 lineto stroke
newpath
148.94 959.10 moveto
168.23 959.10 lineto
168.23 956.10 lineto
148.94 956.10 lineto
closepath
fill
newpath
167.53 954.10 moveto
159.46 954.10 lineto
159.46 951.10 lineto
167.53 951.10 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
145.61 863.10 1.000000 4n
154.88 863.10 1.000000 dot
0.70 setlinewidth
149.29 863.85 moveto
149.29 882.60 lineto stroke
164.19 863.10 1.000000 4n
167.88 863.85 moveto
167.88 882.60 lineto stroke
newpath
148.94 884.10 moveto
168.23 884.10 lineto
168.23 881.10 lineto
148.94 881.10 lineto
closepath
fill
newpath
167.53 879.10 moveto
159.46 879.10 lineto
159.46 876.10 lineto
167.53 876.10 lineto
closepath
fill
restore
%  S_BAR
29 linenum
0.70 setlinewidth
174.16 948.10 moveto
174.16 924.10 lineto stroke
174.16 890.10 moveto
174.16 866.10 lineto stroke
%  S_CHHEAD
32 linenum
%  S_STAFF
% staff 1
save
182.97 939.10 1.000000 4n
182.97 933.10 1.000000 4n
182.97 927.10 1.000000 4n
182.97 918.10 1.000000 4n
176.74 918.10 moveto
189.20 918.10 lineto stroke
186.65 918.85 moveto
186.65 959.10 lineto stroke
206.48 939.10 1.000000 4n
206.48 933.10 1.000000 4n
206.48 927.10 1.000000 4n
206.48 918.10 1.000000 4n
200.25 918.10 moveto
212.71 918.10 lineto stroke
210.16 918.85 moveto
210.16 959.10 lineto stroke
229.99 939.10 1.000000 4n
239.25 939.10 1.000000 dot
226.30 938.35 moveto
226.30 919.86 lineto stroke
250.74 948.10 1.000000 4n
247.06 947.35 moveto
247.06 925.97 lineto stroke
newpath
225.95 921.36 moveto
247.41 927.47 lineto
247.41 924.47 lineto
225.95 918.36 lineto
closepath
fill
newpath
246.71 932.47 moveto
238.65 930.10 lineto
238.65 927.10 lineto
246.71 929.47 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
182.97 863.10 1.000000 4n
0.70 setlinewidth
186.65 863.85 moveto
186.65 906.96 lineto stroke
194.73 884.10 1.000000 4n
198.41 884.85 moveto
198.41 906.96 lineto stroke
206.48 890.10 1.000000 4n
210.16 890.85 moveto
210.16 906.96 lineto stroke
218.23 884.10 1.000000 4n
221.91 884.85 moveto
221.91 906.96 lineto stroke
229.99 875.10 1.000000 4n
233.67 875.85 moveto
233.67 906.96 lineto stroke
241.46 869.10 1.000000 4n
245.14 869.85 moveto
245.14 906.96 lineto stroke
newpath
186.30 908.46 moveto
245.49 908.46 lineto
245.49 905.46 lineto
186.30 905.46 lineto
closepath
fill
restore
%  S_BAR
34 linenum
0.70 setlinewidth
260.71 948.10 moveto
260.71 924.10 lineto stroke
260.71 890.10 moveto
260.71 866.10 lineto stroke
%  S_CHHEAD
38 linenum
%  S_STAFF
% staff 1
save
270.97 954.10 1.000000 4n
280.24 957.10 1.000000 dot
264.74 954.10 moveto
277.21 954.10 lineto stroke
267.29 953.35 moveto
267.29 933.10 lineto stroke
301.74 948.10 1.000000 4n
298.06 947.35 moveto
298.06 930.60 lineto stroke
313.49 954.10 1.000000 4n
307.26 954.10 moveto
319.73 954.10 lineto stroke
309.81 953.35 moveto
309.81 930.60 lineto stroke
326.09 948.10 1.000000 4n
322.40 947.35 moveto
322.40 930.60 lineto stroke
newpath
297.71 932.10 moveto
322.75 932.10 lineto
322.75 929.10 lineto
297.71 929.10 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
270.97 863.10 1.000000 4n
0.70 setlinewidth
274.66 863.85 moveto
274.66 884.10 lineto stroke
290.16 896.10 1.000000 4n
283.93 896.10 moveto
296.40 896.10 lineto stroke
290.16 890.10 1.000000 4n
290.16 884.10 1.000000 4n
293.85 884.85 moveto
293.85 911.10 lineto stroke
313.49 896.10 1.000000 4n
307.26 896.10 moveto
319.73 896.10 lineto stroke
313.49 890.10 1.000000 4n
313.49 884.10 1.000000 4n
317.18 884.85 moveto
317.18 911.10 lineto stroke
restore
%  S_BAR
40 linenum
0.70 setlinewidth
340.22 948.10 moveto
340.22 924.10 lineto stroke
340.22 890.10 moveto
340.22 866.10 lineto stroke
%  S_CHHEAD
44 linenum
%  S_STAFF
% staff 1
save
349.03 957.10 1.000000 4n
342.80 954.10 moveto
355.26 954.10 lineto stroke
345.35 956.35 moveto
345.35 933.30 lineto stroke
360.79 951.10 1.000000 4n
357.10 950.35 moveto
357.10 931.29 lineto stroke
372.54 945.10 1.000000 4n
368.86 944.35 moveto
368.86 929.29 lineto stroke
384.29 951.10 1.000000 4n
380.61 950.35 moveto
380.61 927.29 lineto stroke
396.05 945.10 1.000000 4n
392.36 944.35 moveto
392.36 925.28 lineto stroke
408.64 939.10 1.000000 4n
404.96 938.35 moveto
404.96 923.14 lineto stroke
newpath
345.00 934.80 moveto
405.31 924.64 lineto
405.31 921.64 lineto
345.00 931.80 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
349.03 875.10 1.000000 4n
0.70 setlinewidth
352.71 875.85 moveto
352.71 896.10 lineto stroke
372.54 896.10 1.000000 4n
366.31 896.10 moveto
378.77 896.10 lineto stroke
365.18 893.10 1.000000 4n
372.54 887.10 1.000000 4n
368.86 895.35 moveto
368.86 866.10 lineto stroke
396.05 896.10 1.000000 4n
389.81 896.10 moveto
402.28 896.10 lineto stroke
388.68 893.10 1.000000 4n
396.05 887.10 1.000000 4n
392.36 895.35 moveto
392.36 866.10 lineto stroke
restore
%  S_BAR
46 linenum
0.70 setlinewidth
422.77 948.10 moveto
422.77 924.10 lineto stroke
422.77 890.10 moveto
422.77 866.10 lineto stroke
%  S_CHHEAD
50 linenum
%  S_STAFF
% staff 1
save
433.04 939.10 1.000000 4n
442.30 939.10 1.000000 dot
429.35 938.35 moveto
429.35 918.10 lineto stroke
463.80 942.10 1.000000 4n
460.12 941.35 moveto
460.12 918.89 lineto stroke
475.56 936.10 1.000000 4n
471.87 935.35 moveto
471.87 918.89 lineto stroke
488.15 939.10 1.000000 4n
484.47 938.35 moveto
484.47 918.89 lineto stroke
newpath
459.77 920.39 moveto
484.82 920.39 lineto
484.82 917.39 lineto
459.77 917.39 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
433.04 875.10 1.000000 4n
0.70 setlinewidth
436.72 875.85 moveto
436.72 896.10 lineto stroke
452.23 896.10 1.000000 4n
445.99 896.10 moveto
458.46 896.10 lineto stroke
452.23 887.10 1.000000 4n
452.23 881.10 1.000000 4n
448.54 895.35 moveto
448.54 860.10 lineto stroke
475.56 896.10 1.000000 4n
469.32 896.10 moveto
481.79 896.10 lineto stroke
475.56 887.10 1.000000 4n
475.56 881.10 1.000000 4n
471.87 895.35 moveto
471.87 860.10 lineto stroke
restore
%  S_BAR
52 linenum
0.70 setlinewidth
502.28 948.10 moveto
502.28 924.10 lineto stroke
502.28 890.10 moveto
502.28 866.10 lineto stroke
%  S_CHHEAD
56 linenum
%  S_STAFF
% staff 1
save
510.81 933.10 1.000000 4n
507.13 932.35 moveto
507.13 916.22 lineto stroke
529.80 951.10 1.000000 4n
520.45 951.10 1.000000 sharp
526.12 950.35 moveto
526.12 918.04 lineto stroke
541.55 954.10 1.000000 4n
535.32 954.10 moveto
547.78 954.10 lineto stroke
537.87 953.35 moveto
537.87 919.17 lineto stroke
553.02 945.10 1.000000 4n
549.34 944.35 moveto
549.34 920.27 lineto stroke
570.21 951.10 1.000000 4n
561.76 951.10 1.000000 nat
566.53 950.35 moveto
566.53 921.91 lineto stroke
582.80 948.10 1.000000 4n
579.12 947.35 moveto
579.12 923.12 lineto stroke
newpath
506.78 917.72 moveto
579.47 924.62 lineto
579.47 921.62 lineto
506.78 914.72 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
510.81 863.10 1.000000 4n
0.70 setlinewidth
514.50 863.85 moveto
514.50 884.10 lineto stroke
541.55 896.10 1.000000 4n
535.32 896.10 moveto
547.78 896.10 lineto stroke
541.55 890.10 1.000000 4n
541.55 884.10 1.000000 4n
537.87 895.35 moveto
537.87 863.10 lineto stroke
570.21 896.10 1.000000 4n
563.98 896.10 moveto
576.44 896.10 lineto stroke
570.21 890.10 1.000000 4n
570.21 884.10 1.000000 4n
566.53 895.35 moveto
566.53 863.10 lineto stroke
restore
%  S_BAR
58 linenum
0.70 setlinewidth
596.94 948.10 moveto
596.94 924.10 lineto stroke
596.94 890.10 moveto
596.94 866.10 lineto stroke
%  S_CHHEAD
62 linenum
%  S_STAFF
% staff 1
save
605.95 930.10 1.000000 4n
609.63 930.85 moveto
609.63 951.10 lineto stroke
627.60 963.10 1.000000 4n
636.86 963.10 1.000000 dot
621.37 960.10 moveto
633.83 960.10 lineto stroke
621.37 954.10 moveto
633.83 954.10 lineto stroke
627.60 954.10 1.000000 4n
618.82 954.10 1.000000 flat
636.86 957.10 1.000000 dot
621.37 954.10 moveto
633.83 954.10 lineto stroke
627.60 948.10 1.000000 4n
636.86 951.10 1.000000 dot
627.60 942.10 1.000000 4n
636.86 945.10 1.000000 dot
631.28 942.85 moveto
631.28 978.10 lineto stroke
654.52 927.10 1.000000 4n
658.20 927.85 moveto
658.20 948.10 lineto stroke
661.22 948.10 1.000000 dnflag
restore
%  S_STAFF
% staff 2
save
605.95 899.10 1.000000 4n
0.70 setlinewidth
599.72 896.10 moveto
612.18 896.10 lineto stroke
605.95 893.10 1.000000 4n
602.27 898.35 moveto
602.27 872.10 lineto stroke
627.60 933.10 1.000000 4n
618.82 933.10 1.000000 flat
636.86 933.10 1.000000 dot
627.60 927.10 1.000000 4n
636.86 927.10 1.000000 dot
627.60 899.10 1.000000 4n
636.86 899.10 1.000000 dot
621.37 896.10 moveto
633.83 896.10 lineto stroke
627.60 893.10 1.000000 4n
619.15 893.10 1.000000 nat
636.86 893.10 1.000000 dot
623.92 932.35 moveto
623.92 872.10 lineto stroke
654.52 878.10 1.000000 8rest
restore
%  S_BAR
64 linenum
0.70 setlinewidth
669.49 948.10 moveto
669.49 924.10 lineto stroke
669.49 890.10 moveto
669.49 866.10 lineto stroke
%  S_CHHEAD
68 linenum
%  S_STAFF
% staff 1
save
681.92 924.10 1.000000 4n
685.60 924.85 moveto
685.60 945.10 lineto stroke
690.59 927.10 0.583333 4n
692.59 927.59 moveto
692.59 939.12 lineto stroke
697.29 924.10 0.583333 4n
699.29 924.59 moveto
699.29 936.91 lineto stroke
709.03 918.10 0.583333 4n
703.16 918.10 0.583333 sharp
704.48 918.10 moveto
713.59 918.10 lineto stroke
711.04 918.59 moveto
711.04 933.03 lineto stroke
717.42 924.10 1.000000 4n
721.10 924.85 moveto
721.10 952.60 lineto stroke
729.17 930.10 1.000000 4n
732.85 930.85 moveto
732.85 952.60 lineto stroke
740.92 936.10 1.000000 4n
744.61 936.85 moveto
744.61 952.60 lineto stroke
753.52 924.10 1.000000 4n
757.20 924.85 moveto
757.20 952.60 lineto stroke
newpath
720.75 954.10 moveto
757.55 954.10 lineto
757.55 951.10 lineto
720.75 951.10 lineto
closepath
fill
newpath
692.36 940.10 moveto
711.26 934.00 lineto
711.26 932.05 lineto
692.36 938.15 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
678.02 875.10 1.000000 4n
0.70 setlinewidth
681.70 875.85 moveto
681.70 896.10 lineto stroke
717.42 893.10 1.000000 4n
717.42 887.10 1.000000 4n
721.10 887.85 moveto
721.10 909.10 lineto stroke
740.92 893.10 1.000000 4n
740.92 887.10 1.000000 4n
744.61 887.85 moveto
744.61 909.10 lineto stroke
685.82 875.10 1.000000 2n
695.30 875.10 1.000000 dot
681.92 874.35 moveto
681.92 855.10 lineto stroke
restore
%  S_BAR
71 linenum
0.70 setlinewidth
767.65 948.10 moveto
767.65 924.10 lineto stroke
767.65 890.10 moveto
767.65 866.10 lineto stroke
%  S_FEED
74 linenum
50.50 794.10 768.00 5 1.000000 1.000000 staff
/Times-Roman findfont
11 scalefont
setfont
55.00 821.22 moveto
(9) show
50.50 740.10 768.00 5 1.000000 1.000000 staff
49.50 806.10 728.10 brace
50.50 806.10 moveto
50.50 728.10 lineto stroke
%  S_CLEFSIG
74 linenum
62.29 788.10 1.000000 gclef
62.54 746.10 1.000000 fclef
78.33 794.10 1.000000 flat
78.33 734.10 1.000000 flat
%  S_CHHEAD
74 linenum
%  S_STAFF
% staff 1
save
97.52 785.10 1.000000 4n
101.20 785.85 moveto
101.20 806.10 lineto stroke
116.89 794.10 1.000000 4rest
restore
%  S_STAFF
% staff 2
save
97.52 752.10 1.000000 4n
97.52 746.10 1.000000 4n
0.70 setlinewidth
93.84 751.35 moveto
93.84 725.10 lineto stroke
116.89 725.10 1.000000 4n
120.58 725.85 moveto
120.58 746.10 lineto stroke
restore
%  S_BAR
76 linenum
149.68 797.10 1.000000 dot
149.68 791.10 1.000000 dot
135.68 797.10 1.000000 dot
135.68 791.10 1.000000 dot
3.00 setlinewidth
140.18 806.10 moveto
140.18 782.10 lineto stroke
145.18 806.10 moveto
145.18 782.10 lineto stroke
0.70 setlinewidth
149.68 743.10 1.000000 dot
149.68 737.10 1.000000 dot
135.68 743.10 1.000000 dot
135.68 737.10 1.000000 dot
3.00 setlinewidth
140.18 752.10 moveto
140.18 728.10 lineto stroke
145.18 752.10 moveto
145.18 728.10 lineto stroke
0.70 setlinewidth
%  S_CHHEAD
80 linenum
%  S_STAFF
% staff 1
save
162.62 797.10 1.000000 2n
172.10 797.10 1.000000 dot
158.72 796.35 moveto
158.72 776.10 lineto stroke
restore
%  S_STAFF
% staff 2
save
162.62 737.10 1.000000 2n
172.10 737.10 1.000000 dot
0.70 setlinewidth
166.52 737.85 moveto
166.52 758.10 lineto stroke
restore
%  S_BAR
82 linenum
0.70 setlinewidth
205.56 806.10 moveto
205.56 782.10 lineto stroke
205.56 752.10 moveto
205.56 728.10 lineto stroke
%  S_CHHEAD
86 linenum
%  S_STAFF
% staff 1
save
214.19 818.10 1.000000 4n
223.46 821.10 1.000000 dot
207.96 818.10 moveto
220.43 818.10 lineto stroke
207.96 812.10 moveto
220.43 812.10 lineto stroke
210.51 817.35 moveto
210.51 794.10 lineto stroke
246.13 815.10 1.000000 4n
239.90 812.10 moveto
252.36 812.10 lineto stroke
242.45 814.35 moveto
242.45 795.02 lineto stroke
256.78 809.10 1.000000 4n
253.09 808.35 moveto
253.09 791.16 lineto stroke
268.26 803.10 1.000000 4n
264.58 802.35 moveto
264.58 787.00 lineto stroke
newpath
242.10 796.52 moveto
264.93 788.50 lineto
264.93 785.50 lineto
242.10 793.52 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
214.19 737.10 1.000000 4n
0.70 setlinewidth
210.51 736.35 moveto
210.51 719.13 lineto stroke
224.84 758.10 1.000000 4n
218.61 758.10 moveto
231.07 758.10 lineto stroke
221.16 757.35 moveto
221.16 723.01 lineto stroke
235.48 755.10 1.000000 4n
235.48 749.10 1.000000 4n
231.80 754.35 moveto
231.80 730.69 lineto stroke
246.13 758.10 1.000000 4n
239.90 758.10 moveto
252.36 758.10 lineto stroke
242.45 757.35 moveto
242.45 734.57 lineto stroke
256.78 755.10 1.000000 4n
256.78 749.10 1.000000 4n
253.09 754.35 moveto
253.09 730.54 lineto stroke
268.26 758.10 1.000000 4n
262.03 758.10 moveto
274.49 758.10 lineto stroke
264.58 757.35 moveto
264.58 734.72 lineto stroke
newpath
210.16 720.63 moveto
221.51 724.51 lineto
221.51 721.51 lineto
210.16 717.63 lineto
closepath
fill
newpath
231.45 732.19 moveto
242.80 736.07 lineto
242.80 733.07 lineto
231.45 729.19 lineto
closepath
fill
newpath
252.74 732.04 moveto
264.93 736.22 lineto
264.93 733.22 lineto
252.74 729.04 lineto
closepath
fill
restore
%  S_BAR
88 linenum
0.70 setlinewidth
281.47 806.10 moveto
281.47 782.10 lineto stroke
281.47 752.10 moveto
281.47 728.10 lineto stroke
%  S_CHHEAD
92 linenum
%  S_STAFF
% staff 1
save
290.10 809.10 1.000000 4n
286.42 808.35 moveto
286.42 786.33 lineto stroke
300.75 806.10 1.000000 4n
297.06 805.35 moveto
297.06 786.33 lineto stroke
311.39 803.10 1.000000 4n
307.71 802.35 moveto
307.71 786.33 lineto stroke
322.04 806.10 1.000000 4n
318.36 805.35 moveto
318.36 786.33 lineto stroke
332.68 812.10 1.000000 4n
326.45 812.10 moveto
338.91 812.10 lineto stroke
329.00 811.35 moveto
329.00 786.33 lineto stroke
344.17 806.10 1.000000 4n
340.49 805.35 moveto
340.49 786.33 lineto stroke
newpath
286.07 787.83 moveto
340.84 787.83 lineto
340.84 784.83 lineto
286.07 784.83 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
290.10 737.10 1.000000 4n
0.70 setlinewidth
286.42 736.35 moveto
286.42 719.13 lineto stroke
300.75 758.10 1.000000 4n
294.51 758.10 moveto
306.98 758.10 lineto stroke
297.06 757.35 moveto
297.06 723.01 lineto stroke
311.39 752.10 1.000000 4n
311.39 746.10 1.000000 4n
307.71 751.35 moveto
307.71 729.60 lineto stroke
322.04 758.10 1.000000 4n
315.81 758.10 moveto
328.27 758.10 lineto stroke
318.36 757.35 moveto
318.36 729.60 lineto stroke
332.68 752.10 1.000000 4n
332.68 746.10 1.000000 4n
329.00 751.35 moveto
329.00 729.60 lineto stroke
344.17 758.10 1.000000 4n
337.94 758.10 moveto
350.40 758.10 lineto stroke
340.49 757.35 moveto
340.49 729.60 lineto stroke
newpath
286.07 720.63 moveto
297.41 724.51 lineto
297.41 721.51 lineto
286.07 717.63 lineto
closepath
fill
newpath
307.36 731.10 moveto
340.84 731.10 lineto
340.84 728.10 lineto
307.36 728.10 lineto
closepath
fill
restore
%  S_BAR
94 linenum
0.70 setlinewidth
357.38 806.10 moveto
357.38 782.10 lineto stroke
357.38 752.10 moveto
357.38 728.10 lineto stroke
%  S_CHHEAD
98 linenum
%  S_STAFF
% staff 1
save
366.01 797.10 1.000000 4n
375.27 797.10 1.000000 dot
362.32 796.35 moveto
362.32 776.10 lineto stroke
397.94 797.10 1.000000 4n
401.63 797.85 moveto
401.63 812.57 lineto stroke
408.59 791.10 1.000000 4n
412.27 791.85 moveto
412.27 809.01 lineto stroke
420.07 785.10 1.000000 4n
423.76 785.85 moveto
423.76 805.16 lineto stroke
newpath
401.28 814.07 moveto
424.11 806.66 lineto
424.11 803.66 lineto
401.28 811.07 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
366.01 737.10 1.000000 4n
0.70 setlinewidth
362.32 736.35 moveto
362.32 719.13 lineto stroke
376.65 758.10 1.000000 4n
370.42 758.10 moveto
382.88 758.10 lineto stroke
372.97 757.35 moveto
372.97 723.01 lineto stroke
387.30 752.10 1.000000 4n
387.30 746.10 1.000000 4n
383.62 751.35 moveto
383.62 728.13 lineto stroke
397.94 758.10 1.000000 4n
391.71 758.10 moveto
404.18 758.10 lineto stroke
394.26 757.35 moveto
394.26 732.01 lineto stroke
408.59 752.10 1.000000 4n
408.59 746.10 1.000000 4n
404.91 751.35 moveto
404.91 728.13 lineto stroke
420.07 758.10 1.000000 4n
413.84 758.10 moveto
426.31 758.10 lineto stroke
416.39 757.35 moveto
416.39 732.31 lineto stroke
newpath
361.97 720.63 moveto
373.32 724.51 lineto
373.32 721.51 lineto
361.97 717.63 lineto
closepath
fill
newpath
383.27 729.63 moveto
394.61 733.51 lineto
394.61 730.51 lineto
383.27 726.63 lineto
closepath
fill
newpath
404.56 729.63 moveto
416.74 733.81 lineto
416.74 730.81 lineto
404.56 726.63 lineto
closepath
fill
restore
%  S_BAR
100 linenum
0.70 setlinewidth
433.28 806.10 moveto
433.28 782.10 lineto stroke
433.28 752.10 moveto
433.28 728.10 lineto stroke
%  S_CHHEAD
104 linenum
%  S_STAFF
% staff 1
save
441.91 782.10 1.000000 4n
445.60 782.85 moveto
445.60 813.60 lineto stroke
452.56 788.10 1.000000 4n
456.24 788.85 moveto
456.24 813.60 lineto stroke
463.20 797.10 1.000000 4n
466.89 797.85 moveto
466.89 813.60 lineto stroke
473.85 794.10 1.000000 4n
477.53 794.85 moveto
477.53 813.60 lineto stroke
484.50 788.10 1.000000 4n
488.18 788.85 moveto
488.18 813.60 lineto stroke
495.98 782.10 1.000000 4n
499.66 782.85 moveto
499.66 813.60 lineto stroke
newpath
445.25 815.10 moveto
500.01 815.10 lineto
500.01 812.10 lineto
445.25 812.10 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
441.91 737.10 1.000000 4n
0.70 setlinewidth
438.23 736.35 moveto
438.23 719.13 lineto stroke
452.56 758.10 1.000000 4n
446.33 758.10 moveto
458.79 758.10 lineto stroke
448.88 757.35 moveto
448.88 723.01 lineto stroke
463.20 755.10 1.000000 4n
463.20 749.10 1.000000 4n
459.52 754.35 moveto
459.52 732.60 lineto stroke
473.85 758.10 1.000000 4n
467.62 758.10 moveto
480.08 758.10 lineto stroke
470.17 757.35 moveto
470.17 732.60 lineto stroke
484.50 755.10 1.000000 4n
484.50 749.10 1.000000 4n
480.81 754.35 moveto
480.81 732.60 lineto stroke
495.98 758.10 1.000000 4n
489.75 758.10 moveto
502.21 758.10 lineto stroke
492.30 757.35 moveto
492.30 732.60 lineto stroke
newpath
437.88 720.63 moveto
449.23 724.51 lineto
449.23 721.51 lineto
437.88 717.63 lineto
closepath
fill
newpath
459.17 734.10 moveto
492.65 734.10 lineto
492.65 731.10 lineto
459.17 731.10 lineto
closepath
fill
restore
%  S_BAR
106 linenum
0.70 setlinewidth
509.19 806.10 moveto
509.19 782.10 lineto stroke
509.19 752.10 moveto
509.19 728.10 lineto stroke
%  S_CHHEAD
110 linenum
%  S_STAFF
% staff 1
save
517.82 785.10 1.000000 4n
514.14 784.35 moveto
514.14 767.30 lineto stroke
528.47 791.10 1.000000 4n
524.78 790.35 moveto
524.78 770.72 lineto stroke
539.11 797.10 1.000000 4n
535.43 796.35 moveto
535.43 774.14 lineto stroke
549.76 812.10 1.000000 4n
543.53 812.10 moveto
554.49 812.10 lineto stroke
546.08 811.35 moveto
546.08 777.56 lineto stroke
560.40 812.10 1.000000 4n
555.67 812.10 moveto
566.64 812.10 lineto stroke
556.72 811.35 moveto
556.72 780.97 lineto stroke
571.89 809.10 1.000000 4n
568.21 808.35 moveto
568.21 784.66 lineto stroke
newpath
513.79 768.80 moveto
568.56 786.16 lineto
568.56 783.16 lineto
513.79 765.80 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
517.82 737.10 1.000000 4n
0.70 setlinewidth
514.14 736.35 moveto
514.14 719.13 lineto stroke
528.47 758.10 1.000000 4n
522.23 758.10 moveto
534.70 758.10 lineto stroke
524.78 757.35 moveto
524.78 723.01 lineto stroke
539.11 752.10 1.000000 4n
539.11 746.10 1.000000 4n
535.43 751.35 moveto
535.43 729.60 lineto stroke
549.76 758.10 1.000000 4n
543.53 758.10 moveto
555.99 758.10 lineto stroke
546.08 757.35 moveto
546.08 729.60 lineto stroke
560.40 752.10 1.000000 4n
560.40 746.10 1.000000 4n
556.72 751.35 moveto
556.72 729.60 lineto stroke
571.89 758.10 1.000000 4n
565.66 758.10 moveto
578.12 758.10 lineto stroke
568.21 757.35 moveto
568.21 729.60 lineto stroke
newpath
513.79 720.63 moveto
525.13 724.51 lineto
525.13 721.51 lineto
513.79 717.63 lineto
closepath
fill
newpath
535.08 731.10 moveto
568.56 731.10 lineto
568.56 728.10 lineto
535.08 728.10 lineto
closepath
fill
restore
%  S_BAR
113 linenum
0.70 setlinewidth
585.10 806.10 moveto
585.10 782.10 lineto stroke
585.10 752.10 moveto
585.10 728.10 lineto stroke
%  S_CHHEAD
117 linenum
%  S_STAFF
% staff 1
save
593.73 806.10 1.000000 4n
590.04 805.35 moveto
590.04 785.10 lineto stroke
615.02 797.10 1.000000 4n
615.02 785.10 1.000000 4n
618.70 785.85 moveto
618.70 817.10 lineto stroke
636.31 791.10 1.000000 4n
636.31 785.10 1.000000 4n
639.99 785.85 moveto
639.99 812.10 lineto stroke
restore
%  S_STAFF
% staff 2
save
593.73 737.10 1.000000 4n
0.70 setlinewidth
590.04 736.35 moveto
590.04 720.08 lineto stroke
604.37 758.10 1.000000 4n
598.14 758.10 moveto
610.60 758.10 lineto stroke
600.69 757.35 moveto
600.69 721.46 lineto stroke
615.02 752.10 1.000000 4n
611.34 751.35 moveto
611.34 722.84 lineto stroke
625.66 758.10 1.000000 4n
619.43 758.10 moveto
631.90 758.10 lineto stroke
621.98 757.35 moveto
621.98 724.22 lineto stroke
636.31 746.10 1.000000 4n
632.63 745.35 moveto
632.63 725.60 lineto stroke
647.79 758.10 1.000000 4n
641.56 758.10 moveto
654.03 758.10 lineto stroke
644.11 757.35 moveto
644.11 727.09 lineto stroke
newpath
589.69 721.58 moveto
644.46 728.59 lineto
644.46 725.59 lineto
589.69 718.58 lineto
closepath
fill
restore
%  S_BAR
119 linenum
0.70 setlinewidth
661.00 806.10 moveto
661.00 782.10 lineto stroke
661.00 752.10 moveto
661.00 728.10 lineto stroke
%  S_CHHEAD
122 linenum
%  S_STAFF
% staff 1
save
670.95 788.10 1.000000 4n
670.95 782.10 1.000000 4n
674.63 782.85 moveto
674.63 809.10 lineto stroke
690.32 818.10 1.000000 4n
684.09 818.10 moveto
696.55 818.10 lineto stroke
684.09 812.10 moveto
696.55 812.10 lineto stroke
690.32 803.10 1.000000 4n
690.32 797.10 1.000000 4n
694.00 797.85 moveto
694.00 833.10 lineto stroke
restore
%  S_STAFF
% staff 2
save
670.95 737.10 1.000000 4n
0.70 setlinewidth
674.63 737.85 moveto
674.63 758.10 lineto stroke
690.32 788.10 1.000000 4n
690.32 758.10 1.000000 4n
684.09 758.10 moveto
696.55 758.10 lineto stroke
686.64 787.35 moveto
686.64 737.10 lineto stroke
restore
%  S_BAR
124 linenum
723.11 797.10 1.000000 dot
723.11 791.10 1.000000 dot
709.11 797.10 1.000000 dot
709.11 791.10 1.000000 dot
3.00 setlinewidth
713.61 806.10 moveto
713.61 782.10 lineto stroke
718.61 806.10 moveto
718.61 782.10 lineto stroke
0.70 setlinewidth
723.11 743.10 1.000000 dot
723.11 737.10 1.000000 dot
709.11 743.10 1.000000 dot
709.11 737.10 1.000000 dot
3.00 setlinewidth
713.61 752.10 moveto
713.61 728.10 lineto stroke
718.61 752.10 moveto
718.61 728.10 lineto stroke
0.70 setlinewidth
%  S_SSV
126 linenum
%  S_CLEFSIG
132 linenum
729.35 794.10 1.000000 flat
734.84 803.10 1.000000 flat
729.35 734.10 1.000000 flat
734.84 743.10 1.000000 flat
%  S_CHHEAD
132 linenum
%  S_STAFF
% staff 1
save
747.87 827.10 1.000000 4n
741.63 824.10 moveto
754.10 824.10 lineto stroke
741.63 818.10 moveto
754.10 818.10 lineto stroke
741.63 812.10 moveto
754.10 812.10 lineto stroke
744.18 826.35 moveto
744.18 794.10 lineto stroke
restore
%  S_STAFF
% staff 2
save
747.87 740.10 1.000000 4rest
restore
%  S_BAR
134 linenum
0.70 setlinewidth
767.65 806.10 moveto
767.65 782.10 lineto stroke
767.65 752.10 moveto
767.65 728.10 lineto stroke
%  S_FEED
137 linenum
50.50 656.10 768.00 5 1.000000 1.000000 staff
/Times-Roman findfont
11 scalefont
setfont
55.00 683.15 moveto
(20) show
50.50 602.10 768.00 5 1.000000 1.000000 staff
49.50 668.10 590.10 brace
50.50 668.10 moveto
50.50 590.10 lineto stroke
%  S_CLEFSIG
137 linenum
62.29 650.10 1.000000 gclef
62.54 608.10 1.000000 fclef
78.33 656.10 1.000000 flat
83.82 665.10 1.000000 flat
78.33 596.10 1.000000 flat
83.82 605.10 1.000000 flat
%  S_CHHEAD
137 linenum
%  S_STAFF
% staff 1
save
101.60 689.10 1.000000 4n
95.36 686.10 moveto
107.83 686.10 lineto stroke
95.36 680.10 moveto
107.83 680.10 lineto stroke
95.36 674.10 moveto
107.83 674.10 lineto stroke
97.91 688.35 moveto
97.91 657.60 lineto stroke
120.43 680.10 1.000000 4n
111.07 680.10 1.000000 sharp
114.19 680.10 moveto
125.16 680.10 lineto stroke
114.19 674.10 moveto
124.66 674.10 lineto stroke
116.74 679.35 moveto
116.74 656.61 lineto stroke
131.25 683.10 1.000000 4n
126.52 680.10 moveto
137.48 680.10 lineto stroke
127.02 674.10 moveto
135.48 674.10 lineto stroke
127.57 682.35 moveto
127.57 656.04 lineto stroke
142.07 674.10 1.000000 4n
137.34 674.10 moveto
146.80 674.10 lineto stroke
138.39 673.35 moveto
138.39 655.47 lineto stroke
152.89 677.10 1.000000 4n
148.16 674.10 moveto
159.12 674.10 lineto stroke
149.21 676.35 moveto
149.21 654.90 lineto stroke
164.55 671.10 1.000000 4n
160.87 670.35 moveto
160.87 654.28 lineto stroke
newpath
97.56 659.10 moveto
161.22 655.78 lineto
161.22 652.78 lineto
97.56 656.10 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
101.60 596.10 1.000000 4n
0.70 setlinewidth
105.28 596.85 moveto
105.28 617.10 lineto stroke
131.25 623.10 1.000000 4n
125.02 620.10 moveto
137.48 620.10 lineto stroke
131.25 617.10 1.000000 4n
131.25 608.10 1.000000 4n
127.57 622.35 moveto
127.57 587.10 lineto stroke
152.89 623.10 1.000000 4n
146.66 620.10 moveto
159.12 620.10 lineto stroke
152.89 617.10 1.000000 4n
152.89 608.10 1.000000 4n
149.21 622.35 moveto
149.21 587.10 lineto stroke
restore
%  S_CURVE
183 linenum
94.40 695.85 moveto
94.39 696.12 lineto
95.59 696.64 96.84 696.77 98.12 696.52 curveto
99.51 696.25 100.71 695.61 101.71 694.60 curveto
101.49 694.09 lineto
100.33 694.65 99.13 695.06 97.87 695.32 curveto
96.72 695.55 95.57 695.63 94.40 695.57 curveto
fill
%  S_BAR
139 linenum
0.70 setlinewidth
177.91 668.10 moveto
177.91 644.10 lineto stroke
177.91 614.10 moveto
177.91 590.10 lineto stroke
%  S_CHHEAD
143 linenum
%  S_STAFF
% staff 1
save
187.90 668.10 1.000000 4n
197.17 671.10 1.000000 dot
184.22 667.35 moveto
184.22 647.10 lineto stroke
220.48 665.10 1.000000 4n
212.03 665.10 1.000000 nat
216.80 664.35 moveto
216.80 646.60 lineto stroke
231.30 668.10 1.000000 4n
227.62 667.35 moveto
227.62 646.60 lineto stroke
242.96 665.10 1.000000 4n
239.28 664.35 moveto
239.28 646.60 lineto stroke
newpath
216.45 648.10 moveto
239.63 648.10 lineto
239.63 645.10 lineto
216.45 645.10 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
187.90 596.10 1.000000 4n
0.70 setlinewidth
191.59 596.85 moveto
191.59 617.10 lineto stroke
205.28 623.10 1.000000 4n
199.05 620.10 moveto
211.51 620.10 lineto stroke
205.28 617.10 1.000000 4n
205.28 608.10 1.000000 4n
201.60 622.35 moveto
201.60 587.10 lineto stroke
231.30 623.10 1.000000 4n
225.07 620.10 moveto
237.53 620.10 lineto stroke
231.30 617.10 1.000000 4n
231.30 608.10 1.000000 4n
227.62 622.35 moveto
227.62 587.10 lineto stroke
restore
%  S_BAR
145 linenum
0.70 setlinewidth
256.32 668.10 moveto
256.32 644.10 lineto stroke
256.32 614.10 moveto
256.32 590.10 lineto stroke
%  S_CHHEAD
149 linenum
%  S_STAFF
% staff 1
save
264.98 668.10 1.000000 4n
261.30 667.35 moveto
261.30 647.02 lineto stroke
275.80 677.10 1.000000 4n
269.57 674.10 moveto
282.03 674.10 lineto stroke
272.12 676.35 moveto
272.12 645.32 lineto stroke
286.62 662.10 1.000000 4n
282.94 661.35 moveto
282.94 643.63 lineto stroke
297.44 668.10 1.000000 4n
293.76 667.35 moveto
293.76 641.93 lineto stroke
308.27 656.10 1.000000 4n
304.58 655.35 moveto
304.58 640.23 lineto stroke
319.93 662.10 1.000000 4n
316.24 661.35 moveto
316.24 638.40 lineto stroke
newpath
260.95 648.52 moveto
316.59 639.90 lineto
316.59 636.90 lineto
260.95 645.52 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
264.98 596.10 1.000000 4n
0.70 setlinewidth
268.66 596.85 moveto
268.66 617.10 lineto stroke
286.62 623.10 1.000000 4n
280.39 620.10 moveto
292.85 620.10 lineto stroke
286.62 617.10 1.000000 4n
286.62 608.10 1.000000 4n
282.94 622.35 moveto
282.94 587.10 lineto stroke
308.27 623.10 1.000000 4n
302.03 620.10 moveto
314.50 620.10 lineto stroke
308.27 617.10 1.000000 4n
308.27 608.10 1.000000 4n
304.58 622.35 moveto
304.58 587.10 lineto stroke
restore
%  S_BAR
151 linenum
0.70 setlinewidth
333.28 668.10 moveto
333.28 644.10 lineto stroke
333.28 614.10 moveto
333.28 590.10 lineto stroke
%  S_CHHEAD
155 linenum
%  S_STAFF
% staff 1
save
343.49 668.10 1.000000 4n
347.18 668.85 moveto
347.18 685.10 lineto stroke
362.34 665.10 1.000000 4n
366.02 665.85 moveto
366.02 683.10 lineto stroke
379.71 647.10 1.000000 4n
388.98 647.10 1.000000 dot
383.40 647.85 moveto
383.40 666.60 lineto stroke
398.21 647.10 1.000000 4n
401.89 647.85 moveto
401.89 666.60 lineto stroke
newpath
383.05 668.10 moveto
402.24 668.10 lineto
402.24 665.10 lineto
383.05 665.10 lineto
closepath
fill
newpath
401.54 663.10 moveto
393.48 663.10 lineto
393.48 660.10 lineto
401.54 660.10 lineto
closepath
fill
343.49 653.10 1.000000 2n
339.60 652.35 moveto
339.60 633.10 lineto stroke
restore
%  S_STAFF
% staff 2
save
343.49 626.10 1.000000 2n
0.70 setlinewidth
337.05 626.10 moveto
349.94 626.10 lineto stroke
337.05 620.10 moveto
349.94 620.10 lineto stroke
343.49 620.10 1.000000 2n
337.05 620.10 moveto
349.94 620.10 lineto stroke
343.49 608.10 1.000000 2n
339.60 625.35 moveto
339.60 587.10 lineto stroke
379.71 602.10 1.000000 4rest
restore
%  S_BAR
158 linenum
0.70 setlinewidth
407.73 668.10 moveto
407.73 644.10 lineto stroke
407.73 614.10 moveto
407.73 590.10 lineto stroke
%  S_CHHEAD
162 linenum
%  S_STAFF
% staff 1
save
416.26 647.10 1.000000 4n
419.94 647.85 moveto
419.94 668.10 lineto stroke
424.77 650.10 0.583333 4n
426.77 650.59 moveto
426.77 662.44 lineto stroke
431.47 647.10 0.583333 4n
433.47 647.59 moveto
433.47 660.41 lineto stroke
438.18 644.10 0.583333 4n
440.18 644.59 moveto
440.18 658.38 lineto stroke
446.56 647.10 1.000000 4n
450.24 647.85 moveto
450.24 670.84 lineto stroke
457.38 653.10 1.000000 4n
461.06 653.85 moveto
461.06 673.76 lineto stroke
468.20 659.10 1.000000 4n
471.89 659.85 moveto
471.89 676.69 lineto stroke
479.86 662.10 1.000000 4n
483.55 662.85 moveto
483.55 679.84 lineto stroke
newpath
449.89 672.34 moveto
483.90 681.34 lineto
483.90 678.34 lineto
449.89 669.34 lineto
closepath
fill
newpath
426.54 663.42 moveto
440.41 659.35 lineto
440.41 657.40 lineto
426.54 661.47 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
416.26 587.10 1.000000 4n
0.70 setlinewidth
419.94 587.85 moveto
419.94 608.10 lineto stroke
446.56 626.10 1.000000 4n
440.33 626.10 moveto
452.79 626.10 lineto stroke
440.33 620.10 moveto
452.79 620.10 lineto stroke
446.56 620.10 1.000000 4n
440.33 620.10 moveto
452.79 620.10 lineto stroke
446.56 608.10 1.000000 4n
442.88 625.35 moveto
442.88 587.10 lineto stroke
468.20 626.10 1.000000 4n
461.97 626.10 moveto
474.44 626.10 lineto stroke
461.97 620.10 moveto
474.44 620.10 lineto stroke
468.20 620.10 1.000000 4n
461.97 620.10 moveto
474.44 620.10 lineto stroke
468.20 608.10 1.000000 4n
464.52 625.35 moveto
464.52 587.10 lineto stroke
restore
%  S_BAR
164 linenum
0.70 setlinewidth
493.22 668.10 moveto
493.22 644.10 lineto stroke
493.22 614.10 moveto
493.22 590.10 lineto stroke
%  S_CHHEAD
168 linenum
%  S_STAFF
% staff 1
save
501.75 665.10 1.000000 4n
498.07 664.35 moveto
498.07 647.13 lineto stroke
511.82 683.10 1.000000 4n
505.58 680.10 moveto
516.55 680.10 lineto stroke
505.58 674.10 moveto
516.05 674.10 lineto stroke
508.13 682.35 moveto
508.13 650.79 lineto stroke
521.88 680.10 1.000000 4n
517.15 680.10 moveto
528.11 680.10 lineto stroke
517.65 674.10 moveto
526.11 674.10 lineto stroke
518.20 679.35 moveto
518.20 654.46 lineto stroke
531.94 677.10 1.000000 4n
527.21 674.10 moveto
536.68 674.10 lineto stroke
528.26 676.35 moveto
528.26 657.50 lineto stroke
542.01 674.10 1.000000 4n
537.28 674.10 moveto
548.24 674.10 lineto stroke
538.33 673.35 moveto
538.33 655.43 lineto stroke
552.07 671.10 1.000000 4n
548.39 670.35 moveto
548.39 653.36 lineto stroke
562.14 668.10 1.000000 4n
558.45 667.35 moveto
558.45 646.60 lineto stroke
579.04 665.10 1.000000 4n
570.59 665.10 1.000000 nat
575.36 664.35 moveto
575.36 646.60 lineto stroke
597.06 665.10 1.000000 4n
588.28 665.10 1.000000 flat
593.38 664.35 moveto
593.38 646.60 lineto stroke
/NewCenturySchlbk-BoldItalic findfont
11 scalefont
setfont
508.65 688.73 moveto
(3) show
/NewCenturySchlbk-BoldItalic findfont
11 scalefont
setfont
538.84 679.73 moveto
(3) show
/NewCenturySchlbk-BoldItalic findfont
11 scalefont
setfont
576.43 675.47 moveto
(3) show
newpath
497.72 648.63 moveto
518.55 655.96 lineto
518.55 652.96 lineto
497.72 645.63 lineto
closepath
fill
newpath
527.91 659.00 moveto
548.74 654.86 lineto
548.74 651.86 lineto
527.91 656.00 lineto
closepath
fill
newpath
558.10 648.10 moveto
593.73 648.10 lineto
593.73 645.10 lineto
558.10 645.10 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
501.75 587.10 1.000000 4n
0.70 setlinewidth
505.43 587.85 moveto
505.43 608.10 lineto stroke
531.94 620.10 1.000000 4n
525.71 620.10 moveto
538.18 620.10 lineto stroke
531.94 614.10 1.000000 4n
531.94 608.10 1.000000 4n
528.26 619.35 moveto
528.26 587.10 lineto stroke
562.14 620.10 1.000000 4n
555.90 620.10 moveto
568.37 620.10 lineto stroke
562.14 614.10 1.000000 4n
562.14 608.10 1.000000 4n
558.45 619.35 moveto
558.45 587.10 lineto stroke
restore
%  S_BAR
170 linenum
0.70 setlinewidth
607.92 668.10 moveto
607.92 644.10 lineto stroke
607.92 614.10 moveto
607.92 590.10 lineto stroke
%  S_CHHEAD
174 linenum
%  S_STAFF
% staff 1
save
616.45 662.10 1.000000 4n
612.77 661.35 moveto
612.77 644.13 lineto stroke
626.51 668.10 1.000000 4n
622.83 667.35 moveto
622.83 647.79 lineto stroke
636.58 677.10 1.000000 4n
630.34 674.10 moveto
642.81 674.10 lineto stroke
632.89 676.35 moveto
632.89 651.46 lineto stroke
646.64 668.10 1.000000 4n
642.96 667.35 moveto
642.96 647.73 lineto stroke
656.70 662.10 1.000000 4n
653.02 661.35 moveto
653.02 644.07 lineto stroke
666.77 656.10 1.000000 4n
663.09 655.35 moveto
663.09 640.40 lineto stroke
676.83 665.10 1.000000 4n
673.15 664.35 moveto
673.15 645.02 lineto stroke
686.90 659.10 1.000000 4n
683.21 658.35 moveto
683.21 641.43 lineto stroke
697.43 653.10 1.000000 4n
693.74 652.35 moveto
693.74 637.67 lineto stroke
/NewCenturySchlbk-BoldItalic findfont
11 scalefont
setfont
623.34 675.68 moveto
(3) show
/NewCenturySchlbk-BoldItalic findfont
11 scalefont
setfont
653.54 667.73 moveto
(3) show
/NewCenturySchlbk-BoldItalic findfont
11 scalefont
setfont
683.96 664.73 moveto
(3) show
newpath
612.42 645.63 moveto
633.24 652.96 lineto
633.24 649.96 lineto
612.42 642.63 lineto
closepath
fill
newpath
642.61 649.23 moveto
663.44 641.90 lineto
663.44 638.90 lineto
642.61 646.23 lineto
closepath
fill
newpath
672.80 646.52 moveto
694.09 639.17 lineto
694.09 636.17 lineto
672.80 643.52 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
616.45 596.10 1.000000 4n
0.70 setlinewidth
620.13 596.85 moveto
620.13 617.10 lineto stroke
646.64 623.10 1.000000 4n
640.41 620.10 moveto
652.87 620.10 lineto stroke
646.64 617.10 1.000000 4n
642.96 622.35 moveto
642.96 596.10 lineto stroke
676.83 620.10 1.000000 4n
670.60 620.10 moveto
683.06 620.10 lineto stroke
676.83 608.10 1.000000 4n
673.15 619.35 moveto
673.15 587.10 lineto stroke
restore
%  S_BAR
176 linenum
0.70 setlinewidth
708.28 668.10 moveto
708.28 644.10 lineto stroke
708.28 614.10 moveto
708.28 590.10 lineto stroke
%  S_CHHEAD
179 linenum
%  S_STAFF
% staff 1
save
718.28 656.10 1.000000 4n
714.60 655.35 moveto
714.60 635.10 lineto stroke
737.96 656.10 1.000000 4rest
restore
%  S_STAFF
% staff 2
save
718.28 623.10 1.000000 4n
0.70 setlinewidth
712.05 620.10 moveto
724.51 620.10 lineto stroke
718.28 617.10 1.000000 4n
714.60 622.35 moveto
714.60 596.10 lineto stroke
737.96 596.10 1.000000 4n
741.64 596.85 moveto
741.64 617.10 lineto stroke
restore
%  S_CURVE
181 linenum
517.82 794.10 moveto
517.69 794.17 lineto
513.83 810.42 519.54 821.94 534.81 828.72 curveto
550.08 835.50 562.45 832.01 571.93 818.24 curveto
571.85 817.95 lineto
562.19 830.71 550.05 833.84 535.42 827.35 curveto
520.80 820.86 514.97 809.75 517.95 794.03 curveto
fill
%  S_CURVE
182 linenum
549.76 817.35 moveto
549.63 817.58 lineto
550.74 819.84 552.56 820.98 555.08 820.98 curveto
557.60 820.98 559.42 819.84 560.53 817.58 curveto
560.27 817.12 lineto
558.98 818.85 557.25 819.72 555.08 819.72 curveto
552.91 819.72 551.18 818.85 549.89 817.12 curveto
fill
%  S_CURVE
183 linenum
747.87 832.35 moveto
747.82 832.58 lineto
752.11 834.77 756.67 835.86 761.50 835.85 curveto
764.07 835.84 766.49 835.25 768.78 834.08 curveto
768.69 833.62 lineto
766.39 834.47 764.02 834.88 761.57 834.85 curveto
756.85 834.79 752.30 833.88 747.92 832.12 curveto
fill
%  S_CURVE
184 linenum
343.49 662.85 moveto
343.60 663.06 lineto
346.21 660.89 349.19 659.53 352.54 659.00 curveto
355.89 658.47 359.15 658.83 362.30 660.08 curveto
362.37 659.61 lineto
359.25 657.82 355.90 657.20 352.34 657.77 curveto
348.79 658.34 345.80 659.96 343.39 662.64 curveto
fill
%  S_BAR
185 linenum
758.50 659.10 1.000000 dot
758.50 653.10 1.000000 dot
762.50 668.10 moveto
762.50 644.10 lineto stroke
3.00 setlinewidth
766.50 668.10 moveto
766.50 644.10 lineto stroke
0.70 setlinewidth
758.50 605.10 1.000000 dot
758.50 599.10 1.000000 dot
762.50 614.10 moveto
762.50 590.10 lineto stroke
3.00 setlinewidth
766.50 614.10 moveto
766.50 590.10 lineto stroke
0.70 setlinewidth
%  Printing header/footer
/Times-Roman findfont
12 scalefont
setfont
345.83 998.35 moveto
(Kaleidakustikon Layer 10) show
/Times-Roman findfont
12 scalefont
setfont
408.00 985.61 moveto
showpage
restore
%%Trailer
%%DocumentFonts: /Times-Roman /NewCenturySchlbk-Bold /NewCenturySchlbk-BoldItalic /Mfont0 
%%Pages: 1

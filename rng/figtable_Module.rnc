# **************************************************************

# NAME:     Music Encoding Initiative (MEI) schema component:
#           figtable_Module.rng
# 
# NOTICE:   Copyright (c) 2010 by the Music Encoding Initiative (MEI)
#           Council.
# 
#           Licensed under the Educational Community License, Version
#           2.0 (the "License"); you may not use this file except in
#           compliance with the License. You may obtain a copy of the
#           License at http://www.osedu.org/licenses/ECL-2.0.
# 
#           Unless required by applicable law or agreed to in writing,
#           software distributed under the License is distributed on
#           an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#           KIND, either express or implied. See the License for the
#           specific language governing permissions and limitations
#           under the License.
# 
#           This is a derivative work based on earlier versions of the
#           schema copyright (c) 2001-2006 Perry Roland and the Rector
#           and Visitors of the University of Virginia; licensed under
#           the Educational Community License version 1.0.
# 
# CONTACT:  contact@music-encoding.org 

namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
default namespace mei = "http://www.music-encoding.org/ns/mei"
namespace sch = "http://purl.oclc.org/dsdl/schematron"
namespace tei = "http://www.tei-c.org/ns/1.0"
namespace xhtml = "http://www.w3.org/1999/xhtml"
namespace xlink = "http://www.w3.org/1999/xlink"

# Figure and Table module

# Declare module attr classes

## Attributes shared by table cells
att.tabular &=
  [
    a:documentation [
      xml:lang = "eng"
      "the number of columns spanned by this\x{a}" ~
      "          cell."
    ]
  ]
  attribute colspan { xsd:positiveInteger }?,
  [
    a:documentation [
      xml:lang = "eng"
      "the number of rows spanned by this\x{a}" ~
      "          cell."
    ]
  ]
  attribute rowspan { xsd:positiveInteger }?
# Declare module model classes
model.figureLike &= fig
model.graphicLike &= graphic
model.figdescLike &= figdesc
[
  a:documentation [
    xml:lang = "eng"
    "groups table-like\x{a}" ~
    "      elements."
  ]
]
model.tableLike &= table
# Declare module elements
content.graphic = empty
graphic =
  [
    a:documentation [
      xml:lang = "eng"
      "graphic ― Indicates the location of an\x{a}" ~
      "        inline graphic, illustration, or figure. This element is modelled on an\x{a}" ~
      "        element in the Text Encoding Initiative (TEI)."
    ]
  ]
  element graphic { attlist.graphic, content.graphic }
attlist.graphic =
  att.common,
  att.internetmedia,
  att.facsimile,
  att.link.external,
  att.measurement,
  att.typed,
  [
    a:documentation [
      xml:lang = "eng"
      "measurement of the vertical dimension of\x{a}" ~
      "          an image."
    ]
  ]
  attribute height { xsd:positiveInteger }?,
  [
    a:documentation [
      xml:lang = "eng"
      "measurement of the horizontal dimension of\x{a}" ~
      "        an image."
    ]
  ]
  (att.width?)
content.fig = model.captionLike?, figdesc?, model.graphicLike*
fig =
  [
    a:documentation [
      xml:lang = "eng"
      "figure ― groups elements representing or\x{a}" ~
      "        containing graphic information such as an illustration or figure. This\x{a}" ~
      "        element is modelled on the figure element in the Text Encoding Initiative\x{a}" ~
      "        (TEI)."
    ]
  ]
  element fig { attlist.fig, content.fig }
attlist.fig =
  att.common, att.facsimile, att.link.common, att.link.external, att.xy
content.figdesc =
  (text
   | model.graphicprimitiveLike
   | model.textcomponentLike
   | model.annotLike)*
figdesc =
  [
    a:documentation [
      xml:lang = "eng"
      "figure description ― Contains a brief\x{a}" ~
      "        prose description of the appearance or content of a graphic figure, for\x{a}" ~
      "        use when documenting an image without displaying it. Best practice\x{a}" ~
      "        suggests the use of controlled vocabulary. Don't confuse this element\x{a}" ~
      "        with a figure caption. A caption is text primarily intended for display\x{a}" ~
      "        with an illustration. It may or may not function as a description of the\x{a}" ~
      "        illustration. This element is modelled on an element in the Text Encoding\x{a}" ~
      "        Initiative (TEI)."
    ]
  ]
  element figdesc { attlist.figdesc, content.figdesc }
attlist.figdesc = att.common, att.lang
content.table = model.captionLike?, tr+
table =
  [
    a:documentation [
      xml:lang = "eng"
      "table ― Visual layout in tabular form.\x{a}" ~
      "        This element is modelled on elements in Encoded Archival Description\x{a}" ~
      "        (EAD), Text Encoding Initiative (TEI), and HTML."
    ]
  ]
  element table { attlist.table, content.table }
attlist.table = att.common, att.facsimile, att.lang, att.xy
content.td =
  (text
   | model.textcomponentLike
   | model.textphraseLike
   | model.editLike
   | model.transcriptionLike)*
td =
  [
    a:documentation [
      xml:lang = "eng"
      "table data ― Designates a table cell that\x{a}" ~
      "        contains data as opposed to a cell that contains column or row heading\x{a}" ~
      "        information. The colspan and rowspan attributes tabular display\x{a}" ~
      "        rendering information. This element is modelled on an element in\x{a}" ~
      "        HTML."
    ]
  ]
  element td { attlist.td, content.td }
attlist.td = att.common, att.facsimile, att.lang, att.xy, att.tabular
content.th =
  (text
   | model.textcomponentLike
   | model.textphraseLike
   | model.editLike
   | model.transcriptionLike)*
th =
  [
    a:documentation [
      xml:lang = "eng"
      "table header ― Designates a table cell\x{a}" ~
      "        containing column or row heading information as opposed to one\x{a}" ~
      "        containing data. The colspan and rowspan attributes tabular display\x{a}" ~
      "        rendering information. This element is modelled on an element in\x{a}" ~
      "        HTML."
    ]
  ]
  element th { attlist.th, content.th }
attlist.th = att.common, att.facsimile, att.lang, att.xy, att.tabular
content.tr = (th | td)+
tr =
  [
    a:documentation [
      xml:lang = "eng"
      "table row ― A formatting element that\x{a}" ~
      "        contains one or more <td> or <th> elements\x{a}" ~
      "        (cells) in a <table>. A cell is the intersection of a row\x{a}" ~
      "        and a column. The precise rendition of the table and its cells should be\x{a}" ~
      "        specified in a style sheet. This element is modelled on an element in\x{a}" ~
      "        HTML."
    ]
  ]
  element tr { attlist.tr, content.tr }
attlist.tr = att.common, att.facsimile, att.lang, att.xy

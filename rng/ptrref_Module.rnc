# **************************************************************

# NAME:     Music Encoding Initiative (MEI) schema component:
#           ptrref_Module.rng
# 
# NOTICE:   Copyright (c) 2010 by the Music Encoding Initiative (MEI)
#           Council.
# 
#           Licensed under the Educational Community License, Version
#           2.0 (the "License"); you may not use this file except in
#           compliance with the License. You may obtain a copy of the
#           License at http://www.osedu.org/licenses/ECL-2.0.
# 
#           Unless required by applicable law or agreed to in writing,
#           software distributed under the License is distributed on
#           an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#           KIND, either express or implied. See the License for the
#           specific language governing permissions and limitations
#           under the License.
# 
#           This is a derivative work based on earlier versions of the
#           schema copyright (c) 2001-2006 Perry Roland and the Rector
#           and Visitors of the University of Virginia; licensed under
#           the Educational Community License version 1.0.
# 
# CONTACT:  contact@music-encoding.org 

namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
default namespace mei = "http://www.music-encoding.org/ns/mei"
namespace sch = "http://purl.oclc.org/dsdl/schematron"
namespace tei = "http://www.tei-c.org/ns/1.0"
namespace xhtml = "http://www.w3.org/1999/xhtml"
namespace xlink = "http://www.w3.org/1999/xlink"

# PtrRefs module

# Declare module attr classes

# Declare module model classes
[
  a:documentation [
    xml:lang = "eng"
    "groups elements used for purposes of\x{a}" ~
    "      location and reference."
  ]
]
model.locrefLike &= extptr | extref | model.ptrLike | ref
[
  a:documentation [
    xml:lang = "eng"
    "groups empty elements used for purposes of\x{a}" ~
    "      location and reference."
  ]
]
model.ptrLike &= ptr
# Declare module elements
content.extptr = empty
extptr =
  [
    a:documentation [
      xml:lang = "eng"
      "external pointer ― An empty linking\x{a}" ~
      "        element that uses attributes to connect the MEI document to an external\x{a}" ~
      "        electronic object. Either the entityref or href attribute may be used to\x{a}" ~
      "        identify the external object. Don't confuse this element with the\x{a}" ~
      "        <ptr< element, which is an internal link for movement from\x{a}" ~
      "        one place in the MEI document to another in the same document. This\x{a}" ~
      "        element is modelled on an element in Encoded Archival Description\x{a}" ~
      "        (EAD)."
    ]
  ]
  element extptr { attlist.extptr, content.extptr }
attlist.extptr =
  att.common, att.internetmedia, att.link.common, att.link.external
content.extref = (text | model.textphraseLike)*
extref =
  [
    a:documentation [
      xml:lang = "eng"
      "external reference ― A linking element\x{a}" ~
      "        that can include text and sub-elements as part of its reference to an\x{a}" ~
      "        electronic object that is external to the MEI document. Either the\x{a}" ~
      "        entityref or href attribute may be used to identify the external object.\x{a}" ~
      "        Don't confuse this element with the <ref> element, which\x{a}" ~
      "        is an internal link for movement from one place in the MEI document to\x{a}" ~
      "        another in the same document. This element is modelled on an element in\x{a}" ~
      "        Encoded Archival Description (EAD)."
    ]
  ]
  element extref { attlist.extref, content.extref }
attlist.extref =
  att.common, att.lang, att.link.common, att.link.external
content.ptr = empty
ptr =
  [
    a:documentation [
      xml:lang = "eng"
      "pointer ― An empty internal linking\x{a}" ~
      "        element that uses attributes to provide for movement from one place in\x{a}" ~
      "        an MEI document to another place in the same document. Unlike the\x{a}" ~
      "        <ref> element, <ptr> cannot contain text or\x{a}" ~
      "        sub-elements to describe the referenced object. Don't confuse this\x{a}" ~
      "        element with <extptr> which is used to connect the MEI\x{a}" ~
      "        document to an external electronic object. This element is modelled on an\x{a}" ~
      "        element in Encoded Archival Description (EAD)."
    ]
  ]
  element ptr { attlist.ptr, content.ptr }
attlist.ptr = att.common, att.link.common, att.link.internal
content.ref = (text | model.textphraseLike)*
ref =
  [
    a:documentation [
      xml:lang = "eng"
      "reference ― An internal linking element\x{a}" ~
      "        that provides for movement from one place in a MEI document to another\x{a}" ~
      "        point in the same document. Unlike the <ptr> element,\x{a}" ~
      "        <ref> may contain text and sub-elements to describe the\x{a}" ~
      "        destination. Don't confuse this element with <extref>\x{a}" ~
      "        which provides for linking to an electronic object that is external to\x{a}" ~
      "        the MEI document. This element is modelled on an element in Encoded\x{a}" ~
      "        Archival Description (EAD)."
    ]
  ]
  element ref { attlist.ref, content.ref }
attlist.ref = att.common, att.lang, att.link.common, att.link.internal

%!PS-Adobe-1.0
%%Creator: Mup (Version 6.1)
%%Title: music:  from kaleidakustikon_9.mup
%%CreationDate: Tue Apr 2 14:46:5 2013
%%Pages: (atend)
%%DocumentFonts: (atend)
%%BoundingBox: 0 0 612 792
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
% Mup prolog Copyright (c) 1995, 1996, 1997, 1998, 1999, 2000, 2003, 2004,
% 2008, 2009, 2012 by Arkkra Enterprises
% All rights reserved

% Mup PostScript Prolog 6.1 for use with Mup 6.1

% lwid is used as the width of a standard (thin) line in the music
% character definitions.
/lwid 70 def
/halflwid lwid 2 div def

% Define the following for use in do_upshortnote, do_dnshortnote, and
% do_shortrest; it has to be done outside of the music font definition.
/utildict 10 dict def
utildict begin
	/setnumflags	{	/numflags	exch def } def
	/sethooksm1	{	/hooksm1	exch def } def
	/setoffsets	{	/offsets	exch def } def
	/setx		{	/x		exch def } def
	/sety		{	/y		exch def } def
end

% Define a music character font.  Each music character is defined as if it
% were a normal ASCII character in a strange font where "A" looks like a
% treble clef, "B" looks like a bass clef, etc.

/mfont0 100 dict def
mfont0 begin
	/FontType 3 def
	/FontMatrix [ .001 0 0 0.001 0 0 ] def
	/FontBBox [ -2000 -4030 2000 4030 ] def
	/FontName (Mfont0) def

	% set up Encoding vector with standard names
	/Encoding 256 array def
	StandardEncoding Encoding copy
	pop

	% the following definitions are used for quarter rests
	/topx -170 def /topy 950 def
	/cor1x 250 def /cor1y 450 def
	/cor2x -300 def /cor2y 200 def
	/cor3x 250 def /cor3y -400 def

	% the following definitions are used for double sharps
	/limit 300 halflwid add def
	/off 70 def
	/inbendsmall limit 200 sub def
	/inbendbig limit 20 sub def
	/outbendsmall 100 def
	/outbendbig outbendsmall off add def

	%%%%% define routines that will be used by multiple characters %%%%%
	/do_1n {
		gsave
		newpath -10 rotate 1.6 1 scale
		0 0 325 0 360 arc		%outer ellipse
		1 1.6 div 1 scale 10 rotate	%back to original
		35 rotate 0.85 1.1 scale
		0 0 275 0 360 arc		%inner ellipse
		eofill
		grestore
	} def
	/do_upflag {
		-315 0 moveto
		-300 100 -100 480 0 600 curveto
		300 960 350 1500 200 1700 curveto
		130 1700 lineto
		350 1200 50 650 -315 600 curveto
		fill
	} def
	/do_flat {
		-250 -400 moveto	%outer edge of loop
		500 0 350 650 -250 160 curveto
		-250 160 lwid sub lineto %inner edge of loop
		100 400 300 0 -250 -400 lwid add curveto
		fill

		lwid setlinewidth	%stem
		-250 1100 moveto -250 -400 lineto stroke
	} def
	/do_diamond {
		newpath
		420 0 moveto 0 300 lineto -420 0 lineto
		0 -300 lineto closepath
		259 -29 moveto -41 185 lineto -259 29 lineto
		41 -185 lineto closepath
		eofill
	} def
	/do_2n {
		gsave
		newpath 25 rotate 1.4 1 scale
		0 0 315 0 360 arc		%outer ellipse
		1 1.4 div 1 scale		%back to original
		1.3 0.5 scale
		0 0 310 0 360 arc		%inner ellipse
		eofill
		grestore
	} def
	/do_4n {
		gsave
		newpath 25 rotate 1.35 1 scale
		0 0 310 0 360 arc fill
		grestore
	} def
	/do_com {
		newpath
		330 250 150 0 360 arc fill	%knob at upper right
		465 300 moveto			%outer boundary
		410 500 200 635 0 635 curveto
		-750 635 -750 -635 0 -635 curveto
		350 -635 480 -300 500 -100 curveto
		430 -100 lineto			%inner boundary
		380 -300 250 -565 0 -565 curveto
		-450 -565 -450 565 0 565 curveto
		200 565 370 350 395 300 curveto
		fill
	} def
	/do_ferm {
		0 0 800 lwid sub 0 180 arc	%inner arc
		-800 0 lineto
		0 270 lwid sub 800 180 0 arcn	%outer arc
		800 0 lineto fill
		0 120 120 0 360 arc fill	%the dot
	} def
	/do_mor {
		gsave
		0.7 1 scale	%scrunch the following horizontally
		45 rotate	%to pretend all lines horz or vertical
		0 1 1 {
			pop	%we don't need the loop variable
			%one half of the mordent
			0 40 moveto 350 40 lineto 350 -460 lineto
			750 -460 lineto 750 -540 lineto
			150 -540 lineto 150 -40 lineto
			0 -40 lineto fill
			180 rotate	%to do the other half
		} for
		grestore
	} def
	/do_turn {
		gsave
		0 1 1 {
			pop	%we don't need the loop variable
			0 -100 moveto	%outer boundary
			200 -400 625 -400 625 0 curveto
			625 200 500 325 300 325 curveto
			300 185 lineto	%inner boundary
			450 255 555 150 555 0 curveto
			555 -350 250 -250 0 100 curveto
			fill
			300 255 70 0 360 arc fill %knob on end
			180 rotate	%to do the other half
		} for
		grestore
	} def

	/do_upshortnote {
		utildict begin
		setnumflags		%set numflags from the stack
		gsave
		-330 0 translate	%half a flag width
		do_4n			%do a quarter note head
		lwid setlinewidth
		370 0 moveto
		370 2100 numflags 2 sub flagsep mul add lineto stroke
		670 2100 numflags 2 sub flagsep mul add translate
		1 -1 scale		%reflect across X axis
		0 1 numflags 1 sub {
			do_upflag	%do an upflag
			pop		%we don't need the loop variable
			0 flagsep translate
		} for
		grestore
		end
	} def

	/do_dnshortnote {
		utildict begin
		setnumflags		%set numflags from the stack
		do_4n			%do a quarter note head
		lwid setlinewidth
		-370 0 moveto
		-370 -2100 numflags 2 sub flagsep mul sub lineto stroke
		gsave
		-70 -2100 numflags 2 sub flagsep mul sub translate
		0 1 numflags 1 sub {
			do_upflag	%do an upflag
			pop		%we don't need the loop variable
			0 flagsep translate
		} for
		grestore
		end
	} def

	/do_shortrest {
		utildict begin
		sety setx setoffsets sethooksm1	%set variable from the stack
		gsave
		-105.8 offsets mul -600 offsets mul translate
		0 1 hooksm1 {		%loop once per hook
			newpath
			1 setlinewidth
			gsave
			1 1.2 scale
			-150 300 1.2 div 140 0 360 arc fill 	%the dot
			grestore
			lwid setlinewidth
			-50 700 550 255 315 arc		%rest of the hook
			hooksm1 lt { stroke 105.8 600 translate } if
		} for
		x y lineto stroke
		grestore
		end
	} def


	% subsidiary dictionary of character definitions
	/CharStrings 128 dict def
	CharStrings begin

		/.notdef {} def

		% Here are the definitions of the characters.  A stepsize here
		% is 300 units (assuming the character is drawn at its default
		% size).

		% gclef
		/A {
			newpath
			%start with inner curl, inside boundary
			-50 -300 moveto
			-450 600 700 700 750 0 curveto
			750 -800 -700 -800 -700 200 curveto
			-700 900 500 1400 520 2250 curveto
			520 2900 300 3000 200 3000 curveto
			100 3000 -400 2500 -200 1800 curveto
			350 -600 lineto
			720 -1600 0 -1650 -400 -1400 curveto

			%go back to start, drawing the other boundary
			-400 -1480 lineto
			0 -1700 800 -1700 430 -600 curveto
			-120 1800 lineto
			-300 2400 200 2800 250 2800 curveto
			400 2800 430 2700 430 2450 curveto
			430 1800 -900 1200 -900 300 curveto
			-750 -900 800 -900 850 0 curveto
			900 1100 -750 900 -120 -300 curveto fill

			%circle at the bottom
			-300 -1250 250 0 360 arc fill
		} def

		% fclef
		/B {
			newpath
			%start with outside boundary, at bottom
			-1000 -1700 moveto
			100 -1100 500 -600 450 0 curveto
			450 850 -1100 850 -950 0 curveto

			%go back to start, drawing the other boundary
			-880 0 lineto
			-920 400 -600 560 -300 560 curveto
			0 560 150 400 150 0 curveto
			150 -400 100 -900 -1000 -1620 curveto fill

			%circle at the left
			newpath
			-700 0 250 0 360 arc fill

			%do the two dots after the main curve
			700 -300 100 0 360 arc fill
			700 300 100 0 360 arc fill
		} def

		% cclef
		/C {
			gsave
			%do upper curved part, then scale to do mirror image
			0 1 1 {
				pop	%we don't need the loop variable
				%outer boundary of curve
				-170 0 moveto 100 300 lineto
				400 -200 750 300 750 650 curveto
				750 1100 450 1235 250 1235 curveto
				0 1235 -143 1100 -143 950 curveto

				%inner boundary of curve
				0 950 lineto
				0 1100 30 1165 250 1165 curveto
				300 1165 450 1100 450 650 curveto
				450 400 400 -100 100 400 curveto
				-270 0 lineto fill
				%stroke
				%-270 0 moveto 100 400 lineto
				%400 -100 450 400 450 650 curveto
				%450 1100 300 1165 250 1165 curveto
				%30 1165 0 1100 0 950 curveto
				%stroke

				%elliptical ball at end of curve
				gsave
				1.3 1 scale
				10 950 120 0 360 arc fill
				grestore
				1 -1 scale	%reflect across X axis
			} for
			grestore

			% two vertical lines on the left
			300 setlinewidth -600 -1200 halflwid sub moveto
			-600 1200 halflwid add lineto stroke
			lwid setlinewidth -300 -1200 halflwid sub moveto
			-300 1200 halflwid add lineto stroke
		} def

		% dblwhole
		/D {
			do_1n		%do a whole note
			lwid setlinewidth
			-490 -600 moveto -490 600 lineto stroke
			490 -600 moveto 490 600 lineto stroke
		} def

		% 1n
		/E {
			do_1n		%do a whole note
		} def

		% 2n
		/F {
			do_2n		%do a half note
		} def

		% 4n
		/G {
			do_4n		%do a quarter note head
		} def

		% upflag
		/H {
			do_upflag		%do an upflag
		} def

		% dnflag
		/I {
			gsave
			1 -1 scale	%reflect across X axis
			do_upflag		%do an upflag
			grestore
		} def

		% dwhrest
		/J {
			300 setlinewidth
			0 0 moveto 0 600 lineto stroke
		} def

		% 1rest
		/K {
			lwid setlinewidth
			-750 600 moveto 750 600 lineto stroke
			300 setlinewidth
			-400 450 moveto 400 450 lineto stroke
		} def

		% 2rest
		/L {
			lwid setlinewidth
			-750 0 moveto 750 0 lineto stroke
			300 setlinewidth
			-400 150 moveto 400 150 lineto stroke
		} def

		% 4rest
		/M {
			newpath
			cor3x cor3y halflwid add moveto
			%-400 -200 -450 -650 50 -950 lwid add curveto
			-450 -50 -450 -650 50 -950 lwid add curveto
			-150 -650 -100 -250 cor3x cor3y halflwid sub curveto
			fill

			cor1x cor1y moveto cor1x 200 sub cor1y 200 add lineto
			cor2x cor2y lineto cor2x 200 add cor2y 200 sub lineto
			fill

			lwid setlinewidth
			topx topy moveto cor1x cor1y lineto stroke
			cor2x cor2y moveto cor3x cor3y lineto stroke
		} def

		% 8rest
		/N {
			0 0 0 -600 do_shortrest
		} def

		% 16rest
		/O {
			1 1 100 -1200 do_shortrest
		} def

		% 32rest
		/P {
			2 1 0 -1800 do_shortrest
		} def

		% 64rest
		/Q {
			3 2 -80 -2100 do_shortrest
		} def

		% 128rest
		/R {
			4 2 -150 -2700 do_shortrest
		} def

		% 256rest
		/S {
			5 3 -280 -3300 do_shortrest
		} def

		% dot
		/T {
			newpath
			0 0 120 0 360 arc fill
		} def

		% nat
		/U {
			% fill crossbars so that we can do parallelograms
			-235 -470 moveto -235 -270 lineto
			235 -130 lineto 235 -330 lineto fill
			-235 130 moveto -235 330 lineto
			235 470 lineto 235 270 lineto fill

			% vertical strokes
			lwid setlinewidth
			-200 -380 moveto -200 850 lineto stroke
			200 -850 moveto 200 380 lineto stroke
		} def

		% sharp
		/V {
			% fill crossbars so that we can do parallelograms
			-325 -480 moveto -325 -280 lineto
			325 -120 lineto 325 -320 lineto fill
			-325 120 moveto -325 320 lineto
			325 480 lineto 325 280 lineto fill

			% vertical strokes
			lwid setlinewidth
			-150 -930 moveto -150 880 lineto stroke
			150 -880 moveto 150 930 lineto stroke
		} def

		% flat
		/W {
			do_flat		%do a flat
		} def

		% dblsharp
		/X {
			gsave
			0 1 3 {		%loop once for each of 4 sticks
				pop	%we don't need the loop variable
				0 off neg moveto
				outbendbig outbendsmall lineto
				inbendbig inbendsmall lineto
				limit limit lineto
				inbendsmall inbendbig lineto
				outbendsmall outbendbig lineto
				off neg 0 lineto
				fill
				-90 rotate
			} for
			grestore
		} def

		% dblflat
		/Y {
			-290 580 290 {	%loop once for each flat

				gsave
				1 setlinewidth
				0 translate	%translate left/right (loop var)
				do_flat		%do a flat
				grestore

			} for
		} def

		% xnote
		/Z {
			gsave
			1.15 1 scale 120 setlinewidth 1 setlinecap	%round
			-300 -300 moveto 300 300 lineto stroke
			-300 300 moveto 300 -300 lineto stroke
			grestore
		} def

		% dwhdiamond
		/a {
			do_diamond	%do a diamond
			lwid setlinewidth
			-420 -600 moveto -420 600 lineto stroke
			420 -600 moveto 420 600 lineto stroke
		} def

		% diamond
		/b {
			do_diamond	%do a diamond
		} def

		% filldiamond
		/c {
			420 0 moveto 0 300 lineto
			-420 0 lineto 0 -300 lineto fill
		} def

		% up2n
		/d {
			lwid setlinewidth
			380 0 moveto 380 2100 lineto stroke
			do_2n		%do a half note
		} def

		% dn2n
		/e {
			lwid setlinewidth
			-380 0 moveto -380 -2100 lineto stroke
			do_2n		%do a half note
		} def

		% up4n
		/f {
			do_4n		%do a quarter note head
			lwid setlinewidth
			370 0 moveto 370 2100 lineto stroke
		} def

		% dn4n
		/g {
			do_4n		%do a quarter note head
			lwid setlinewidth
			-370 0 moveto -370 -2100 lineto stroke
		} def

		% up8n
		/h {
			gsave
			-330 0 translate	% half a flag width
			do_4n		%do a quarter note head
			lwid setlinewidth
			370 0 moveto 370 2100 lineto stroke
			670 2100 translate
			1 -1 scale	%reflect across X axis
			do_upflag		%do an upflag
			grestore
		} def

		% dn8n
		/i {
			do_4n		%do a quarter note head
			lwid setlinewidth
			-370 0 moveto -370 -2100 lineto stroke
			gsave
			-70 -2100 translate
			do_upflag		%do an upflag
			grestore
		} def

		% up16n
		/j {
			2 do_upshortnote
		} def

		% dn16n
		/k {
			2 do_dnshortnote
		} def

		% up32n
		/l {
			3 do_upshortnote
		} def

		% dn32n
		/m {
			3 do_dnshortnote
		} def

		% up64n
		/n {
			4 do_upshortnote
		} def

		% dn64n
		/o {
			4 do_dnshortnote
		} def

		% up128n
		/p {
			5 do_upshortnote
		} def

		% dn128n
		/q {
			5 do_dnshortnote
		} def

		% up256n
		/r {
			6 do_upshortnote
		} def

		% dn256n
		/s {
			6 do_dnshortnote
		} def

		% com
		/t {
			do_com		%do a common time symbol
		} def

		% cut
		/u {
			do_com		%do a common time symbol
			lwid setlinewidth
			0 -900 moveto 0 900 lineto stroke
		} def

		% begped
		/v {
			lwid setlinewidth
			-200 600 moveto -200 0 lineto 200 0 lineto stroke
		} def

		% pedal
		/w {
			lwid setlinewidth
			-500 0 moveto -450 0 lineto 0 600 lineto
			450 0 lineto 500 0 lineto stroke
		} def

		% endped
		/x {
			lwid setlinewidth
			200 600 moveto 200 0 lineto -200 0 lineto stroke
		} def

		% dnbow
		/y {
			lwid setlinewidth
			-350 0 moveto -350 900 lineto stroke
			350 0 moveto 350 900 lineto stroke
			200 setlinewidth
			-350 800 moveto 350 800 lineto stroke
		} def

		% upbow
		/z {
			lwid setlinewidth
			-300 900 moveto 0 0 lineto 300 900 lineto stroke
		} def

		% wedge
		/one {
			0 0 moveto -150 500 lineto 150 500 lineto fill
		} def

		% uwedge
		/two {
			-150 0 moveto 150 0 lineto 0 500 lineto fill
		} def

		% ferm
		/three {
			newpath
			do_ferm		%do a right side up fermata
		} def

		% uferm
		/four {
			newpath
			gsave
			0 270 lwid sub 800 add translate %baseline at bottom
			180 rotate			%upside down
			do_ferm		%do a right side up fermata
			grestore
		} def

		% sign
		/five {
			gsave
			%do upper left curved part, upper right dot;
			%then rotate 180 to do other half
			0 1 1 {
				pop	%we don't need the loop variable
				0 100 moveto		%inner boundary
				-1000 300 -400 750 -200 700 curveto
				-200 800 lineto		%outer boundary
				-550 900 -1100 100 0 -100 curveto
				fill
				%dot at end of curve
				-200 700 100 0 360 arc fill
				%dot in upper right quadrant
				500 200 70 0 360 arc fill
				180 rotate
			} for
			grestore

			%slash through middle
			lwid setlinewidth
			-400 -800 moveto 400 800 lineto stroke
		} def

		% coda
		/six {
			newpath
			gsave
			0.6 1 scale
			0 0 550 0 360 arc	%outside boundary
			1 0.6 div 1 scale	%back to original
			0.9 1 scale
			0 0 650 0 360 arc	%inside boundary
			eofill
			grestore
			lwid setlinewidth
			0 -850 moveto 0 850 lineto stroke
			-800 0 moveto 800 0 lineto stroke
		} def

		% mor
		/seven {
			do_mor		%do a mordent
		} def

		% invmor
		/eight {
			do_mor		%do a mordent
			lwid setlinewidth
			0 -450 moveto 0 450 lineto stroke
		} def

		% turn
		/nine {
			do_turn		%do a turn
		} def

		% invturn
		/zero {
			gsave
			1 -1 scale	%reflect across X axis
			do_turn		%do a turn
			grestore
		} def

		% acc_gt
		/numbersign {
			lwid setlinewidth
			-500 300 moveto 500 0 lineto -500 -300 lineto stroke
		} def

		% acc_hat
		/dollar {
			newpath
			-365 0 moveto 0 860 lineto 365 0 lineto
			150 0 lineto -75 530 lineto -300 0 lineto fill
		} def

		% acc_uhat
		/quotedbl {
			newpath
			365 860 moveto 0 0 lineto -365 860 lineto
			-150 860 lineto 75 330 lineto 300 860 lineto fill
		} def

		% tr
		/asterisk {
			%vertical bar of t
			-350 1000 moveto -550 200 lineto
			-612.5 -50 -212.5 -50 -160 200 curveto
			-230 200 lineto
			-300 50 -420 50 -400 200 curveto
			-200 1000 lineto fill

			%crossbar of t and vertical bar of r
			-700 600 moveto -160 600 lineto
			20 600 30 520 60 440 curveto
			-50 0 lineto 70 0 lineto 180 440 lineto
			190 480 100 670 -150 670 curveto
			-690 670 lineto fill

			%horizontal curve of r
			100 480 moveto
			300 630 450 700 650 550 curveto
			560 480 lineto
			450 630 300 560 100 390 curveto
			fill

			%knob at end of r
			600 460 100 0 360 arc fill
		} def

		% leg
		/comma {
			100 setlinewidth
			-400 0 moveto 400 0 lineto stroke
		} def

		% rr
		/hyphen {
			100 setlinewidth
			-400 0 moveto 0 1000 lineto stroke
			0 0 moveto 400 1000 lineto stroke
		} def

		% measrpt
		/period {
			newpath -450 400 150 0 360 arc fill
			newpath 450 -400 150 0 360 arc fill
			200 setlinewidth
			-550 -600 moveto 550 600 lineto stroke
		} def

		% copyright
		/slash {
			lwid setlinewidth
			newpath 0 400 400 0 360 arc stroke
			newpath 0 400 200 45 315 arc stroke
		} def

		% dim
		/quoteleft {
			50 setlinewidth
			newpath 0 640 220 0 360 arc stroke
		} def

		% halfdim
		/quoteright {
			50 setlinewidth
			newpath 0 640 220 0 360 arc stroke
			newpath -340 300 moveto 340 980 lineto stroke
		} def

		% triangle
		/asciicircum {
			50 setlinewidth
			newpath -340 -10 moveto 0 710 lineto
			340 -10 lineto closepath stroke
		} def

		% qwhrest
		/ampersand {
			300 setlinewidth
			0 -600 moveto 0 600 lineto stroke
		} def

		% ll1rest
		/exclam {
			310 setlinewidth
			-400 455 moveto 400 450 lineto stroke
		} def

		% ll2rest
		/at {
			310 setlinewidth
			-400 145 moveto 400 150 lineto stroke
		} def
	end

	/BuildChar {

		exch begin
		Encoding exch get

		dup
		Mcbbox0 exch get
		aload pop setcachedevice

		CharStrings exch get
		exec
		end
	} def
end


% Define another music character font, since there are too many to fit in one
% font.  It works the same way as the first one.

/mfont1 100 dict def
mfont1 begin
	/FontType 3 def
	/FontMatrix [ .001 0 0 0.001 0 0 ] def
	/FontBBox [ -2000 -4030 2000 4030 ] def
	/FontName (Mfont1) def

	% set up Encoding vector with standard names
	/Encoding 256 array def
	StandardEncoding Encoding copy
	pop

	%%%%% define routines that will be used by multiple characters %%%%%

	/do_dwh_bars {
		% the two bars surrounding a double whole note
		lwid setlinewidth
		-420 -600 moveto -420 600 lineto stroke
		420 -600 moveto 420 600 lineto stroke
	} def
	/do_righttriangle {
		newpath
		420 270 moveto -420 270 lineto 350 -300 lineto 420 -300 lineto
		350 150 moveto -140 150 lineto 350 -213 lineto
		eofill
	} def
	/do_fillrighttriangle {
		newpath
		420 270 moveto -420 270 lineto 350 -300 lineto 420 -300 lineto
		fill
	} def
	/do_rectangle {
		newpath
		420 270 moveto -420 270 lineto -420 -270 lineto 420 -270 lineto
		350 150 moveto -350 150 lineto -350 -150 lineto 350 -150 lineto
		eofill
	} def
	/do_isostriangle {
		newpath
		0 300 moveto -420 -270 lineto 420 -270 lineto
		0 182 moveto -245 -150 lineto 245 -150 lineto
		eofill
	} def
	/do_piewedge {
		newpath
		0 -300 moveto 0 -244 514 35 145 arc
		0 -209 moveto 0 -244 394 43 137 arc
		eofill
	} def
	/do_semicircle {
		newpath
		gsave
		1 1.357 scale 420 199 moveto 0 199 420 180 360 arc
		1 1.09 scale 350 111 moveto 0 199 350 194.1 345.9 arc
		eofill
		grestore
	} def
	/do_slashhead {
		newpath
		lwid setlinewidth
		-620 -530 moveto -480 -670 lineto 620 530 lineto 480 670 lineto
		closepath stroke
	} def

	% subsidiary dictionary of character definitions
	/CharStrings 128 dict def
	CharStrings begin

		/.notdef {} def

		% Here are the definitions of the characters.  A stepsize here
		% is 300 units (assuming the character is drawn at its default
		% size).

		% dwhrighttriangle
		/A {
			do_righttriangle
			do_dwh_bars
		} def

		% righttriangle
		/B {
			do_righttriangle
		} def

		% fillrighttriangle
		/C {
			newpath
			420 270 moveto -420 270 lineto 350 -300 lineto
			420 -300 lineto
			fill
		} def

		% udwhrighttriangle
		/D {
			gsave
			180 rotate
			do_righttriangle
			do_dwh_bars
			grestore
		} def

		% urighttriangle
		/E {
			gsave
			180 rotate
			do_righttriangle
			grestore
		} def

		% ufillrighttriangle
		/F {
			gsave
			180 rotate
			do_fillrighttriangle
			grestore
		} def

		% dwhrectangle
		/G {
			do_rectangle
			do_dwh_bars
		} def

		% rectangle
		/H {
			do_rectangle
		} def

		% fillrectangle
		/I {
			newpath
			420 270 moveto -420 270 lineto -420 -270 lineto
			420 -270 lineto
			fill
		} def

		% dwhisostriangle
		/J {
			do_isostriangle
			do_dwh_bars
		} def

		% isostriangle
		/K {
			do_isostriangle
		} def

		% fillisostriangle
		/L {
			newpath
			0 300 moveto -420 -270 lineto 420 -270 lineto
			fill
		} def

		% dwhpiewedge
		/M {
			do_piewedge
			do_dwh_bars
		} def

		% piewedge
		/N {
			do_piewedge
		} def

		% fillpiewedge
		/O {
			newpath
			0 -300 moveto 0 -244 514 35 145 arc
			fill
		} def

		% dwhsemicircle
		/P {
			do_semicircle
			do_dwh_bars
		} def

		% semicircle
		/Q {
			do_semicircle
		} def

		% fillsemicircle
		/R {
			newpath
			gsave
			1 570 420 div scale
			420 199 moveto 0 199 420 180 360 arc
			fill
			grestore
		} def

		% dwhslashhead
		/S {
			do_slashhead
			lwid setlinewidth
			-650 -600 moveto -650 600 lineto stroke
			650 -600 moveto 650 600 lineto stroke
		} def

		% slashhead
		/T {
			do_slashhead
		} def

		% fillslashhead
		/U {
			newpath
			200 setlinewidth
			-550 -600 moveto 550 600 lineto stroke
		} def

		% blankhead
		/V {
			%print nothing
		} def
	end

	/BuildChar {

		exch begin
		Encoding exch get

		dup
		Mcbbox1 exch get
		aload pop setcachedevice

		CharStrings exch get
		exec
		end
	} def
end


% General routines for printing any music character, invoked by each music
% character's specific routine below.  The scaling factor (default 1) needs
% to be multiplied by 10 to get the actual size.  These routines restore the
% preexisting current font when they are done.

/printmchar0 {
	gsave
	/musicchar exch def
	/Mfont0 findfont exch 10 mul scalefont setfont moveto 
	musicchar show
	grestore
} def
/printmchar1 {
	gsave
	/musicchar exch def
	/Mfont1 findfont exch 10 mul scalefont setfont moveto 
	musicchar show
	grestore
} def

% Define each music character name to be a routine that prints the character.
% Each character is to be invoked as in this example:
%	100 200 1 gclef		% at (100, 200), scale to default size & print

/gclef			{ (A) printmchar0 } def
/fclef			{ (B) printmchar0 } def
/cclef			{ (C) printmchar0 } def
/dblwhole		{ (D) printmchar0 } def
/1n			{ (E) printmchar0 } def
/2n			{ (F) printmchar0 } def
/4n			{ (G) printmchar0 } def
/upflag			{ (H) printmchar0 } def
/dnflag			{ (I) printmchar0 } def
/dwhrest		{ (J) printmchar0 } def
/1rest			{ (K) printmchar0 } def
/2rest			{ (L) printmchar0 } def
/4rest			{ (M) printmchar0 } def
/8rest			{ (N) printmchar0 } def
/16rest			{ (O) printmchar0 } def
/32rest			{ (P) printmchar0 } def
/64rest			{ (Q) printmchar0 } def
/128rest		{ (R) printmchar0 } def
/256rest		{ (S) printmchar0 } def
/dot			{ (T) printmchar0 } def
/nat			{ (U) printmchar0 } def
/sharp			{ (V) printmchar0 } def
/flat			{ (W) printmchar0 } def
/dblsharp		{ (X) printmchar0 } def
/dblflat		{ (Y) printmchar0 } def
/xnote			{ (Z) printmchar0 } def
/dwhdiamond		{ (a) printmchar0 } def
/diamond		{ (b) printmchar0 } def
/filldiamond		{ (c) printmchar0 } def
/up2n			{ (d) printmchar0 } def
/dn2n			{ (e) printmchar0 } def
/up4n			{ (f) printmchar0 } def
/dn4n			{ (g) printmchar0 } def
/up8n			{ (h) printmchar0 } def
/dn8n			{ (i) printmchar0 } def
/up16n			{ (j) printmchar0 } def
/dn16n			{ (k) printmchar0 } def
/up32n			{ (l) printmchar0 } def
/dn32n			{ (m) printmchar0 } def
/up64n			{ (n) printmchar0 } def
/dn64n			{ (o) printmchar0 } def
/up128n			{ (p) printmchar0 } def
/dn128n			{ (q) printmchar0 } def
/up256n			{ (r) printmchar0 } def
/dn256n			{ (s) printmchar0 } def
/com			{ (t) printmchar0 } def
/cut			{ (u) printmchar0 } def
/begped			{ (v) printmchar0 } def
/pedal			{ (w) printmchar0 } def
/endped			{ (x) printmchar0 } def
/dnbow			{ (y) printmchar0 } def
/upbow			{ (z) printmchar0 } def
/wedge			{ (1) printmchar0 } def
/uwedge			{ (2) printmchar0 } def
/ferm			{ (3) printmchar0 } def
/uferm			{ (4) printmchar0 } def
/sign			{ (5) printmchar0 } def
/coda			{ (6) printmchar0 } def
/mor			{ (7) printmchar0 } def
/invmor			{ (8) printmchar0 } def
/turn			{ (9) printmchar0 } def
/invturn		{ (0) printmchar0 } def
/acc_gt			{ (#) printmchar0 } def
/acc_hat		{ ($) printmchar0 } def
/acc_uhat		{ (") printmchar0 } def
/tr			{ (*) printmchar0 } def
/leg			{ (,) printmchar0 } def
/rr			{ (-) printmchar0 } def
/measrpt		{ (.) printmchar0 } def
/copyright		{ (/) printmchar0 } def
/dim			{ (`) printmchar0 } def
/halfdim		{ (') printmchar0 } def
/triangle		{ (^) printmchar0 } def
/qwhrest		{ (&) printmchar0 } def
/ll1rest		{ (!) printmchar0 } def
/ll2rest		{ (@) printmchar0 } def
/dwhrighttriangle	{ (A) printmchar1 } def
/righttriangle		{ (B) printmchar1 } def
/fillrighttriangle	{ (C) printmchar1 } def
/udwhrighttriangle	{ (D) printmchar1 } def
/urighttriangle		{ (E) printmchar1 } def
/ufillrighttriangle	{ (F) printmchar1 } def
/dwhrectangle		{ (G) printmchar1 } def
/rectangle		{ (H) printmchar1 } def
/fillrectangle		{ (I) printmchar1 } def
/dwhisostriangle	{ (J) printmchar1 } def
/isostriangle		{ (K) printmchar1 } def
/fillisostriangle	{ (L) printmchar1 } def
/dwhpiewedge		{ (M) printmchar1 } def
/piewedge		{ (N) printmchar1 } def
/fillpiewedge		{ (O) printmchar1 } def
/dwhsemicircle		{ (P) printmchar1 } def
/semicircle		{ (Q) printmchar1 } def
/fillsemicircle		{ (R) printmchar1 } def
/dwhslashhead		{ (S) printmchar1 } def
/slashhead		{ (T) printmchar1 } def
/fillslashhead		{ (U) printmchar1 } def
/blankhead		{ (V) printmchar1 } def


% Define routines for Mup output other than music characters.

/stepsize 3 def	   % define a step size as 3 points (at default magnification)

% x1 y1 x2 lines dist staffscale staff
%		draw a staff starting at x1, y1 and extending to x2 with "lines"
%		lines, 2*dist*stepsize apart, scaled by staffscale
/staff {
	/staffscale exch def
	/dist exch def
	/lines exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	0.7 staffscale mul setlinewidth
	1 lines sub  2  lines 1 sub {	% loop from bottom line to top line
		dup stepsize mul staffscale mul dist mul y1 add x1 exch moveto
		stepsize mul staffscale mul dist mul y1 add x2 exch lineto stroke
	} for
} def

% x y1 y2 bracket	draw a bracket; y1 is the top
/bracket {
	/y2 exch def
	/y1 exch def
	/x exch def
	gsave
	3 setlinewidth
	x 2 sub y1 1 add moveto
	x 2 sub y2 1 sub lineto
	stroke
	x 2 sub y1 1 add moveto
	x 1 sub y1 1 add   x 3 add y1 1 add   x 5 add y1 6 add   curveto
	x 6 add y1 5 add lineto
	x 5 add y1 2 add   x 1 add y1 2 sub   x 2 sub y1 2 sub   curveto
	fill
	x 2 sub y2 1 sub moveto
	x 1 sub y2 1 sub   x 3 add y2 1 sub   x 5 add y2 6 sub   curveto
	x 6 add y2 5 sub lineto
	x 5 add y2 2 sub   x 1 add y2 2 add   x 2 sub y2 2 add   curveto
	fill
	grestore
} def

% x y1 y2 right repeatbracket	draw a bracket for a repeat; y1 is the top,
%				right==1 means facing to the right
/repeatbracket {
	/right exch def
	/y2 exch def
	/y1 exch def
	/x exch def
	gsave
	right 0 eq {
		x y1 y2 add 2 div translate
		180 rotate
		0 x sub 0 y1 y2 add 2 div sub translate
	} if
	x 4.5 sub y1 1 add moveto
	x 0 sub y1 1 add   x 2 add y1 1 add   x 6 add y1 5 add   curveto
	x 6 add y1 4 add lineto
	x 6 add y1 2 add   x 1 add y1 2 sub   x 4.5 sub y1 1.5 sub   curveto
	fill
	x 4.5 sub y2 1 sub moveto
	x 0 sub y2 1 sub   x 2 add y2 1 sub   x 6 add y2 5 sub   curveto
	x 6 add y2 4 sub lineto
	x 6 add y2 2 sub   x 1 add y2 2 add   x 4.5 sub y2 1.5 add   curveto
	fill
	grestore
} def

% x y1 y2 brace		draw a brace; y1 is the top
/brace {
	/y2 exch def
	/y1 exch def
	/x exch def
	gsave
	x 6 sub y1 y2 add 2 div translate
	/topy y1 y2 sub 2 div 1 sub def
	0.667 1 scale
	0 1 1 {
		pop
		%0 topy moveto 0 0 lineto stroke
		0 0 moveto
		16 topy 0.2 mul   -11 topy 0.6 mul   8 topy   curveto
		8.7 topy lineto
		-7 topy 0.7 mul   20 topy 0.3 mul   1 0   curveto
		fill
		1 -1 scale	% flip to do bottom half
	} for
	grestore
} def

% endx endy wavy staffscale	draw a wavy line from current point to here,
%				scaled by staffscale
/wavy {
	/staffscale exch def
	/endy exch def		% define the end point of the line
	/endx exch def
	currentpoint		% line starts at current point
	/begy exch def		% define the beginning point of the line
	/begx exch def
	gsave
	/dx endx begx sub def	% find delta x and delta y
	/dy endy begy sub def
	/r dx dx mul dy dy mul add sqrt def	% hypotenuse
	/theta dy dx atan def			% angle with positive x axis
	begx begy translate	% change axes so that we can draw the line
	theta rotate		%   from (0, 0) to (r, 0)
	staffscale staffscale scale	% scale everything by staffscale
	/scaledr r staffscale div def	% but scale r in reverse to keep length

	% Each outer loop draws one cycle of the squiggle.  It continues until
	% we are at or beyond the desired end point.
	0 0 moveto
	0 6 scaledr {
		gsave
		% first loop draws left half of squiggle; second draws right
		0 1 1 {
			0.0 0.4 moveto
			2.0 1.9 3.4 2.3 3.9 0.0 curveto
			2.1 0.0 lineto
			1.9 0.8 1.4 0.7 0.0 -0.4 curveto
			fill
			pop 180 rotate -6 0 translate
		} for
		grestore

		pop 6 0 translate	% shift axes right one squiggle
	} for

	grestore
} def

% x y space frets fretno numvert curvel curver [ f1 f2 f3 ... ] grid
%				print a guitar grid diagram
/grid {
	/grid_positions exch def % 0="o", -1="x", -2=nothing, positive=dot
	/curver exch def	% right string for curve, 0 if none
	/curvel exch def	% left string for curve, 0 if none
	/numvert exch def	% vertical position to print fretno, 0 if none
	/fretno exch def	% fret no. to print at right, 0 if none
	/frets exch def		% number of fret lines
	/space exch def		% points between two neighboring lines
	/y exch def		% y coord of top fret line
	/x exch def		% x coord of left strings

	gsave
	/strings grid_positions length def	% number of strings
	/lmarky 0.4 space mul y add def		% lowest Y of a "o" or "x"
	space 10 div setlinewidth
	2 setlinecap

	% draw the lines of the grid
	0  1  strings 1 sub {	% loop from left string to right string
		dup space mul x add y moveto
		space mul x add frets 1 sub space mul y exch sub lineto stroke
	} for
	0  -1  1 frets sub {	% loop from top fret (nut) to bottom fret
		dup space mul y add x exch moveto
		space mul y add strings 1 sub space mul x add exch lineto stroke
	} for

	% draw the curved line if there is one
	curvel 0 gt {
		% within strings curvel to curver, find smallest positive fret
		/minfret 1000 def
		curvel 1 curver {
			/strno exch def
			/grid_p grid_positions strno 1 sub get def
			grid_p 0 gt grid_p minfret lt and {
				/minfret grid_p def
			} if
		} for

		% if curve goes above top fret, other marks must be higher
		minfret 1 eq {
			/hmarky 1.2 space mul y add def
		} {
			/hmarky lmarky def
		} ifelse

		/strdiff curver curvel sub def
		space 8 div setlinewidth

		% set endpoint coords of curve; higher if curve is short
		/curvex1 curvel 1 sub space mul x add def
		/curvex2 curver 1 sub space mul x add def
		/curvey 1 minfret sub space mul y add def
		strdiff 3 lt {
			/curvey 0.2 strdiff div space mul curvey add def
		} if

		% move to left end, set other points, draw curve
		curvex1 curvey moveto

		curvex1 curvex2 curvex1 sub 3 div add
		curvey space 0.4 strdiff sqrt mul mul add

		curvex2 curvex2 curvex1 sub 3 div sub
		curvey space 0.4 strdiff sqrt mul mul add

		curvex2 curvey curveto stroke
	} if

	space 10 div setlinewidth

	% draw dots and x and o marks
	0  1  strings 1 sub {	% loop from left string to right string
		/strno exch def	% first string is 0
		/grid_p grid_positions strno get def
		/strx strno space mul x add def

		% set Y of mark higher if curved line covers this string
		strno 1 add curvel ge  strno 1 add curver le  and {
			/marky hmarky def
		} {
			/marky lmarky def
		} ifelse

		grid_p -1 eq {		% draw an X above the string
			/xhwid space 3 div def
			strx xhwid sub marky xhwid sub moveto
			strx xhwid add marky xhwid add lineto stroke
			strx xhwid sub marky xhwid add moveto
			strx xhwid add marky xhwid sub lineto stroke
		} if
		grid_p 0 eq {		% draw a circle above the string
			strx marky space 0.3 mul 0 360 arc stroke
		} if
		grid_p 1 ge {		% draw a dot by the proper fret
			strx y grid_p space mul sub space 3 div add
			space 3 div 0 360 arc fill
		} if
	} for

	% print "X fr" if requested
	fretno 0 gt {
		/Palatino-Roman findfont space 1.9 mul scalefont setfont
		x strings 0.5 sub space mul add
		y space numvert 0.3 add mul sub moveto
		fretno 2 string cvs show ( fr) show
	} if
	grestore
} def

% x1 y1 x2 y2 whitebox		draw a white rectangle with opposite
%				corners of (x1,y1) and (x2,y2)
/whitebox {
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	1.0 setgray
	newpath
	x1 y1 moveto
	x1 y2 lineto
	x2 y2 lineto
	x2 y1 lineto
	closepath
	fill
	stroke
	0.0 setgray
} def


/LineNum 0 def
/InputFile (unknown) def

% n linenum
/linenum {
	/LineNum exch def
} def

% (inputfilename) inputfile
/inputfile {
	/InputFile exch def
} def

% find size of Encoding and make a dictionary
% that size for bounding box information
mfont0 begin
/dictsize Encoding length def
mfont0 /Mcbbox0 dictsize dict put

% temporarily redefine printmchar0 to get code
5 dict begin
/printmchar0 { {} forall } def

Mcbbox0 Encoding gclef get [ 1790.0 0 -915.0 -1605.0 865.0 3015.0 ] put
Mcbbox0 Encoding fclef get [ 1840.0 0 -1015.0 -1705.0 815.0 655.0 ] put
Mcbbox0 Encoding cclef get [ 1540.0 0 -765.0 -1245.0 765.0 1255.0 ] put
Mcbbox0 Encoding dblwhole get [ 1090.0 0 -535.0 -605.0 545.0 615.0 ] put
Mcbbox0 Encoding 1n get [ 1080.0 0 -535.0 -335.0 535.0 345.0 ] put
Mcbbox0 Encoding 2n get [ 880.0 0 -435.0 -345.0 435.0 355.0 ] put
Mcbbox0 Encoding 4n get [ 840.0 0 -415.0 -335.0 415.0 345.0 ] put
Mcbbox0 Encoding upflag get [ 640.0 0 -335.0 -5.0 295.0 1715.0 ] put
Mcbbox0 Encoding dnflag get [ 640.0 0 -335.0 -1705.0 295.0 15.0 ] put
Mcbbox0 Encoding qwhrest get [ 340.0 0 -165.0 -605.0 165.0 615.0 ] put
Mcbbox0 Encoding dwhrest get [ 340.0 0 -165.0 -5.0 165.0 615.0 ] put
Mcbbox0 Encoding 1rest get [ 1540.0 0 -765.0 -15.0 765.0 645.0 ] put
Mcbbox0 Encoding 2rest get [ 1540.0 0 -765.0 -45.0 765.0 315.0 ] put
Mcbbox0 Encoding 4rest get [ 650.0 0 -345.0 -885.0 295.0 995.0 ] put
Mcbbox0 Encoding 8rest get [ 750.0 0 -305.0 -625.0 435.0 485.0 ] put
Mcbbox0 Encoding 16rest get [ 830.0 0 -415.0 -1215.0 405.0 485.0 ] put
Mcbbox0 Encoding 32rest get [ 940.0 0 -415.0 -1215.0 515.0 1085.0 ] put
Mcbbox0 Encoding 64rest get [ 1040.0 0 -515.0 -1515.0 515.0 1085.0 ] put
Mcbbox0 Encoding 128rest get [ 1140.0 0 -515.0 -1515.0 615.0 1685.0 ] put
Mcbbox0 Encoding 256rest get [ 1250.0 0 -625.0 -2115.0 615.0 1685.0 ] put
Mcbbox0 Encoding ll1rest get [ 840.0 0 -415.0 -15.0 415.0 625.0 ] put
Mcbbox0 Encoding ll2rest get [ 840.0 0 -415.0 -15.0 415.0 325.0 ] put
Mcbbox0 Encoding dot get [ 280.0 0 -135.0 -125.0 135.0 135.0 ] put
Mcbbox0 Encoding nat get [ 520.0 0 -255.0 -855.0 255.0 865.0 ] put
Mcbbox0 Encoding sharp get [ 700.0 0 -345.0 -935.0 345.0 945.0 ] put
Mcbbox0 Encoding flat get [ 580.0 0 -295.0 -405.0 275.0 1115.0 ] put
Mcbbox0 Encoding dblsharp get [ 720.0 0 -355.0 -345.0 355.0 355.0 ] put
Mcbbox0 Encoding dblflat get [ 1160.0 0 -585.0 -405.0 565.0 1115.0 ] put
Mcbbox0 Encoding xnote get [ 880.0 0 -435.0 -365.0 435.0 375.0 ] put
Mcbbox0 Encoding dwhdiamond get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox0 Encoding diamond get [ 880.0 0 -435.0 -305.0 435.0 315.0 ] put
Mcbbox0 Encoding filldiamond get [ 880.0 0 -435.0 -305.0 435.0 315.0 ] put
Mcbbox0 Encoding up2n get [ 880.0 0 -435.0 -345.0 435.0 2115.0 ] put
Mcbbox0 Encoding dn2n get [ 880.0 0 -435.0 -2105.0 435.0 355.0 ] put
Mcbbox0 Encoding up4n get [ 850.0 0 -415.0 -335.0 425.0 2115.0 ] put
Mcbbox0 Encoding dn4n get [ 840.0 0 -415.0 -2105.0 415.0 345.0 ] put
Mcbbox0 Encoding com get [ 1110.0 0 -585.0 -645.0 515.0 655.0 ] put
Mcbbox0 Encoding cut get [ 1110.0 0 -585.0 -905.0 515.0 915.0 ] put
Mcbbox0 Encoding begped get [ 470.0 0 -245.0 -45.0 215.0 615.0 ] put
Mcbbox0 Encoding pedal get [ 1040.0 0 -515.0 -45.0 515.0 675.0 ] put
Mcbbox0 Encoding endped get [ 480.0 0 -215.0 -45.0 255.0 615.0 ] put
Mcbbox0 Encoding dnbow get [ 810.0 0 -395.0 -5.0 405.0 915.0 ] put
Mcbbox0 Encoding upbow get [ 720.0 0 -355.0 -115.0 355.0 925.0 ] put
Mcbbox0 Encoding wedge get [ 340.0 0 -165.0 -5.0 165.0 515.0 ] put
Mcbbox0 Encoding uwedge get [ 340.0 0 -165.0 -5.0 165.0 515.0 ] put
Mcbbox0 Encoding ferm get [ 1640.0 0 -815.0 -5.0 815.0 1015.0 ] put
Mcbbox0 Encoding uferm get [ 1640.0 0 -815.0 -5.0 815.0 1015.0 ] put
Mcbbox0 Encoding sign get [ 1340.0 0 -665.0 -825.0 665.0 835.0 ] put
Mcbbox0 Encoding coda get [ 1640.0 0 -815.0 -855.0 815.0 865.0 ] put
Mcbbox0 Encoding mor get [ 1320.0 0 -655.0 -285.0 655.0 295.0 ] put
Mcbbox0 Encoding invmor get [ 1320.0 0 -655.0 -455.0 655.0 465.0 ] put
Mcbbox0 Encoding turn get [ 1300.0 0 -645.0 -335.0 645.0 345.0 ] put
Mcbbox0 Encoding invturn get [ 1300.0 0 -645.0 -335.0 645.0 345.0 ] put
Mcbbox0 Encoding acc_gt get [ 1170.0 0 -525.0 -345.0 635.0 355.0 ] put
Mcbbox0 Encoding acc_hat get [ 780.0 0 -385.0 -5.0 385.0 875.0 ] put
Mcbbox0 Encoding acc_uhat get [ 780.0 0 -385.0 -5.0 385.0 875.0 ] put
Mcbbox0 Encoding tr get [ 1440.0 0 -715.0 -5.0 715.0 1015.0 ] put
Mcbbox0 Encoding leg get [ 840.0 0 -415.0 -55.0 415.0 65.0 ] put
Mcbbox0 Encoding rr get [ 940.0 0 -465.0 -25.0 465.0 1035.0 ] put
Mcbbox0 Encoding dim get [ 540.0 0 -265.0 -15.0 265.0 905.0 ] put
Mcbbox0 Encoding halfdim get [ 760.0 0 -375.0 -15.0 375.0 1015.0 ] put
Mcbbox0 Encoding triangle get [ 800.0 0 -395.0 -45.0 395.0 785.0 ] put
Mcbbox0 Encoding measrpt get [ 1300.0 0 -645.0 -675.0 645.0 685.0 ] put
Mcbbox0 Encoding copyright get [ 920.0 0 -455.0 -45.0 455.0 855.0 ] put
Mcbbox0 Encoding up8n get [ 1390.0 0 -745.0 -335.0 635.0 2115.0 ] put
Mcbbox0 Encoding dn8n get [ 840.0 0 -415.0 -2105.0 415.0 345.0 ] put
Mcbbox0 Encoding up16n get [ 1390.0 0 -745.0 -335.0 635.0 2115.0 ] put
Mcbbox0 Encoding dn16n get [ 840.0 0 -415.0 -2105.0 415.0 345.0 ] put
Mcbbox0 Encoding up32n get [ 1390.0 0 -745.0 -335.0 635.0 2595.0 ] put
Mcbbox0 Encoding dn32n get [ 840.0 0 -415.0 -2585.0 415.0 345.0 ] put
Mcbbox0 Encoding up64n get [ 1390.0 0 -745.0 -335.0 635.0 3075.0 ] put
Mcbbox0 Encoding dn64n get [ 840.0 0 -415.0 -3065.0 415.0 345.0 ] put
Mcbbox0 Encoding up128n get [ 1390.0 0 -745.0 -335.0 635.0 3555.0 ] put
Mcbbox0 Encoding dn128n get [ 840.0 0 -415.0 -3545.0 415.0 345.0 ] put
Mcbbox0 Encoding up256n get [ 1390.0 0 -745.0 -335.0 635.0 3975.0 ] put
Mcbbox0 Encoding dn256n get [ 840.0 0 -415.0 -3965.0 415.0 345.0 ] put

end
end

/Mfont0 mfont0 definefont


% find size of Encoding and make a dictionary
% that size for bounding box information
mfont1 begin
/dictsize Encoding length def
mfont1 /Mcbbox1 dictsize dict put

% temporarily redefine printmchar1 to get code
5 dict begin
/printmchar1 { {} forall } def

Mcbbox1 Encoding dwhrighttriangle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding righttriangle get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding fillrighttriangle get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding udwhrighttriangle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding urighttriangle get [ 880.0 0 -435.0 -275.0 435.0 315.0 ] put
Mcbbox1 Encoding ufillrighttriangle get [ 880.0 0 -435.0 -275.0 435.0 315.0 ] put
Mcbbox1 Encoding dwhrectangle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding rectangle get [ 880.0 0 -435.0 -275.0 435.0 285.0 ] put
Mcbbox1 Encoding fillrectangle get [ 880.0 0 -435.0 -275.0 435.0 285.0 ] put
Mcbbox1 Encoding dwhisostriangle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding isostriangle get [ 880.0 0 -435.0 -275.0 435.0 315.0 ] put
Mcbbox1 Encoding fillisostriangle get [ 880.0 0 -435.0 -275.0 435.0 315.0 ] put
Mcbbox1 Encoding dwhpiewedge get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding piewedge get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding fillpiewedge get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding dwhsemicircle get [ 950.0 0 -465.0 -605.0 475.0 615.0 ] put
Mcbbox1 Encoding semicircle get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding fillsemicircle get [ 880.0 0 -435.0 -305.0 435.0 285.0 ] put
Mcbbox1 Encoding dwhslashhead get [ 1410.0 0 -695.0 -725.0 705.0 735.0 ] put
Mcbbox1 Encoding slashhead get [ 1380.0 0 -685.0 -725.0 685.0 735.0 ] put
Mcbbox1 Encoding fillslashhead get [ 1300.0 0 -645.0 -675.0 645.0 685.0 ] put
Mcbbox1 Encoding blankhead get [ 880.0 0 -435.0 -275.0 435.0 285.0 ] put

end
end

/Mfont1 mfont1 definefont

/flagsep 1.60 300 mul def	 % 1.60 stepsizes
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] >> setpagedevice
%%EndFeature
%%EndProlog
%%Page: 1 1
save
0.750000 0.750000 scale
%  S_SSV
(kaleidakustikon_9.mup) inputfile
7 linenum
%  S_SSV
15 linenum
%  S_SSV
18 linenum
%  S_SSV
21 linenum
%  S_FEED
27 linenum
88.79 948.94 768.00 5 1.000000 1.000000 staff
88.79 891.00 768.00 5 1.000000 1.000000 staff
87.79 960.94 879.00 brace
0.70 setlinewidth
88.79 960.94 moveto
88.79 879.00 lineto stroke
%  S_CLEFSIG
27 linenum
100.58 942.94 1.000000 gclef
100.83 897.00 1.000000 fclef
116.62 948.94 1.000000 flat
116.62 885.00 1.000000 flat
/NewCenturySchlbk-Bold findfont
16 scalefont
setfont
122.36 948.94 moveto
(3) show
/NewCenturySchlbk-Bold findfont
16 scalefont
setfont
122.36 937.02 moveto
(4) show
/NewCenturySchlbk-Bold findfont
16 scalefont
setfont
122.36 891.00 moveto
(3) show
/NewCenturySchlbk-Bold findfont
16 scalefont
setfont
122.36 879.08 moveto
(4) show
%  S_CHHEAD
27 linenum
%  S_STAFF
% staff 1
save
145.61 951.94 1.000000 4n
141.93 951.19 moveto
141.93 932.77 lineto stroke
156.20 948.94 1.000000 4n
152.52 948.19 moveto
152.52 930.70 lineto stroke
newpath
141.58 934.27 moveto
152.87 932.20 lineto
152.87 929.20 lineto
141.58 931.27 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
145.61 891.00 1.000000 4rest
restore
%  S_BAR
29 linenum
0.70 setlinewidth
167.37 960.94 moveto
167.37 936.94 lineto stroke
167.37 903.00 moveto
167.37 879.00 lineto stroke
%  S_CHHEAD
32 linenum
%  S_STAFF
% staff 1
save
175.90 951.94 1.000000 4n
172.22 951.19 moveto
172.22 920.38 lineto stroke
185.96 945.94 1.000000 4n
182.28 945.19 moveto
182.28 921.66 lineto stroke
196.03 939.94 1.000000 4n
192.35 939.19 moveto
192.35 922.93 lineto stroke
206.09 945.94 1.000000 4n
202.41 945.19 moveto
202.41 924.21 lineto stroke
216.16 951.94 1.000000 4n
212.47 951.19 moveto
212.47 925.48 lineto stroke
226.75 960.94 1.000000 4n
223.06 960.19 moveto
223.06 926.83 lineto stroke
newpath
171.87 921.88 moveto
223.41 928.33 lineto
223.41 925.33 lineto
171.87 918.88 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
175.90 876.00 1.000000 4n
0.70 setlinewidth
179.58 876.75 moveto
179.58 897.00 lineto stroke
196.03 909.00 1.000000 4n
189.80 909.00 moveto
202.26 909.00 lineto stroke
196.03 903.00 1.000000 4n
196.03 897.00 1.000000 4n
192.35 908.25 moveto
192.35 876.00 lineto stroke
216.16 909.00 1.000000 4n
209.92 909.00 moveto
222.39 909.00 lineto stroke
216.16 903.00 1.000000 4n
216.16 897.00 1.000000 4n
212.47 908.25 moveto
212.47 876.00 lineto stroke
restore
%  S_BAR
34 linenum
0.70 setlinewidth
237.91 960.94 moveto
237.91 936.94 lineto stroke
237.91 903.00 moveto
237.91 879.00 lineto stroke
%  S_CHHEAD
38 linenum
%  S_STAFF
% staff 1
save
246.44 966.94 1.000000 4n
240.21 966.94 moveto
252.68 966.94 lineto stroke
242.76 966.19 moveto
242.76 947.74 lineto stroke
256.51 960.94 1.000000 4n
252.83 960.19 moveto
252.83 944.08 lineto stroke
276.23 972.94 1.000000 4n
285.49 975.94 1.000000 dot
270.00 972.94 moveto
282.46 972.94 lineto stroke
270.00 966.94 moveto
282.46 966.94 lineto stroke
276.23 951.94 1.000000 4n
285.49 951.94 1.000000 dot
272.55 972.19 moveto
272.55 930.94 lineto stroke
305.88 960.94 1.000000 4n
302.20 960.19 moveto
302.20 939.94 lineto stroke
305.22 939.94 1.000000 upflag
newpath
242.41 949.24 moveto
253.18 945.58 lineto
253.18 942.58 lineto
242.41 946.24 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
246.44 876.00 1.000000 4n
0.70 setlinewidth
250.13 876.75 moveto
250.13 897.00 lineto stroke
263.85 885.00 0.750000 gclef
276.23 882.00 1.000000 4n
276.23 867.00 1.000000 4n
270.00 867.00 moveto
282.46 867.00 lineto stroke
270.00 873.00 moveto
280.46 873.00 lineto stroke
279.91 867.75 moveto
279.91 902.80 lineto stroke
286.29 885.00 1.000000 4n
286.29 873.00 1.000000 4n
281.56 873.00 moveto
292.52 873.00 lineto stroke
289.97 873.75 moveto
289.97 904.87 lineto stroke
296.36 888.00 1.000000 4n
296.36 882.00 1.000000 4n
300.04 882.75 moveto
300.04 909.00 lineto stroke
newpath
279.56 904.30 moveto
290.32 906.37 lineto
290.32 903.37 lineto
279.56 901.30 lineto
closepath
fill
restore
%  S_BAR
40 linenum
0.70 setlinewidth
325.11 960.94 moveto
325.11 936.94 lineto stroke
325.11 903.00 moveto
325.11 879.00 lineto stroke
%  S_SSV
42 linenum
%  S_CLEFSIG
48 linenum
316.08 897.00 0.750000 fclef
%  S_CHHEAD
48 linenum
%  S_STAFF
% staff 1
save
335.65 969.94 1.000000 4n
329.41 966.94 moveto
341.88 966.94 lineto stroke
331.96 969.19 moveto
331.96 947.61 lineto stroke
345.71 963.94 1.000000 4n
342.03 963.19 moveto
342.03 945.38 lineto stroke
355.77 969.94 1.000000 4n
349.54 966.94 moveto
362.01 966.94 lineto stroke
352.09 969.19 moveto
352.09 943.15 lineto stroke
365.84 963.94 1.000000 4n
362.16 963.19 moveto
362.16 940.92 lineto stroke
375.90 957.94 1.000000 4n
372.22 957.19 moveto
372.22 938.68 lineto stroke
386.49 951.94 1.000000 4n
382.81 951.19 moveto
382.81 936.34 lineto stroke
newpath
331.61 949.11 moveto
383.16 937.84 lineto
383.16 934.84 lineto
331.61 946.11 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
335.65 888.00 1.000000 4n
0.70 setlinewidth
339.33 888.75 moveto
339.33 909.00 lineto stroke
355.77 909.00 1.000000 4n
349.54 909.00 moveto
362.01 909.00 lineto stroke
355.77 900.00 1.000000 4n
355.77 894.00 1.000000 4n
352.09 908.25 moveto
352.09 873.00 lineto stroke
375.90 909.00 1.000000 4n
369.67 909.00 moveto
382.13 909.00 lineto stroke
375.90 900.00 1.000000 4n
375.90 894.00 1.000000 4n
372.22 908.25 moveto
372.22 873.00 lineto stroke
restore
%  S_BAR
50 linenum
0.70 setlinewidth
397.66 960.94 moveto
397.66 936.94 lineto stroke
397.66 903.00 moveto
397.66 879.00 lineto stroke
%  S_CHHEAD
54 linenum
%  S_STAFF
% staff 1
save
406.89 948.94 1.000000 4n
416.15 951.94 1.000000 dot
403.21 948.19 moveto
403.21 927.94 lineto stroke
437.33 960.94 1.000000 4n
427.97 960.94 1.000000 sharp
433.64 960.19 moveto
433.64 941.21 lineto stroke
447.39 963.94 1.000000 4n
443.71 963.19 moveto
443.71 944.20 lineto stroke
457.98 969.94 1.000000 4n
451.75 966.94 moveto
464.21 966.94 lineto stroke
454.30 969.19 moveto
454.30 947.34 lineto stroke
newpath
433.29 942.71 moveto
454.65 948.84 lineto
454.65 945.84 lineto
433.29 939.71 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
406.89 888.00 1.000000 4n
0.70 setlinewidth
410.57 888.75 moveto
410.57 909.00 lineto stroke
420.45 909.00 1.000000 4n
414.22 909.00 moveto
426.69 909.00 lineto stroke
420.45 900.00 1.000000 4n
420.45 894.00 1.000000 4n
416.77 908.25 moveto
416.77 873.00 lineto stroke
447.39 909.00 1.000000 4n
441.16 909.00 moveto
453.62 909.00 lineto stroke
447.39 900.00 1.000000 4n
447.39 894.00 1.000000 4n
443.71 908.25 moveto
443.71 873.00 lineto stroke
restore
%  S_BAR
56 linenum
0.70 setlinewidth
469.15 960.94 moveto
469.15 936.94 lineto stroke
469.15 903.00 moveto
469.15 879.00 lineto stroke
%  S_CHHEAD
60 linenum
%  S_STAFF
% staff 1
save
477.68 945.94 1.000000 4n
474.00 945.19 moveto
474.00 929.44 lineto stroke
487.74 960.94 1.000000 4n
484.06 960.19 moveto
484.06 929.44 lineto stroke
497.81 957.94 1.000000 4n
494.12 957.19 moveto
494.12 929.44 lineto stroke
507.87 960.94 1.000000 4n
504.19 960.19 moveto
504.19 929.44 lineto stroke
517.93 951.94 1.000000 4n
514.25 951.19 moveto
514.25 929.44 lineto stroke
528.52 945.94 1.000000 4n
524.84 945.19 moveto
524.84 929.44 lineto stroke
newpath
473.65 930.94 moveto
525.19 930.94 lineto
525.19 927.94 lineto
473.65 927.94 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
477.68 876.00 1.000000 4n
0.70 setlinewidth
481.36 876.75 moveto
481.36 897.00 lineto stroke
497.81 909.00 1.000000 4n
491.57 909.00 moveto
504.04 909.00 lineto stroke
497.81 903.00 1.000000 4n
497.81 897.00 1.000000 4n
494.12 908.25 moveto
494.12 876.00 lineto stroke
517.93 909.00 1.000000 4n
511.70 909.00 moveto
524.17 909.00 lineto stroke
517.93 903.00 1.000000 4n
517.93 897.00 1.000000 4n
514.25 908.25 moveto
514.25 876.00 lineto stroke
restore
%  S_BAR
62 linenum
0.70 setlinewidth
539.69 960.94 moveto
539.69 936.94 lineto stroke
539.69 903.00 moveto
539.69 879.00 lineto stroke
%  S_CHHEAD
66 linenum
%  S_STAFF
% staff 1
save
548.22 942.94 1.000000 4n
551.90 943.69 moveto
551.90 972.87 lineto stroke
566.93 951.94 1.000000 4n
557.57 951.94 1.000000 sharp
570.61 952.69 moveto
570.61 971.79 lineto stroke
576.99 954.94 1.000000 4n
580.67 955.69 moveto
580.67 971.21 lineto stroke
587.05 948.94 1.000000 4n
590.74 949.69 moveto
590.74 970.63 lineto stroke
597.12 942.94 1.000000 4n
600.80 943.69 moveto
600.80 970.05 lineto stroke
607.71 939.94 1.000000 4n
611.39 940.69 moveto
611.39 969.44 lineto stroke
newpath
551.55 974.37 moveto
611.74 970.94 lineto
611.74 967.94 lineto
551.55 971.37 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
548.22 885.00 1.000000 4n
0.70 setlinewidth
551.90 885.75 moveto
551.90 906.00 lineto stroke
576.99 912.00 1.000000 4n
570.76 909.00 moveto
583.22 909.00 lineto stroke
576.99 906.00 1.000000 4n
573.31 911.25 moveto
573.31 885.00 lineto stroke
597.12 912.00 1.000000 4n
590.89 909.00 moveto
603.35 909.00 lineto stroke
597.12 906.00 1.000000 4n
593.44 911.25 moveto
593.44 885.00 lineto stroke
restore
%  S_BAR
68 linenum
0.70 setlinewidth
618.87 960.94 moveto
618.87 936.94 lineto stroke
618.87 903.00 moveto
618.87 879.00 lineto stroke
%  S_CHHEAD
72 linenum
%  S_STAFF
% staff 1
save
627.41 936.94 1.000000 4n
623.72 936.19 moveto
623.72 920.28 lineto stroke
637.47 969.94 1.000000 4n
631.24 966.94 moveto
643.70 966.94 lineto stroke
633.79 969.19 moveto
633.79 920.28 lineto stroke
657.19 963.94 1.000000 4n
653.51 963.19 moveto
653.51 920.28 lineto stroke
667.25 957.94 1.000000 4n
663.57 957.19 moveto
663.57 920.28 lineto stroke
677.32 951.94 1.000000 4n
673.64 951.19 moveto
673.64 920.28 lineto stroke
687.91 957.94 1.000000 4n
684.23 957.19 moveto
684.23 920.28 lineto stroke
newpath
623.37 921.78 moveto
684.58 921.78 lineto
684.58 918.78 lineto
623.37 918.78 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
627.41 888.00 1.000000 4n
0.70 setlinewidth
631.09 888.75 moveto
631.09 909.00 lineto stroke
644.81 885.00 0.750000 gclef
657.19 885.00 1.000000 4n
657.19 879.00 1.000000 4n
657.19 873.00 1.000000 4n
650.96 873.00 moveto
663.42 873.00 lineto stroke
660.87 873.75 moveto
660.87 906.00 lineto stroke
677.32 891.00 1.000000 4n
677.32 885.00 1.000000 4n
677.32 873.00 1.000000 4n
671.09 873.00 moveto
683.55 873.00 lineto stroke
681.00 873.75 moveto
681.00 912.00 lineto stroke
restore
%  S_BAR
74 linenum
0.70 setlinewidth
699.07 960.94 moveto
699.07 936.94 lineto stroke
699.07 903.00 moveto
699.07 879.00 lineto stroke
%  S_CHHEAD
77 linenum
%  S_STAFF
% staff 1
save
707.61 960.94 1.000000 4n
703.92 960.19 moveto
703.92 939.94 lineto stroke
736.28 948.94 1.000000 4rest
restore
%  S_STAFF
% staff 2
save
707.61 888.00 1.000000 4n
707.61 882.00 1.000000 4n
0.70 setlinewidth
711.29 882.75 moveto
711.29 909.00 lineto stroke
723.71 897.00 0.750000 fclef
736.28 897.00 1.000000 4n
732.59 896.25 moveto
732.59 876.00 lineto stroke
restore
%  S_BAR
79 linenum
758.50 951.94 1.000000 dot
758.50 945.94 1.000000 dot
762.50 960.94 moveto
762.50 936.94 lineto stroke
3.00 setlinewidth
766.50 960.94 moveto
766.50 936.94 lineto stroke
0.70 setlinewidth
758.50 894.00 1.000000 dot
758.50 888.00 1.000000 dot
762.50 903.00 moveto
762.50 879.00 lineto stroke
3.00 setlinewidth
766.50 903.00 moveto
766.50 879.00 lineto stroke
0.70 setlinewidth
%  S_FEED
83 linenum
50.50 807.00 768.00 5 1.000000 1.000000 staff
/Times-Roman findfont
11 scalefont
setfont
55.00 834.06 moveto
(10) show
50.50 738.50 768.00 5 1.000000 1.000000 staff
49.50 819.00 726.50 brace
50.50 819.00 moveto
50.50 726.50 lineto stroke
%  S_CLEFSIG
83 linenum
62.29 801.00 1.000000 gclef
62.54 744.50 1.000000 fclef
78.33 807.00 1.000000 flat
78.33 732.50 1.000000 flat
96.08 810.00 1.000000 dot
96.08 804.00 1.000000 dot
93.08 819.00 moveto
93.08 795.00 lineto stroke
3.00 setlinewidth
89.08 819.00 moveto
89.08 795.00 lineto stroke
0.70 setlinewidth
96.08 741.50 1.000000 dot
96.08 735.50 1.000000 dot
93.08 750.50 moveto
93.08 726.50 lineto stroke
3.00 setlinewidth
89.08 750.50 moveto
89.08 726.50 lineto stroke
0.70 setlinewidth
%  S_CHHEAD
83 linenum
%  S_STAFF
% staff 1
save
118.12 810.00 1.000000 2n
127.60 810.00 1.000000 dot
114.22 809.25 moveto
114.22 789.00 lineto stroke
restore
%  S_STAFF
% staff 2
save
118.12 735.50 1.000000 2n
127.60 735.50 1.000000 dot
0.70 setlinewidth
122.02 736.25 moveto
122.02 756.50 lineto stroke
restore
%  S_BAR
85 linenum
0.70 setlinewidth
164.09 819.00 moveto
164.09 795.00 lineto stroke
164.09 750.50 moveto
164.09 726.50 lineto stroke
%  S_CHHEAD
89 linenum
%  S_STAFF
% staff 1
save
172.87 828.00 1.000000 4n
182.13 828.00 1.000000 dot
166.63 825.00 moveto
179.10 825.00 lineto stroke
169.18 827.25 moveto
169.18 807.00 lineto stroke
207.40 834.00 1.000000 4n
201.17 831.00 moveto
212.16 831.00 lineto stroke
201.17 825.00 moveto
211.66 825.00 lineto stroke
203.72 833.25 moveto
203.72 808.50 lineto stroke
218.91 831.00 1.000000 4n
214.16 831.00 moveto
225.14 831.00 lineto stroke
214.66 825.00 moveto
225.14 825.00 lineto stroke
215.23 830.25 moveto
215.23 804.87 lineto stroke
231.26 816.00 1.000000 4n
227.58 815.25 moveto
227.58 800.97 lineto stroke
newpath
203.37 810.00 moveto
227.93 802.47 lineto
227.93 799.47 lineto
203.37 807.00 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
172.87 735.50 1.000000 4n
0.70 setlinewidth
169.18 734.75 moveto
169.18 717.54 lineto stroke
184.38 756.50 1.000000 4n
178.15 756.50 moveto
190.61 756.50 lineto stroke
180.70 755.75 moveto
180.70 721.73 lineto stroke
195.89 753.50 1.000000 4n
195.89 747.50 1.000000 4n
192.21 752.75 moveto
192.21 728.94 lineto stroke
207.40 756.50 1.000000 4n
201.17 756.50 moveto
213.63 756.50 lineto stroke
203.72 755.75 moveto
203.72 733.13 lineto stroke
218.91 753.50 1.000000 4n
218.91 747.50 1.000000 4n
215.23 752.75 moveto
215.23 728.79 lineto stroke
231.26 756.50 1.000000 4n
225.03 756.50 moveto
237.49 756.50 lineto stroke
227.58 755.75 moveto
227.58 733.28 lineto stroke
newpath
168.83 719.04 moveto
181.05 723.23 lineto
181.05 720.23 lineto
168.83 716.04 lineto
closepath
fill
newpath
191.86 730.44 moveto
204.07 734.63 lineto
204.07 731.63 lineto
191.86 727.44 lineto
closepath
fill
newpath
214.88 730.29 moveto
227.93 734.78 lineto
227.93 731.78 lineto
214.88 727.29 lineto
closepath
fill
restore
%  S_BAR
91 linenum
0.70 setlinewidth
245.19 819.00 moveto
245.19 795.00 lineto stroke
245.19 750.50 moveto
245.19 726.50 lineto stroke
%  S_CHHEAD
95 linenum
%  S_STAFF
% staff 1
save
253.97 819.00 1.000000 4n
250.29 818.25 moveto
250.29 802.50 lineto stroke
265.48 819.00 1.000000 4n
261.80 818.25 moveto
261.80 802.50 lineto stroke
276.99 840.00 1.000000 4n
270.76 837.00 moveto
283.22 837.00 lineto stroke
270.76 831.00 moveto
281.25 831.00 lineto stroke
270.76 825.00 moveto
281.25 825.00 lineto stroke
273.31 839.25 moveto
273.31 802.50 lineto stroke
288.50 831.00 1.000000 4n
283.75 831.00 moveto
294.74 831.00 lineto stroke
284.25 825.00 moveto
292.76 825.00 lineto stroke
284.82 830.25 moveto
284.82 802.50 lineto stroke
300.02 825.00 1.000000 4n
295.26 825.00 moveto
306.25 825.00 lineto stroke
296.33 824.25 moveto
296.33 802.50 lineto stroke
312.37 819.00 1.000000 4n
308.68 818.25 moveto
308.68 802.50 lineto stroke
newpath
249.94 804.00 moveto
309.03 804.00 lineto
309.03 801.00 lineto
249.94 801.00 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
253.97 735.50 1.000000 4n
0.70 setlinewidth
250.29 734.75 moveto
250.29 717.54 lineto stroke
265.48 756.50 1.000000 4n
259.25 756.50 moveto
271.71 756.50 lineto stroke
261.80 755.75 moveto
261.80 721.73 lineto stroke
276.99 750.50 1.000000 4n
276.99 744.50 1.000000 4n
273.31 749.75 moveto
273.31 728.00 lineto stroke
288.50 756.50 1.000000 4n
282.27 756.50 moveto
294.74 756.50 lineto stroke
284.82 755.75 moveto
284.82 728.00 lineto stroke
300.02 750.50 1.000000 4n
300.02 744.50 1.000000 4n
296.33 749.75 moveto
296.33 728.00 lineto stroke
312.37 756.50 1.000000 4n
306.13 756.50 moveto
318.60 756.50 lineto stroke
308.68 755.75 moveto
308.68 728.00 lineto stroke
newpath
249.94 719.04 moveto
262.15 723.23 lineto
262.15 720.23 lineto
249.94 716.04 lineto
closepath
fill
newpath
272.96 729.50 moveto
309.03 729.50 lineto
309.03 726.50 lineto
272.96 726.50 lineto
closepath
fill
restore
%  S_BAR
97 linenum
0.70 setlinewidth
326.30 819.00 moveto
326.30 795.00 lineto stroke
326.30 750.50 moveto
326.30 726.50 lineto stroke
%  S_CHHEAD
101 linenum
%  S_STAFF
% staff 1
save
335.29 810.00 1.000000 2n
331.39 809.25 moveto
331.39 789.00 lineto stroke
381.33 810.00 1.000000 4n
390.60 810.00 1.000000 dot
377.65 809.25 moveto
377.65 790.50 lineto stroke
401.87 810.00 1.000000 4n
398.19 809.25 moveto
398.19 790.50 lineto stroke
newpath
377.30 792.00 moveto
398.54 792.00 lineto
398.54 789.00 lineto
377.30 789.00 lineto
closepath
fill
newpath
397.84 797.00 moveto
389.77 797.00 lineto
389.77 794.00 lineto
397.84 794.00 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
335.29 735.50 1.000000 4n
0.70 setlinewidth
331.60 734.75 moveto
331.60 717.54 lineto stroke
346.80 756.50 1.000000 4n
340.57 756.50 moveto
353.03 756.50 lineto stroke
343.12 755.75 moveto
343.12 721.73 lineto stroke
358.31 750.50 1.000000 4n
358.31 744.50 1.000000 4n
354.63 749.75 moveto
354.63 728.00 lineto stroke
369.82 756.50 1.000000 4n
363.59 756.50 moveto
376.05 756.50 lineto stroke
366.14 755.75 moveto
366.14 728.00 lineto stroke
381.33 750.50 1.000000 4n
381.33 744.50 1.000000 4n
377.65 749.75 moveto
377.65 728.00 lineto stroke
392.60 756.50 1.000000 4n
386.37 756.50 moveto
398.84 756.50 lineto stroke
388.92 755.75 moveto
388.92 728.00 lineto stroke
newpath
331.25 719.04 moveto
343.47 723.23 lineto
343.47 720.23 lineto
331.25 716.04 lineto
closepath
fill
newpath
354.28 729.50 moveto
389.27 729.50 lineto
389.27 726.50 lineto
354.28 726.50 lineto
closepath
fill
restore
%  S_BAR
103 linenum
0.70 setlinewidth
411.72 819.00 moveto
411.72 795.00 lineto stroke
411.72 750.50 moveto
411.72 726.50 lineto stroke
%  S_CHHEAD
107 linenum
%  S_STAFF
% staff 1
save
420.49 795.00 1.000000 4n
424.17 795.75 moveto
424.17 828.03 lineto stroke
432.00 801.00 1.000000 4n
435.68 801.75 moveto
435.68 828.92 lineto stroke
443.51 813.00 1.000000 4n
447.19 813.75 moveto
447.19 829.81 lineto stroke
455.02 810.00 1.000000 4n
458.71 810.75 moveto
458.71 830.71 lineto stroke
466.54 807.00 1.000000 4n
470.22 807.75 moveto
470.22 831.60 lineto stroke
478.89 801.00 1.000000 4n
482.57 801.75 moveto
482.57 832.55 lineto stroke
newpath
423.82 829.53 moveto
482.92 834.05 lineto
482.92 831.05 lineto
423.82 826.53 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
420.49 735.50 1.000000 4n
0.70 setlinewidth
416.81 734.75 moveto
416.81 717.54 lineto stroke
432.00 756.50 1.000000 4n
425.77 756.50 moveto
438.23 756.50 lineto stroke
428.32 755.75 moveto
428.32 721.73 lineto stroke
443.51 753.50 1.000000 4n
443.51 741.50 1.000000 4n
447.19 742.25 moveto
447.19 773.00 lineto stroke
455.02 756.50 1.000000 4n
448.79 756.50 moveto
461.26 756.50 lineto stroke
458.71 757.25 moveto
458.71 773.00 lineto stroke
466.54 753.50 1.000000 4n
466.54 741.50 1.000000 4n
470.22 742.25 moveto
470.22 773.00 lineto stroke
478.89 756.50 1.000000 4n
472.65 756.50 moveto
485.12 756.50 lineto stroke
482.57 757.25 moveto
482.57 773.00 lineto stroke
newpath
416.46 719.04 moveto
428.67 723.23 lineto
428.67 720.23 lineto
416.46 716.04 lineto
closepath
fill
newpath
446.84 774.50 moveto
482.92 774.50 lineto
482.92 771.50 lineto
446.84 771.50 lineto
closepath
fill
restore
%  S_BAR
109 linenum
0.70 setlinewidth
492.82 819.00 moveto
492.82 795.00 lineto stroke
492.82 750.50 moveto
492.82 726.50 lineto stroke
%  S_CHHEAD
113 linenum
%  S_STAFF
% staff 1
save
501.59 798.00 1.000000 4n
505.27 798.75 moveto
505.27 826.50 lineto stroke
513.10 804.00 1.000000 4n
516.79 804.75 moveto
516.79 826.50 lineto stroke
524.62 810.00 1.000000 4n
528.30 810.75 moveto
528.30 826.50 lineto stroke
536.13 798.00 1.000000 4n
539.81 798.75 moveto
539.81 826.50 lineto stroke
547.64 804.00 1.000000 4n
551.32 804.75 moveto
551.32 826.50 lineto stroke
559.99 810.00 1.000000 4n
563.67 810.75 moveto
563.67 826.50 lineto stroke
newpath
504.92 828.00 moveto
564.02 828.00 lineto
564.02 825.00 lineto
504.92 825.00 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
501.59 735.50 1.000000 4n
0.70 setlinewidth
497.91 734.75 moveto
497.91 717.54 lineto stroke
513.10 756.50 1.000000 4n
506.87 756.50 moveto
519.34 756.50 lineto stroke
509.42 755.75 moveto
509.42 721.73 lineto stroke
524.62 750.50 1.000000 4n
524.62 744.50 1.000000 4n
520.93 749.75 moveto
520.93 728.00 lineto stroke
536.13 756.50 1.000000 4n
529.89 756.50 moveto
542.36 756.50 lineto stroke
532.44 755.75 moveto
532.44 728.00 lineto stroke
547.64 750.50 1.000000 4n
547.64 744.50 1.000000 4n
543.96 749.75 moveto
543.96 728.00 lineto stroke
559.99 756.50 1.000000 4n
553.76 756.50 moveto
566.22 756.50 lineto stroke
556.31 755.75 moveto
556.31 728.00 lineto stroke
newpath
497.56 719.04 moveto
509.77 723.23 lineto
509.77 720.23 lineto
497.56 716.04 lineto
closepath
fill
newpath
520.58 729.50 moveto
556.66 729.50 lineto
556.66 726.50 lineto
520.58 726.50 lineto
closepath
fill
restore
%  S_BAR
115 linenum
0.70 setlinewidth
573.92 819.00 moveto
573.92 795.00 lineto stroke
573.92 750.50 moveto
573.92 726.50 lineto stroke
%  S_CHHEAD
119 linenum
%  S_STAFF
% staff 1
save
582.69 819.00 1.000000 4n
579.01 818.25 moveto
579.01 798.00 lineto stroke
605.72 816.00 1.000000 4n
605.72 810.00 1.000000 4n
605.72 801.00 1.000000 4n
605.72 795.00 1.000000 4n
602.04 815.25 moveto
602.04 778.00 lineto stroke
628.74 819.00 1.000000 4n
628.74 810.00 1.000000 4n
628.74 804.00 1.000000 4n
628.74 798.00 1.000000 4n
625.06 818.25 moveto
625.06 780.00 lineto stroke
restore
%  S_STAFF
% staff 2
save
582.69 735.50 1.000000 4n
0.70 setlinewidth
579.01 734.75 moveto
579.01 718.50 lineto stroke
594.21 756.50 1.000000 4n
587.97 756.50 moveto
600.44 756.50 lineto stroke
590.52 755.75 moveto
590.52 719.94 lineto stroke
605.72 753.50 1.000000 4n
605.72 747.50 1.000000 4n
602.04 752.75 moveto
602.04 721.38 lineto stroke
617.23 756.50 1.000000 4n
611.00 756.50 moveto
623.46 756.50 lineto stroke
613.55 755.75 moveto
613.55 722.82 lineto stroke
628.74 750.50 1.000000 4n
628.74 744.50 1.000000 4n
625.06 749.75 moveto
625.06 724.26 lineto stroke
641.09 756.50 1.000000 4n
634.86 756.50 moveto
647.32 756.50 lineto stroke
637.41 755.75 moveto
637.41 725.81 lineto stroke
newpath
578.66 720.00 moveto
637.76 727.31 lineto
637.76 724.31 lineto
578.66 717.00 lineto
closepath
fill
restore
%  S_BAR
121 linenum
0.70 setlinewidth
655.02 819.00 moveto
655.02 795.00 lineto stroke
655.02 750.50 moveto
655.02 726.50 lineto stroke
%  S_CHHEAD
124 linenum
%  S_STAFF
% staff 1
save
664.01 822.00 1.000000 2n
664.01 816.00 1.000000 2n
664.01 810.00 1.000000 2n
664.01 801.00 1.000000 2n
660.11 821.25 moveto
660.11 782.00 lineto stroke
restore
%  S_STAFF
% staff 2
save
664.01 735.50 1.000000 4n
0.70 setlinewidth
660.33 734.75 moveto
660.33 717.94 lineto stroke
675.28 756.50 1.000000 4n
669.05 756.50 moveto
681.52 756.50 lineto stroke
671.60 755.75 moveto
671.60 720.91 lineto stroke
692.43 753.50 1.000000 4n
683.98 753.50 1.000000 nat
688.75 752.75 moveto
688.75 725.43 lineto stroke
704.78 756.50 1.000000 4n
698.55 756.50 moveto
711.01 756.50 lineto stroke
701.10 755.75 moveto
701.10 728.69 lineto stroke
newpath
659.98 719.44 moveto
701.45 730.19 lineto
701.45 727.19 lineto
659.98 716.44 lineto
closepath
fill
restore
%  S_BAR
126 linenum
731.71 810.00 1.000000 dot
731.71 804.00 1.000000 dot
717.71 810.00 1.000000 dot
717.71 804.00 1.000000 dot
3.00 setlinewidth
722.21 819.00 moveto
722.21 795.00 lineto stroke
727.21 819.00 moveto
727.21 795.00 lineto stroke
0.70 setlinewidth
731.71 741.50 1.000000 dot
731.71 735.50 1.000000 dot
717.71 741.50 1.000000 dot
717.71 735.50 1.000000 dot
3.00 setlinewidth
722.21 750.50 moveto
722.21 726.50 lineto stroke
727.21 750.50 moveto
727.21 726.50 lineto stroke
0.70 setlinewidth
%  S_CHHEAD
130 linenum
%  S_STAFF
% staff 1
save
739.24 807.00 1.000000 4rest
restore
%  S_STAFF
% staff 2
save
739.24 756.50 1.000000 4n
748.51 759.50 1.000000 dot
0.70 setlinewidth
733.01 756.50 moveto
745.47 756.50 lineto stroke
739.24 744.50 1.000000 4n
748.51 747.50 1.000000 dot
735.56 755.75 moveto
735.56 725.00 lineto stroke
757.80 756.50 1.000000 4n
751.57 756.50 moveto
764.03 756.50 lineto stroke
757.80 744.50 1.000000 4n
754.12 755.75 moveto
754.12 725.00 lineto stroke
newpath
735.21 726.50 moveto
754.47 726.50 lineto
754.47 723.50 lineto
735.21 723.50 lineto
closepath
fill
newpath
753.77 731.50 moveto
745.71 731.50 lineto
745.71 728.50 lineto
753.77 728.50 lineto
closepath
fill
restore
%  S_BAR
132 linenum
0.70 setlinewidth
767.65 819.00 moveto
767.65 795.00 lineto stroke
767.65 750.50 moveto
767.65 726.50 lineto stroke
%  S_FEED
135 linenum
50.50 654.50 768.00 5 1.000000 1.000000 staff
/Times-Roman findfont
11 scalefont
setfont
55.00 681.62 moveto
(19) show
50.50 599.04 768.00 5 1.000000 1.000000 staff
49.50 666.50 587.04 brace
50.50 666.50 moveto
50.50 587.04 lineto stroke
%  S_CLEFSIG
135 linenum
62.29 648.50 1.000000 gclef
62.54 605.04 1.000000 fclef
78.33 654.50 1.000000 flat
78.33 593.04 1.000000 flat
%  S_CHHEAD
135 linenum
%  S_STAFF
% staff 1
save
96.96 654.50 1.000000 4rest
111.30 654.50 1.000000 16rest
121.30 645.50 1.000000 4n
124.98 646.25 moveto
124.98 666.76 lineto stroke
131.36 648.50 1.000000 4n
135.05 649.25 moveto
135.05 668.83 lineto stroke
141.43 651.50 1.000000 4n
145.11 652.25 moveto
145.11 670.90 lineto stroke
151.49 654.50 1.000000 4n
155.17 655.25 moveto
155.17 678.19 lineto stroke
161.56 657.50 1.000000 4n
165.24 658.25 moveto
165.24 679.58 lineto stroke
171.62 660.50 1.000000 4n
175.30 661.25 moveto
175.30 680.97 lineto stroke
181.68 663.50 1.000000 4n
185.37 664.25 moveto
185.37 682.36 lineto stroke
newpath
124.63 668.26 moveto
145.46 672.40 lineto
145.46 669.40 lineto
124.63 665.26 lineto
closepath
fill
newpath
124.63 663.26 moveto
145.46 667.40 lineto
145.46 664.40 lineto
124.63 660.26 lineto
closepath
fill
newpath
154.82 679.69 moveto
185.72 683.86 lineto
185.72 680.86 lineto
154.82 676.69 lineto
closepath
fill
newpath
154.82 674.69 moveto
185.72 678.86 lineto
185.72 675.86 lineto
154.82 671.69 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
96.96 620.04 1.000000 4n
0.70 setlinewidth
90.73 617.04 moveto
103.13 617.04 lineto stroke
96.96 614.04 1.000000 4n
93.28 619.29 moveto
93.28 593.04 lineto stroke
111.30 623.04 1.000000 4n
105.07 623.04 moveto
117.53 623.04 lineto stroke
105.63 617.04 moveto
117.53 617.04 lineto stroke
111.30 617.04 1.000000 4n
105.13 617.04 moveto
117.53 617.04 lineto stroke
107.62 622.29 moveto
107.62 596.04 lineto stroke
151.49 617.04 1.000000 4n
145.26 617.04 moveto
157.72 617.04 lineto stroke
151.49 605.04 1.000000 4n
147.81 616.29 moveto
147.81 584.04 lineto stroke
restore
%  S_BAR
137 linenum
0.70 setlinewidth
190.22 666.50 moveto
190.22 642.50 lineto stroke
190.22 611.04 moveto
190.22 587.04 lineto stroke
%  S_CHHEAD
141 linenum
%  S_STAFF
% staff 1
save
199.60 666.50 1.000000 4n
208.87 669.50 1.000000 dot
195.92 665.75 moveto
195.92 645.50 lineto stroke
229.01 663.50 1.000000 4n
220.56 663.50 1.000000 nat
225.33 662.75 moveto
225.33 645.00 lineto stroke
239.08 666.50 1.000000 4n
235.39 665.75 moveto
235.39 645.00 lineto stroke
249.76 663.50 1.000000 4n
246.07 662.75 moveto
246.07 645.00 lineto stroke
newpath
224.98 646.50 moveto
246.42 646.50 lineto
246.42 643.50 lineto
224.98 643.50 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
199.60 593.04 1.000000 4n
0.70 setlinewidth
203.29 593.79 moveto
203.29 614.04 lineto stroke
213.94 620.04 1.000000 4n
207.71 617.04 moveto
220.17 617.04 lineto stroke
213.94 614.04 1.000000 4n
213.94 605.04 1.000000 4n
210.26 619.29 moveto
210.26 584.04 lineto stroke
239.08 620.04 1.000000 4n
232.84 617.04 moveto
245.31 617.04 lineto stroke
239.08 614.04 1.000000 4n
239.08 605.04 1.000000 4n
235.39 619.29 moveto
235.39 584.04 lineto stroke
restore
%  S_BAR
143 linenum
0.70 setlinewidth
261.37 666.50 moveto
261.37 642.50 lineto stroke
261.37 611.04 moveto
261.37 587.04 lineto stroke
%  S_CHHEAD
147 linenum
%  S_STAFF
% staff 1
save
269.90 666.50 1.000000 4n
266.22 665.75 moveto
266.22 643.39 lineto stroke
286.80 663.50 1.000000 4n
278.35 663.50 1.000000 nat
283.12 662.75 moveto
283.12 640.61 lineto stroke
296.87 669.50 1.000000 4n
293.18 668.75 moveto
293.18 638.96 lineto stroke
306.93 666.50 1.000000 4n
303.25 665.75 moveto
303.25 637.31 lineto stroke
316.99 651.50 1.000000 4n
313.31 650.75 moveto
313.31 635.66 lineto stroke
327.67 654.50 1.000000 4n
323.99 653.75 moveto
323.99 633.91 lineto stroke
newpath
265.87 644.89 moveto
324.34 635.41 lineto
324.34 632.41 lineto
265.87 641.89 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
269.90 593.04 1.000000 4n
0.70 setlinewidth
273.58 593.79 moveto
273.58 614.04 lineto stroke
296.87 620.04 1.000000 4n
290.63 617.04 moveto
303.10 617.04 lineto stroke
296.87 614.04 1.000000 4n
296.87 605.04 1.000000 4n
293.18 619.29 moveto
293.18 584.04 lineto stroke
316.99 620.04 1.000000 4n
310.76 617.04 moveto
323.23 617.04 lineto stroke
316.99 614.04 1.000000 4n
316.99 605.04 1.000000 4n
313.31 619.29 moveto
313.31 584.04 lineto stroke
restore
%  S_BAR
149 linenum
0.70 setlinewidth
339.28 666.50 moveto
339.28 642.50 lineto stroke
339.28 611.04 moveto
339.28 587.04 lineto stroke
%  S_CHHEAD
153 linenum
%  S_STAFF
% staff 1
save
348.45 666.50 1.000000 4n
357.93 669.50 1.000000 dot
352.13 667.25 moveto
352.13 683.50 lineto stroke
369.05 663.50 1.000000 4n
372.73 664.25 moveto
372.73 678.81 lineto stroke
379.11 657.50 1.000000 4n
382.79 658.25 moveto
382.79 675.85 lineto stroke
389.79 651.50 1.000000 4n
393.47 652.25 moveto
393.47 672.70 lineto stroke
newpath
372.38 680.31 moveto
393.82 674.20 lineto
393.82 671.20 lineto
372.38 677.31 lineto
closepath
fill
348.45 651.50 1.000000 2n
357.93 651.50 1.000000 dot
344.55 650.75 moveto
344.55 631.50 lineto stroke
restore
%  S_STAFF
% staff 2
save
348.45 623.04 1.000000 2n
357.93 626.04 1.000000 dot
0.70 setlinewidth
342.00 623.04 moveto
354.90 623.04 lineto stroke
342.00 617.04 moveto
354.90 617.04 lineto stroke
348.45 611.04 1.000000 2n
357.93 614.04 1.000000 dot
348.45 605.04 1.000000 2n
357.93 608.04 1.000000 dot
344.55 622.29 moveto
344.55 584.04 lineto stroke
restore
%  S_BAR
156 linenum
0.70 setlinewidth
401.40 666.50 moveto
401.40 642.50 lineto stroke
401.40 611.04 moveto
401.40 587.04 lineto stroke
%  S_CHHEAD
160 linenum
%  S_STAFF
% staff 1
save
409.93 645.50 1.000000 4n
413.61 646.25 moveto
413.61 673.04 lineto stroke
419.93 660.50 1.000000 16rest
429.93 645.50 1.000000 4n
433.61 646.25 moveto
433.61 673.04 lineto stroke
440.00 648.50 1.000000 4n
443.68 649.25 moveto
443.68 673.04 lineto stroke
450.06 651.50 1.000000 4n
453.74 652.25 moveto
453.74 679.04 lineto stroke
460.06 666.50 1.000000 16rest
470.06 651.50 1.000000 4n
473.74 652.25 moveto
473.74 679.04 lineto stroke
480.12 654.50 1.000000 4n
483.81 655.25 moveto
483.81 679.04 lineto stroke
490.19 657.50 1.000000 4n
486.51 656.75 moveto
486.51 633.20 lineto stroke
500.19 654.50 1.000000 16rest
510.19 657.50 1.000000 4n
506.51 656.75 moveto
506.51 633.20 lineto stroke
520.25 660.50 1.000000 4n
516.57 659.75 moveto
516.57 633.20 lineto stroke
newpath
413.26 674.54 moveto
444.03 674.54 lineto
444.03 671.54 lineto
413.26 671.54 lineto
closepath
fill
newpath
433.26 669.54 moveto
444.03 669.54 lineto
444.03 666.54 lineto
433.26 666.54 lineto
closepath
fill
newpath
433.26 664.54 moveto
444.03 664.54 lineto
444.03 661.54 lineto
433.26 661.54 lineto
closepath
fill
newpath
453.39 680.54 moveto
484.16 680.54 lineto
484.16 677.54 lineto
453.39 677.54 lineto
closepath
fill
newpath
473.39 675.54 moveto
484.16 675.54 lineto
484.16 672.54 lineto
473.39 672.54 lineto
closepath
fill
newpath
473.39 670.54 moveto
484.16 670.54 lineto
484.16 667.54 lineto
473.39 667.54 lineto
closepath
fill
newpath
486.16 634.70 moveto
516.92 634.70 lineto
516.92 631.70 lineto
486.16 631.70 lineto
closepath
fill
newpath
506.16 639.70 moveto
516.92 639.70 lineto
516.92 636.70 lineto
506.16 636.70 lineto
closepath
fill
newpath
506.16 644.70 moveto
516.92 644.70 lineto
516.92 641.70 lineto
506.16 641.70 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
409.93 584.04 1.000000 4n
0.70 setlinewidth
413.61 584.79 moveto
413.61 605.04 lineto stroke
450.06 623.04 1.000000 4n
443.83 623.04 moveto
456.29 623.04 lineto stroke
443.83 617.04 moveto
456.29 617.04 lineto stroke
450.06 617.04 1.000000 4n
443.83 617.04 moveto
456.29 617.04 lineto stroke
450.06 605.04 1.000000 4n
446.38 622.29 moveto
446.38 584.04 lineto stroke
490.19 623.04 1.000000 4n
483.96 623.04 moveto
496.42 623.04 lineto stroke
483.96 617.04 moveto
496.42 617.04 lineto stroke
490.19 617.04 1.000000 4n
483.96 617.04 moveto
496.42 617.04 lineto stroke
490.19 605.04 1.000000 4n
486.51 622.29 moveto
486.51 584.04 lineto stroke
restore
%  S_BAR
162 linenum
0.70 setlinewidth
528.78 666.50 moveto
528.78 642.50 lineto stroke
528.78 611.04 moveto
528.78 587.04 lineto stroke
%  S_CHHEAD
166 linenum
%  S_STAFF
% staff 1
save
537.32 663.50 1.000000 4n
533.63 662.75 moveto
533.63 642.50 lineto stroke
545.70 666.50 0.583333 4n
547.70 666.99 moveto
547.70 676.12 lineto stroke
552.40 663.50 0.583333 4n
554.41 663.99 moveto
554.41 676.12 lineto stroke
559.11 660.50 0.583333 4n
561.11 660.99 moveto
561.11 676.12 lineto stroke
565.81 663.50 0.583333 4n
567.81 663.99 moveto
567.81 676.12 lineto stroke
574.20 672.50 1.000000 4n
567.96 672.50 moveto
580.43 672.50 lineto stroke
570.51 671.75 moveto
570.51 652.40 lineto stroke
584.26 669.50 1.000000 4n
580.58 668.75 moveto
580.58 650.36 lineto stroke
594.32 666.50 1.000000 4n
590.64 665.75 moveto
590.64 648.33 lineto stroke
605.00 663.50 1.000000 4n
601.32 662.75 moveto
601.32 646.17 lineto stroke
newpath
570.16 653.90 moveto
601.67 647.67 lineto
601.67 644.67 lineto
570.16 650.90 lineto
closepath
fill
newpath
547.47 677.09 moveto
568.04 677.09 lineto
568.04 675.14 lineto
547.47 675.14 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
537.32 584.04 1.000000 4n
0.70 setlinewidth
541.00 584.79 moveto
541.00 605.04 lineto stroke
574.20 617.04 1.000000 4n
567.96 617.04 moveto
580.43 617.04 lineto stroke
574.20 611.04 1.000000 4n
574.20 605.04 1.000000 4n
570.51 616.29 moveto
570.51 584.04 lineto stroke
594.32 617.04 1.000000 4n
588.09 617.04 moveto
600.56 617.04 lineto stroke
594.32 611.04 1.000000 4n
594.32 605.04 1.000000 4n
590.64 616.29 moveto
590.64 584.04 lineto stroke
restore
%  S_BAR
168 linenum
0.70 setlinewidth
616.61 666.50 moveto
616.61 642.50 lineto stroke
616.61 611.04 moveto
616.61 587.04 lineto stroke
%  S_CHHEAD
172 linenum
%  S_STAFF
% staff 1
save
625.15 660.50 1.000000 4n
621.46 659.75 moveto
621.46 640.74 lineto stroke
635.21 675.50 1.000000 4n
628.98 672.50 moveto
641.44 672.50 lineto stroke
631.53 674.75 moveto
631.53 644.40 lineto stroke
644.81 654.50 1.000000 8rest
654.42 654.50 1.000000 4n
650.74 653.75 moveto
650.74 634.74 lineto stroke
664.48 669.50 1.000000 4n
660.80 668.75 moveto
660.80 638.40 lineto stroke
674.09 654.50 1.000000 8rest
683.69 666.50 1.000000 4n
680.01 665.75 moveto
680.01 638.33 lineto stroke
693.75 651.50 1.000000 4n
690.07 650.75 moveto
690.07 634.67 lineto stroke
704.05 654.50 1.000000 8rest
newpath
621.11 642.24 moveto
631.88 645.90 lineto
631.88 642.90 lineto
621.11 639.24 lineto
closepath
fill
newpath
621.11 647.24 moveto
631.88 650.90 lineto
631.88 647.90 lineto
621.11 644.24 lineto
closepath
fill
newpath
650.39 636.24 moveto
661.15 639.90 lineto
661.15 636.90 lineto
650.39 633.24 lineto
closepath
fill
newpath
650.39 641.24 moveto
661.15 644.90 lineto
661.15 641.90 lineto
650.39 638.24 lineto
closepath
fill
newpath
679.66 639.83 moveto
690.42 636.17 lineto
690.42 633.17 lineto
679.66 636.83 lineto
closepath
fill
newpath
679.66 644.83 moveto
690.42 641.17 lineto
690.42 638.17 lineto
679.66 641.83 lineto
closepath
fill
restore
%  S_STAFF
% staff 2
save
625.15 593.04 1.000000 4n
0.70 setlinewidth
628.83 593.79 moveto
628.83 614.04 lineto stroke
631.85 614.04 1.000000 dnflag
644.81 599.04 1.000000 8rest
654.42 620.04 1.000000 4n
648.19 617.04 moveto
660.65 617.04 lineto stroke
654.42 614.04 1.000000 4n
650.74 619.29 moveto
650.74 593.04 lineto stroke
653.76 593.04 1.000000 upflag
674.09 599.04 1.000000 8rest
683.69 623.04 1.000000 4n
677.46 623.04 moveto
689.92 623.04 lineto stroke
677.46 617.04 moveto
689.92 617.04 lineto stroke
683.69 605.04 1.000000 4n
680.01 622.29 moveto
680.01 584.04 lineto stroke
683.03 584.04 1.000000 upflag
704.05 599.04 1.000000 8rest
restore
%  S_BAR
174 linenum
0.70 setlinewidth
715.58 666.50 moveto
715.58 642.50 lineto stroke
715.58 611.04 moveto
715.58 587.04 lineto stroke
%  S_CHHEAD
177 linenum
%  S_STAFF
% staff 1
save
724.97 654.50 1.000000 4n
721.29 653.75 moveto
721.29 633.50 lineto stroke
741.00 654.50 1.000000 4rest
restore
%  S_STAFF
% staff 2
save
724.97 620.04 1.000000 4n
0.70 setlinewidth
718.74 617.04 moveto
731.20 617.04 lineto stroke
724.97 614.04 1.000000 4n
721.29 619.29 moveto
721.29 593.04 lineto stroke
741.00 593.04 1.000000 4n
744.68 593.79 moveto
744.68 614.04 lineto stroke
restore
%  S_BAR
179 linenum
758.50 657.50 1.000000 dot
758.50 651.50 1.000000 dot
762.50 666.50 moveto
762.50 642.50 lineto stroke
3.00 setlinewidth
766.50 666.50 moveto
766.50 642.50 lineto stroke
0.70 setlinewidth
758.50 602.04 1.000000 dot
758.50 596.04 1.000000 dot
762.50 611.04 moveto
762.50 587.04 lineto stroke
3.00 setlinewidth
766.50 611.04 moveto
766.50 587.04 lineto stroke
0.70 setlinewidth
%  Printing header/footer
/Times-Roman findfont
12 scalefont
setfont
348.82 998.35 moveto
(Kaleidakustikon Layer 9) show
/Times-Roman findfont
12 scalefont
setfont
408.00 985.61 moveto
showpage
restore
%%Trailer
%%DocumentFonts: /Times-Roman /NewCenturySchlbk-Bold /Mfont0 
%%Pages: 1
